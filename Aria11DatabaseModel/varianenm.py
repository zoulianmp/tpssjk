# coding: utf-8
from sqlalchemy import BigInteger, Column, DateTime, Float, ForeignKey, ForeignKeyConstraint, Index, Integer, LargeBinary, Numeric, SmallInteger, Table, Unicode, UnicodeText, VARBINARY, text
from sqlalchemy.orm import relationship
from sqlalchemy.dialects.mssql.base import UNIQUEIDENTIFIER
from sqlalchemy.ext.declarative import declarative_base


Base = declarative_base()
metadata = Base.metadata


class Diagnosi(Base):
    __tablename__ = 'Diagnosis'

    DiagnosisSer = Column(BigInteger, primary_key=True, nullable=False)
    PatientSer = Column(BigInteger, primary_key=True, nullable=False, index=True)
    DiagnosisId = Column(Unicode(16), index=True)
    DateStamp = Column(DateTime)
    DiagnosisTableName = Column(Unicode(64))
    DiagnosisCode = Column(Unicode(16))
    Description = Column(Unicode(254))
    HistologyTableName = Column(Unicode(64))
    HistologyCode = Column(Unicode(16))
    HisDescription = Column(Unicode(254))
    DiagnosisType = Column(Unicode(30))
    Comment = Column(Unicode(254))
    HstryUserName = Column(Unicode(32))
    HstryDateTime = Column(DateTime)
    HstryTaskName = Column(Unicode(32))
    HstryTimeStamp = Column(VARBINARY(8))
    ObjectStatus = Column(Unicode(16))


t_DiagnosisCode = Table(
    'DiagnosisCode', metadata,
    Column('DiagnosisTableName', Unicode(64)),
    Column('DiagnosisCode', Unicode(16), nullable=False),
    Column('LanguageId', Unicode(16)),
    Column('CacheKeySer', Integer),
    Column('Description', Unicode(254)),
    Column('HstryUserName', Unicode(32)),
    Column('HstryDateTime', DateTime),
    Column('HstryTaskName', Unicode(32)),
    Column('HstryTimeStamp', VARBINARY(8), nullable=False),
    Column('UpperDiagnosisCode', Unicode(16)),
    Column('UpperDescription', Unicode(254))
)


t_DiagnosisDetail = Table(
    'DiagnosisDetail', metadata,
    Column('DiagnosisSer', Integer),
    Column('PatientSer', Integer),
    Column('DiagnosisID', Unicode(16)),
    Column('DateStamp', DateTime),
    Column('LanguageId', Unicode(16)),
    Column('DiagnosisTableName', Unicode(64)),
    Column('DiagnosisCode', Unicode(16)),
    Column('DiagDescription', Unicode(254)),
    Column('HistologyTableName', Unicode(64)),
    Column('HistologyCode', Unicode(16)),
    Column('HistDescription', Unicode(254)),
    Column('DiagnosisType', Unicode(30)),
    Column('Comment', Unicode(254)),
    Column('HstryUserName', Unicode(32)),
    Column('HstryDateTime', DateTime),
    Column('HstryTaskName', Unicode(32)),
    Column('HstryTimeStamp', VARBINARY(8), nullable=False),
    Column('VoiceFileName', Unicode(254))
)


class FDAProduct(Base):
    __tablename__ = 'FDA_product'

    ApplNo = Column(Unicode(6), primary_key=True, nullable=False)
    ProductNo = Column(Unicode(3), primary_key=True, nullable=False)
    ProductMktStatus = Column(Integer, primary_key=True, nullable=False)
    Form = Column(Unicode(255))
    Dosage = Column(Unicode(240))
    TECode = Column(Unicode(100))
    ReferenceDrug = Column(Unicode(1))
    DrugName = Column(Unicode(125), index=True)
    Activeingred = Column(Unicode(255))


class FDBRegNdc(Base):
    __tablename__ = 'FDB_reg_ndc'

    fdb_ndc_id = Column(Integer, primary_key=True)
    region_code = Column(Integer, nullable=False)
    language_id = Column(Integer, nullable=False)
    fdb_agent_id = Column(Unicode(32), nullable=False)
    ndc_cd = Column(Unicode(11), nullable=False)
    dea_class_cd = Column(Unicode(1))
    status = Column(Unicode(1))


class FDBRegRxnorm(Base):
    __tablename__ = 'FDB_reg_rxnorm'

    fdb_rxnorm_id = Column(Integer, primary_key=True)
    region_code = Column(Integer, nullable=False)
    language_id = Column(Integer, nullable=False)
    fdb_agent_id = Column(Unicode(32), nullable=False)
    rxnorm_id = Column(Unicode(30), nullable=False)
    umls_concept_id = Column(Unicode(12))


class FDBRegStrength(Base):
    __tablename__ = 'FDB_reg_strengths'

    iStrengthId = Column(Integer, primary_key=True, nullable=False)
    region_code = Column(Integer, primary_key=True, nullable=False)
    language_id = Column(Integer, primary_key=True, nullable=False)
    form_text = Column(Unicode(255))
    strength = Column(Unicode(15))
    strength_uom = Column(Unicode(15))


class FDBRxnorm(Base):
    __tablename__ = 'FDB_rxnorm'

    fdb_rxnorm_id = Column(Integer, primary_key=True)
    fdb_agent_id = Column(Unicode(32), nullable=False)
    rxnorm_id = Column(Unicode(30), nullable=False)
    umls_concept_id = Column(Unicode(12))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


t_HistologyCode = Table(
    'HistologyCode', metadata,
    Column('HistologyTableName', Unicode(64)),
    Column('HistologyCode', Unicode(16), nullable=False),
    Column('LanguageId', Unicode(16)),
    Column('CacheKeySer', Integer),
    Column('Description', Unicode(254)),
    Column('HstryUserName', Unicode(32)),
    Column('HstryDateTime', DateTime),
    Column('HstryTaskName', Unicode(32)),
    Column('HstryTimeStamp', VARBINARY(8), nullable=False),
    Column('UpperHistologyCode', Unicode(16)),
    Column('UpperDescription', Unicode(254))
)


class MDDFDictBaseFormulation(Base):
    __tablename__ = 'MDDF_dictBaseFormulation'

    iBaseFormulationID = Column(Integer, primary_key=True)
    iChangeTypId = Column(Integer)
    dDateOfChange = Column(DateTime)
    sBaseFormulationText = Column(Unicode(50))
    sBaseFormulationAbbrev = Column(Unicode(20))


class MDDFDictQualifier(Base):
    __tablename__ = 'MDDF_dictQualifier'

    iQualifierId = Column(Integer, primary_key=True)
    iChangeTypeId = Column(Integer)
    dDateOfChange = Column(DateTime)
    sQualifierText = Column(Unicode(75))
    sQualifierAbbrev = Column(Unicode(20))


t_MDDF_dictRoutePrescribed = Table(
    'MDDF_dictRoutePrescribed', metadata,
    Column('iRoutePrescribedID', Integer, nullable=False, index=True),
    Column('iChangeTypeID', Integer),
    Column('dDateOfChange', DateTime),
    Column('sRoutePrescribedText', Unicode(70)),
    Column('sRoutePrescribedTextAbbrev', Unicode(30)),
    Column('sCommonTerm', Unicode(255))
)


class MDDFLinkRouteProduct(Base):
    __tablename__ = 'MDDF_linkRouteProduct'

    iProductID = Column(Integer, primary_key=True, nullable=False)
    iChangeTypeID = Column(Integer)
    dDateOfChange = Column(DateTime)
    iRoutePrescribedID = Column(Integer, primary_key=True, nullable=False)
    iRouteStatusID = Column(Integer, primary_key=True, nullable=False)
    iRouteMessageSetID = Column(Integer, primary_key=True, nullable=False)


class MDDFProduct(Base):
    __tablename__ = 'MDDF_product'

    iProductId = Column(Integer, primary_key=True)
    iChangeTypeId = Column(Integer)
    dDateOfChange = Column(DateTime)
    iCoreGenericProductId = Column(Integer)
    sPreferredDisplayName = Column(Unicode(255))
    sName = Column(Unicode(30))
    iQualifierId = Column(Integer)
    iFormulationId = Column(Integer)
    iStrengthId = Column(Integer)
    sOrderNo = Column(Unicode(15))
    iLegalId = Column(Integer)
    iCompanyId = Column(Integer)
    iStatusId = Column(Integer)
    iCSM = Column(Integer)
    iPrescribeById = Column(Integer)
    iSugarFree = Column(Integer)
    iProductTypeID = Column(Integer)
    iProductClassId = Column(Integer)
    iEWApplianceTarrifHierID = Column(Integer)
    iScotApplianceTarrifHierID = Column(Integer)
    iParallelImport = Column(Integer)
    dProdAddDate = Column(DateTime)
    dProdDiscDate = Column(DateTime)
    iBaseFormulationID = Column(Integer)
    iClinicalSetId = Column(Integer)
    iPersonalAdminID = Column(Integer)
    upper_drug_name = Column(Unicode(106))
    sname_with_qualifier = Column(Unicode(106))
    iHighRisk = Column(Integer)
    iPickListOrderKey = Column(Integer)


class MDDFRegForm(Base):
    __tablename__ = 'MDDF_reg_forms'

    iBaseFormulationId = Column(Integer, primary_key=True, nullable=False)
    region_code = Column(Integer, primary_key=True, nullable=False)
    language_id = Column(Integer, primary_key=True, nullable=False)
    form_text = Column(Unicode(255))


class MDDFRegProduct(Base):
    __tablename__ = 'MDDF_reg_product'
    __table_args__ = (
        Index('nc1_MDDF_reg_product', 'region_code', 'language_id', 'sPreferredDisplayName'),
        Index('nc2_MDDF_reg_product', 'region_code', 'language_id')
    )

    region_code = Column(Integer, primary_key=True, nullable=False)
    language_id = Column(Integer, primary_key=True, nullable=False)
    iProductClassId = Column(Integer)
    sPreferredDisplayName = Column(Unicode(255))
    sname_with_qualifier = Column(Unicode(255), index=True)
    upper_drug_name = Column(Unicode(255))
    iStatusId = Column(Integer)
    searchkey = Column(Unicode(32), primary_key=True, nullable=False)
    rtdfgenid = Column(Integer)
    rtgenid = Column(Integer)
    gcnseqno = Column(Integer)
    hicl = Column(Integer)
    iRoutePrescribedId = Column(Integer)
    iBaseFormulationId = Column(Integer)
    iStrengthId = Column(Integer)
    iCoreGenericProductId = Column(Numeric(12, 0), index=True)
    iCSM = Column(Integer)
    iPrescribeById = Column(Integer)
    ndc_cd = Column(Unicode(20))
    dea_class_cd = Column(Unicode(1))
    fdb_gpi = Column(Unicode(20))


class MDDFRegRoute(Base):
    __tablename__ = 'MDDF_reg_routes'

    iRoutePrescribedId = Column(Integer, primary_key=True, nullable=False)
    region_code = Column(Integer, primary_key=True, nullable=False)
    language_id = Column(Integer, primary_key=True, nullable=False)
    route_text = Column(Unicode(255))


t_PrmryDiagnosis = Table(
    'PrmryDiagnosis', metadata,
    Column('DiagnosisSer', BigInteger),
    Column('AltStage', Unicode(32)),
    Column('TStage', Unicode(32)),
    Column('NStage', Unicode(32)),
    Column('MStage', Unicode(32)),
    Column('StageMethod', Unicode(32)),
    Column('SummaryStage', Unicode(32)),
    Column('TumorSize', Numeric(11, 4)),
    Column('StageCriteria', Unicode(40))
)


class RXNATOMARCHIVE(Base):
    __tablename__ = 'RXNATOMARCHIVE'

    RXNATOMARCHIVE_ID = Column(Integer, primary_key=True)
    RXAUI = Column(Unicode(8), nullable=False, index=True)
    AUI = Column(Unicode(10))
    STR = Column(Unicode(4000), nullable=False)
    ARCHIVE_TIMESTAMP = Column(Unicode(280), nullable=False)
    CREATED_TIMESTAMP = Column(Unicode(280), nullable=False)
    UPDATED_TIMESTAMP = Column(Unicode(280), nullable=False)
    CODE = Column(Unicode(10))
    IS_BRAND = Column(Unicode(1))
    LAT = Column(Unicode(3))
    LAST_RELEASED = Column(Unicode(30))
    SAUI = Column(Unicode(20))
    VSAB = Column(Unicode(40))
    RXCUI = Column(Unicode(8), index=True)
    SAB = Column(Unicode(20))
    TTY = Column(Unicode(20))
    MERGED_TO_RXCUI = Column(Unicode(8), index=True)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RXNCONSO(Base):
    __tablename__ = 'RXNCONSO'

    RXCUI = Column(Unicode(8), primary_key=True, nullable=False, index=True)
    LAT = Column(Unicode(3), nullable=False)
    TS = Column(Unicode(1))
    LUI = Column(Unicode(8))
    STT = Column(Unicode(3))
    SUI = Column(Unicode(8))
    ISPREF = Column(Unicode(1))
    RXAUI = Column(Unicode(8), primary_key=True, nullable=False)
    SAUI = Column(Unicode(50))
    SCUI = Column(Unicode(50))
    SDUI = Column(Unicode(50))
    SAB = Column(Unicode(20), nullable=False)
    TTY = Column(Unicode(20), nullable=False, index=True)
    CODE = Column(Unicode(50), nullable=False, index=True)
    STR = Column(UnicodeText(1073741823), nullable=False)
    SRL = Column(Unicode(10))
    SUPPRESS = Column(Unicode(1))
    CVF = Column(Unicode(50))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RXNCONSOOCD(Base):
    __tablename__ = 'RXNCONSOOCD'

    RXCUI = Column(Unicode(8), primary_key=True, nullable=False, index=True)
    LAT = Column(Unicode(3), nullable=False)
    TS = Column(Unicode(1))
    LUI = Column(Unicode(8))
    STT = Column(Unicode(3))
    SUI = Column(Unicode(8))
    ISPREF = Column(Unicode(1))
    RXAUI = Column(Unicode(8), primary_key=True, nullable=False)
    SAUI = Column(Unicode(50))
    SCUI = Column(Unicode(50))
    SDUI = Column(Unicode(50))
    SAB = Column(Unicode(20), nullable=False)
    TTY = Column(Unicode(20), nullable=False, index=True)
    CODE = Column(Unicode(50), nullable=False, index=True)
    STR = Column(Unicode(3000), nullable=False)
    SRL = Column(Unicode(10))
    SUPPRESS = Column(Unicode(1))
    CVF = Column(Unicode(50))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RXNCUI(Base):
    __tablename__ = 'RXNCUI'

    cui1 = Column(Unicode(8), primary_key=True, nullable=False)
    ver_start = Column(Unicode(20))
    ver_end = Column(Unicode(20))
    cardinality = Column(Unicode(8))
    cui2 = Column(Unicode(8), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RXNCUICHANGE(Base):
    __tablename__ = 'RXNCUICHANGES'

    RXAUI = Column(Unicode(8), primary_key=True, nullable=False)
    CODE = Column(Unicode(50))
    SAB = Column(Unicode(20))
    TTY = Column(Unicode(20))
    STR = Column(Unicode(3000))
    OLD_RXCUI = Column(Unicode(8), primary_key=True, nullable=False)
    NEW_RXCUI = Column(Unicode(8), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RXNDOC(Base):
    __tablename__ = 'RXNDOC'

    RXNDOC_ID = Column(Integer, primary_key=True)
    DOCKEY = Column(Unicode(50), nullable=False)
    VALUE = Column(Unicode(1000))
    TYPE = Column(Unicode(50), nullable=False)
    EXPL = Column(Unicode(1000))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RXNREL(Base):
    __tablename__ = 'RXNREL'

    RXCUI1 = Column(Unicode(8), index=True)
    RXAUI1 = Column(Unicode(8), primary_key=True, nullable=False)
    STYPE1 = Column(Unicode(50))
    REL = Column(Unicode(4))
    RXCUI2 = Column(Unicode(8), index=True)
    RXAUI2 = Column(Unicode(8), primary_key=True, nullable=False)
    STYPE2 = Column(Unicode(50))
    RELA = Column(Unicode(100), index=True)
    RUI = Column(Unicode(10), primary_key=True, nullable=False)
    SRUI = Column(Unicode(50))
    SAB = Column(Unicode(20), nullable=False)
    SL = Column(Unicode(1000))
    DIR = Column(Unicode(1))
    RG = Column(Unicode(10))
    SUPPRESS = Column(Unicode(1))
    CVF = Column(Unicode(50))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RXNSAB(Base):
    __tablename__ = 'RXNSAB'

    VCUI = Column(Unicode(8), primary_key=True)
    RCUI = Column(Unicode(8))
    VSAB = Column(Unicode(20))
    RSAB = Column(Unicode(20), nullable=False)
    SON = Column(Unicode(3000))
    SF = Column(Unicode(20))
    SVER = Column(Unicode(20))
    VSTART = Column(Unicode(10))
    VEND = Column(Unicode(10))
    IMETA = Column(Unicode(10))
    RMETA = Column(Unicode(10))
    SLC = Column(Unicode(1000))
    SCC = Column(Unicode(1000))
    SRL = Column(Integer)
    TFR = Column(Integer)
    CFR = Column(Integer)
    CXTY = Column(Unicode(50))
    TTYL = Column(Unicode(100))
    ATNL = Column(Unicode(1000))
    LAT = Column(Unicode(3))
    CENC = Column(Unicode(20))
    CURVER = Column(Unicode(1))
    SABIN = Column(Unicode(1))
    SSN = Column(Unicode(3000))
    SCIT = Column(Unicode(4000))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RXNSAT(Base):
    __tablename__ = 'RXNSAT'

    RXNSAT_ID = Column(Integer, primary_key=True)
    RXCUI = Column(Unicode(8), index=True)
    LUI = Column(Unicode(8))
    SUI = Column(Unicode(8))
    RXAUI = Column(Unicode(8))
    STYPE = Column(Unicode(50))
    CODE = Column(Unicode(50))
    ATUI = Column(Unicode(11))
    SATUI = Column(Unicode(50))
    ATN = Column(Unicode(50), nullable=False, index=True)
    SAB = Column(Unicode(20), nullable=False)
    ATV = Column(Unicode(4000))
    SUPPRESS = Column(Unicode(1))
    CVF = Column(Unicode(50))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RXNSATOCD(Base):
    __tablename__ = 'RXNSATOCD'

    RXNSATOCD_ID = Column(Integer, primary_key=True)
    RXCUI = Column(Unicode(8), nullable=False, index=True)
    LUI = Column(Unicode(8))
    SUI = Column(Unicode(8))
    RXAUI = Column(Unicode(8))
    STYPE = Column(Unicode(50))
    CODE = Column(Unicode(50))
    ATUI = Column(Unicode(11))
    SATUI = Column(Unicode(50))
    ATN = Column(Unicode(50), nullable=False, index=True)
    SAB = Column(Unicode(20), nullable=False)
    ATV = Column(Unicode(4000))
    SUPPRESS = Column(Unicode(1))
    CVF = Column(Unicode(50))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RXNSTY(Base):
    __tablename__ = 'RXNSTY'

    RXCUI = Column(Unicode(8), primary_key=True, nullable=False)
    TUI = Column(Unicode(4), primary_key=True, nullable=False)
    STN = Column(Unicode(100))
    STY = Column(Unicode(50))
    ATUI = Column(Unicode(11))
    CVF = Column(Unicode(50))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RXNSTYOCD(Base):
    __tablename__ = 'RXNSTYOCD'

    RXCUI = Column(Unicode(8), primary_key=True, nullable=False)
    TUI = Column(Unicode(4), primary_key=True, nullable=False)
    STN = Column(Unicode(100))
    STY = Column(Unicode(50))
    ATUI = Column(Unicode(11))
    CVF = Column(Unicode(50))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


t_SecndryDiagnosis = Table(
    'SecndryDiagnosis', metadata,
    Column('DiagnosisSer', BigInteger),
    Column('MetastasisFlag', Integer)
)


t_Stage = Table(
    'Stage', metadata,
    Column('Stage', Unicode(32))
)


t_WeightTestResult = Table(
    'WeightTestResult', metadata,
    Column('PatientSer', BigInteger),
    Column('MeasurementDate', DateTime),
    Column('MeasurementValue', Numeric(11, 4)),
    Column('Unit', Unicode(40)),
    Column('MeasurementType', Unicode(30), nullable=False)
)


class AbnormalFlagCd(Base):
    __tablename__ = 'abnormal_flag_cd'

    abnormal_flag_cd = Column(Unicode(5), primary_key=True)
    abnormal_flag_desc = Column(Unicode(40))
    display_color = Column(Unicode(8))
    send_alert_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


t_access_log = Table(
    'access_log', metadata,
    Column('inst_id', Unicode(30), nullable=False),
    Column('app_name', Unicode(10), nullable=False),
    Column('access_cd', Integer, nullable=False),
    Column('access_cmt', Unicode(30)),
    Column('trans_log_userid', Unicode(10), nullable=False),
    Column('trans_log_tstamp', DateTime, nullable=False, index=True),
    Column('trans_log_inst_id', Unicode(30), nullable=False),
    Index('nc1_access_log', 'trans_log_inst_id', 'trans_log_userid', 'trans_log_tstamp')
)


class AddressCd(Base):
    __tablename__ = 'address_cd'

    address_cd = Column(Unicode(2), primary_key=True, nullable=False)
    stkh_cd = Column(Unicode(1), primary_key=True, nullable=False)
    address_cd_desc = Column(Unicode(40), nullable=False)
    dflt_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class AdmitCl(Base):
    __tablename__ = 'admit_cls'

    admit_cls = Column(Integer, primary_key=True)
    admit_cls_desc = Column(Unicode(40), nullable=False)
    admit_cls_cd = Column(Unicode(5), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    admit_cls_dsp = Column(Unicode(20))
    admit_cls_ind = Column(Unicode(1))
    seq_no = Column(Integer)
    inpatient_ind = Column(Unicode(1))


class AdmitPgm(Base):
    __tablename__ = 'admit_pgm'

    pgm_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    pgm_id = Column(Integer, primary_key=True, nullable=False)
    pgm_desc = Column(Unicode(40), nullable=False)
    pgm_cd = Column(Unicode(5), nullable=False)
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AdmnDoseFrqUnit(Base):
    __tablename__ = 'admn_dose_frq_unit'

    admn_dose_frq_unit = Column(Integer, primary_key=True)
    admn_dose_frq_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    min_req_dur = Column(Integer)
    min_req_dur_unit = Column(Integer)
    trans_trf_tstamp = Column(DateTime)
    short_desc = Column(Unicode(30))
    long_desc = Column(Unicode(30))
    no_of_admn_times = Column(Integer)
    time_specific_ind = Column(Unicode(1))
    active_entry_ind = Column(Unicode(1))


class AdmnDow(Base):
    __tablename__ = 'admn_dow'

    dow_frq_unit = Column(ForeignKey(u'dow_frq_unit.dow_frq_unit'), primary_key=True, nullable=False)
    admn_dow = Column(Integer, primary_key=True, nullable=False)
    interval_secs = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    dow_frq_unit1 = relationship(u'DowFrqUnit')


class AdmnFrqHhmm(Base):
    __tablename__ = 'admn_frq_hhmm'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    admn_frq_cd = Column(ForeignKey(u'admn_dose_frq_unit.admn_dose_frq_unit'), primary_key=True, nullable=False)
    admn_frq_x = Column(Integer, primary_key=True, nullable=False)
    admn_seq_no = Column(Integer, primary_key=True, nullable=False)
    admn_hhmm = Column(Unicode(4))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    admn_dose_frq_unit = relationship(u'AdmnDoseFrqUnit')


class AdmnRoute(Base):
    __tablename__ = 'admn_route'

    admn_route = Column(Integer, primary_key=True)
    admn_route_desc = Column(Unicode(40), nullable=False)
    medi_admn_route = Column(Unicode(2))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    combo_route_ind = Column(Unicode(1))
    trans_trf_tstamp = Column(DateTime)
    route_grp = Column(Integer)
    dsp_desc = Column(Unicode(40))
    hl7_admn_route = Column(Unicode(3))
    base_admn_route = Column(Integer)
    iRoutePrescribedID = Column(Integer)
    infusible_ind = Column(Unicode(1))
    FDA_admn_route = Column(Integer)


class AdmnRouteBill(Base):
    __tablename__ = 'admn_route_bill'

    admn_route_bill_id = Column(Integer, primary_key=True)
    admn_route = Column(Integer, nullable=False)
    infusion_typ = Column(Integer)
    bill_cd = Column(Unicode(30), nullable=False)
    bill_cd_typ_id = Column(Integer, nullable=False)
    agt_cls_bill_typ = Column(Integer)
    init_cd_prty = Column(Integer)
    start_dur = Column(Integer)
    end_dur = Column(Integer)
    unit_dur = Column(Integer)
    min_dur = Column(Integer)
    max_units_per_day = Column(Integer)
    time_based_bill_ind = Column(Unicode(1))
    concur_cd = Column(Unicode(1))
    partly_non_concur_ind = Column(Unicode(1))
    bill_route_grp = Column(Unicode(15))
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AdmnRouteExtDrugDb(Base):
    __tablename__ = 'admn_route_ext_drug_db'

    admn_route = Column(ForeignKey(u'admn_route.admn_route'), primary_key=True, nullable=False)
    ext_drug_db_id = Column(ForeignKey(u'ext_drug_db.ext_drug_db_id'), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    admn_route1 = relationship(u'AdmnRoute')
    ext_drug_db = relationship(u'ExtDrugDb')


class AgendaCatTyp(Base):
    __tablename__ = 'agenda_cat_typ'

    cat_name_typ = Column(Integer, primary_key=True)
    cat_desc = Column(Unicode(50), nullable=False)
    cat_seq = Column(Integer)
    visible_ind = Column(Unicode(1))
    cust_cat_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    task_area_typ = Column(Integer)
    cat_typ = Column(Unicode(1))
    agenda_init_ind = Column(Unicode(1))
    permit_del_ind = Column(Unicode(1))
    task_ind = Column(Unicode(1))
    visible_req_ind = Column(Unicode(1))


class AgendaStatusTyp(Base):
    __tablename__ = 'agenda_status_typ'

    cat_name_typ = Column(Integer, primary_key=True, nullable=False)
    cat_status = Column(Integer, primary_key=True, nullable=False)
    cat_desc = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class AgendaTask(Base):
    __tablename__ = 'agenda_task'

    agenda_task_id = Column(Integer, primary_key=True)
    description = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class AgendaTemplate(Base):
    __tablename__ = 'agenda_template'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    agenda_template_id = Column(Integer, primary_key=True, nullable=False)
    description = Column(Unicode(50), nullable=False)
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AgendaTemplateGroup(Base):
    __tablename__ = 'agenda_template_group'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'agenda_template_id'], [u'agenda_template.inst_id', u'agenda_template.agenda_template_id']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    agenda_template_id = Column(Integer, primary_key=True, nullable=False)
    agenda_template_group_id = Column(Integer, primary_key=True, nullable=False)
    description = Column(Unicode(50), nullable=False)
    seq_no = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'AgendaTemplate')


class AgendaTemplateTask(Base):
    __tablename__ = 'agenda_template_task'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'agenda_template_id', 'agenda_template_group_id'], [u'agenda_template_group.inst_id', u'agenda_template_group.agenda_template_id', u'agenda_template_group.agenda_template_group_id']),
        ForeignKeyConstraint(['inst_id', 'agenda_template_id'], [u'agenda_template.inst_id', u'agenda_template.agenda_template_id'])
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    agenda_template_id = Column(Integer, primary_key=True, nullable=False)
    agenda_template_task_id = Column(Integer, primary_key=True, nullable=False)
    agenda_task_id = Column(ForeignKey(u'agenda_task.agenda_task_id'), nullable=False)
    agenda_template_group_id = Column(Integer, nullable=False)
    description = Column(Unicode(50), nullable=False)
    seq_no = Column(Integer, nullable=False)
    customization_xml = Column(Unicode(1024), nullable=False)
    req_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    agenda_task = relationship(u'AgendaTask')
    inst = relationship(u'AgendaTemplateGroup')
    inst1 = relationship(u'AgendaTemplate')


class AgendaTemplateTaskUser(Base):
    __tablename__ = 'agenda_template_task_user'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'agenda_template_id', 'agenda_template_task_id'], [u'agenda_template_task.inst_id', u'agenda_template_task.agenda_template_id', u'agenda_template_task.agenda_template_task_id']),
        ForeignKeyConstraint(['user_inst_id', 'userid'], [u'userid.inst_id', u'userid.userid'])
    )

    user_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    agenda_template_id = Column(Integer, primary_key=True, nullable=False)
    agenda_template_task_id = Column(Integer, primary_key=True, nullable=False)
    seq_no = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'AgendaTemplateTask')
    user_inst = relationship(u'Userid')


class AgtBill(Base):
    __tablename__ = 'agt_bill'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    agt_bill_id = Column(Integer, primary_key=True, nullable=False)
    agt_name = Column(Unicode(50))
    route = Column(Integer)
    form = Column(Integer)
    dose_amt = Column(Numeric(11, 4))
    dose_uom = Column(Integer)
    bill_cd = Column(Unicode(30))
    bill_cd_typ_id = Column(Integer)
    bill_instance_id = Column(Integer)
    bill_qty = Column(Integer)
    fixed_qty_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AgtContraInd(Base):
    __tablename__ = 'agt_contra_ind'

    agt_name = Column(ForeignKey(u'agt_name.agt_name'), primary_key=True, nullable=False)
    agt_contra_ind_id = Column(Integer, primary_key=True, nullable=False)
    agt_contra_ind_typ = Column(ForeignKey(u'agt_contra_ind_typ.contra_ind_typ'), nullable=False)
    agt_contra_desc = Column(Unicode(50))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    agt_contra_ind_typ1 = relationship(u'AgtContraIndTyp')
    agt_name1 = relationship(u'AgtName')


class AgtContraIndTyp(Base):
    __tablename__ = 'agt_contra_ind_typ'

    contra_ind_typ = Column(Integer, primary_key=True)
    contra_ind_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AgtDosage(Base):
    __tablename__ = 'agt_dosage'

    agt_name = Column(ForeignKey(u'agt_name.agt_name'), primary_key=True, nullable=False)
    dosage_form = Column(ForeignKey(u'dosage_form.dosage_form'), primary_key=True, nullable=False)
    dose_level = Column(ForeignKey(u'dose_level.dose_level'), primary_key=True, nullable=False)
    lower_dose = Column(Numeric(11, 4))
    upper_dose = Column(Numeric(11, 4))
    dose_round_mthd = Column(ForeignKey(u'dose_round_mthd.dose_round_mthd'))
    qty_single_dose = Column(Integer)
    direct_drug_cost = Column(Numeric(8, 2))
    bsa_dose_flag = Column(Unicode(1))
    uom = Column(ForeignKey(u'unit_of_meas.uom'))
    reconstitution = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    take_as_directed_ind = Column(Unicode(1))

    agt_name1 = relationship(u'AgtName')
    dosage_form1 = relationship(u'DosageForm')
    dose_level1 = relationship(u'DoseLevel')
    dose_round_mthd1 = relationship(u'DoseRoundMthd')
    unit_of_mea = relationship(u'UnitOfMea')


class AgtDxReq(Base):
    __tablename__ = 'agt_dx_req'

    agt_name = Column(Unicode(50), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    agt_dx_req_group_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class AgtDxReqGroup(Base):
    __tablename__ = 'agt_dx_req_group'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    agt_dx_req_group_id = Column(Integer, primary_key=True, nullable=False)
    agt_dx_req_comp_id = Column(Integer, primary_key=True, nullable=False)
    from_icd_cd = Column(Unicode(16), nullable=False)
    to_icd_cd = Column(Unicode(16))
    cls_scheme_id = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class AgtFormulary(Base):
    __tablename__ = 'agt_formulary'
    __table_args__ = (
        Index('nc3_agt_formulary', 'inst_id', 'upper_agt_name', 'dosage_form', 'admn_route'),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    agt_formulary_id = Column(Integer, primary_key=True, nullable=False)
    agt_name = Column(Unicode(50), nullable=False)
    upper_agt_name = Column(Unicode(50), nullable=False, index=True)
    dosage_form = Column(Integer, nullable=False)
    admn_route = Column(Integer)
    strength = Column(Unicode(15))
    unit_of_measure = Column(Unicode(10))
    drug_desc_id = Column(Unicode(6))
    inst_drug_cd = Column(Unicode(30))
    upper_inst_drug_cd = Column(Unicode(30), index=True)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    round_mthd = Column(Integer)
    round_factor = Column(Numeric(11, 4))
    abs_max_dose = Column(Numeric(11, 4))
    max_bsa_dose = Column(Numeric(11, 4))
    strength_unit = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))
    concentration = Column(Unicode(15))
    default_concentration_ind = Column(Unicode(1))
    agt_prep_typ = Column(Integer)


class AgtFormularyDispLocMap(Base):
    __tablename__ = 'agt_formulary_disp_loc_map'

    agt_formulary_disp_loc_map_id = Column(Integer, primary_key=True)
    agt_formulary_disp_loc_id = Column(ForeignKey(u'xref_agt_formulary_disp_loc.agt_formulary_disp_loc_id'), ForeignKey(u'xref_agt_formulary_disp_loc.agt_formulary_disp_loc_id'), nullable=False)
    mapping_typ = Column(Unicode(2), nullable=False)
    mapping_cd = Column(Unicode(30), nullable=False)
    eff_date = Column(DateTime, nullable=False)
    term_date = Column(DateTime)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    agt_formulary_disp_loc = relationship(u'XrefAgtFormularyDispLoc', primaryjoin='AgtFormularyDispLocMap.agt_formulary_disp_loc_id == XrefAgtFormularyDispLoc.agt_formulary_disp_loc_id')
    agt_formulary_disp_loc1 = relationship(u'XrefAgtFormularyDispLoc', primaryjoin='AgtFormularyDispLocMap.agt_formulary_disp_loc_id == XrefAgtFormularyDispLoc.agt_formulary_disp_loc_id')


class AgtFormularyDoseBand(Base):
    __tablename__ = 'agt_formulary_dose_band'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    agt_formulary_id = Column(Integer, primary_key=True, nullable=False)
    dose_band_id = Column(Integer, primary_key=True, nullable=False)
    dose_range_min = Column(Numeric(11, 4))
    dose_range_max = Column(Numeric(11, 4))
    order_dose = Column(Numeric(11, 4))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AgtFormularyGroup(Base):
    __tablename__ = 'agt_formulary_group'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    agt_formulary_group_id = Column(Integer, primary_key=True, nullable=False)
    agt_formulary_group_desc = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class AgtFormularyGroupAgt(Base):
    __tablename__ = 'agt_formulary_group_agt'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'agt_formulary_group_id'], [u'agt_formulary_group.inst_id', u'agt_formulary_group.agt_formulary_group_id']),
        ForeignKeyConstraint(['inst_id', 'agt_formulary_id'], [u'agt_formulary.inst_id', u'agt_formulary.agt_formulary_id'])
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    agt_formulary_group_id = Column(Integer, primary_key=True, nullable=False)
    agt_formulary_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'AgtFormularyGroup')
    inst1 = relationship(u'AgtFormulary')


class AgtFormularyLblDtl(Base):
    __tablename__ = 'agt_formulary_lbl_dtl'

    agt_formulary_lbl_dtl_id = Column(Integer, primary_key=True)
    agt_name = Column(Unicode(50), nullable=False)
    dosage_form = Column(Integer, nullable=False)
    admn_route = Column(Integer, nullable=False)
    strength = Column(Unicode(15))
    strength_unit = Column(Integer)
    drug_batch_lbl_dtl_id = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class AgtGrp(Base):
    __tablename__ = 'agt_grp'

    agt_grp_id = Column(Integer, primary_key=True)
    agt_grp_desc = Column(Unicode(255), nullable=False)
    expiry_dur = Column(Integer, nullable=False)
    expiry_dur_unit = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_inst_id = Column(Unicode(30))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_minst_id = Column(Unicode(30))
    trans_log_mtstamp = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)


class AgtGrpAgt(Base):
    __tablename__ = 'agt_grp_agt'

    agt_grp_agt_id = Column(Integer, primary_key=True)
    agt_grp_id = Column(Integer, nullable=False)
    agt_name = Column(Unicode(50), nullable=False)
    dosage_form = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_inst_id = Column(Unicode(30))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_minst_id = Column(Unicode(30))
    trans_log_mtstamp = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)
    comp_seq_no = Column(Integer)


class AgtInfo(Base):
    __tablename__ = 'agt_info'

    agt_info_id = Column(Integer, primary_key=True)
    inst_id = Column(Unicode(30), nullable=False)
    agt_formulary_id = Column(Integer)
    agt_info_typ = Column(Integer, nullable=False)
    agt_info_txt = Column(UnicodeText(1073741823))
    agt_grp_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AgtLookup(Base):
    __tablename__ = 'agt_lookup'

    drug_desc_id = Column(Unicode(6), primary_key=True, nullable=False)
    agt_lookup_typ_id = Column(ForeignKey(u'agt_lookup_typ.agt_lookup_typ_id'), primary_key=True, nullable=False)
    external_cd = Column(Unicode(30), nullable=False)
    short_name = Column(Unicode(30))
    full_name = Column(Unicode(250))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    agt_lookup_typ = relationship(u'AgtLookupTyp')


class AgtLookupTyp(Base):
    __tablename__ = 'agt_lookup_typ'

    agt_lookup_typ_id = Column(Integer, primary_key=True)
    agt_lookup_typ_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AgtManufacturer(Base):
    __tablename__ = 'agt_manufacturer'

    agt_manufacturer_id = Column(Integer, primary_key=True)
    manufacturer_name = Column(Unicode(30))
    full_name = Column(Unicode(250))
    mvx_code = Column(Unicode(5))
    manufacturer_grp = Column(Unicode(10))
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AgtName(Base):
    __tablename__ = 'agt_name'

    agt_name = Column(Unicode(50), primary_key=True)
    agt_typ = Column(ForeignKey(u'agt_typ.agt_typ'), nullable=False)
    per_meter_sq = Column(Unicode(1))
    medi_drug_name = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    medi_active_ind = Column(Unicode(1))
    active_chg_date = Column(DateTime)
    agt_category = Column(Unicode(14))

    agt_typ1 = relationship(u'AgtTyp')


class AgtNameTran(Base):
    __tablename__ = 'agt_name_trans'

    agt_name = Column(Unicode(50), primary_key=True)
    medi_drug_name = Column(Unicode(30), index=True)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    pref_agt_name = Column(Unicode(50), index=True)
    agt_cls_desc = Column(Unicode(20))
    agt_name_abrv = Column(Unicode(10))
    agt_cls_typ = Column(Integer)
    agt_cls_bill_typ = Column(Integer)
    agt_cls_use_typ = Column(Integer)
    custom_bill_typ_ind = Column(Unicode(1))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    upper_agt_name = Column(Unicode(50), index=True)


class AgtNote(Base):
    __tablename__ = 'agt_note'

    agt_name = Column(ForeignKey(u'agt_name.agt_name'), primary_key=True, nullable=False)
    agt_note_typ = Column(ForeignKey(u'agt_note_typ.agt_note_typ'), primary_key=True, nullable=False)
    agt_note = Column(UnicodeText(1073741823), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    agt_name1 = relationship(u'AgtName')
    agt_note_typ1 = relationship(u'AgtNoteTyp')


class AgtNoteTyp(Base):
    __tablename__ = 'agt_note_typ'

    agt_note_typ = Column(Integer, primary_key=True)
    agt_note_seq = Column(Integer, nullable=False)
    agt_note_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AgtRx(Base):
    __tablename__ = 'agt_rx'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    rx_id = Column(Integer, primary_key=True, nullable=False)
    item_no = Column(Integer, primary_key=True, nullable=False)
    agt_name = Column(Unicode(50), nullable=False)
    dosage_form = Column(Integer)
    dose_level = Column(Integer)
    rx_dose = Column(Numeric(11, 4))
    rx_total = Column(Numeric(18, 4))
    admn_dosage_unit = Column(Integer, nullable=False)
    admn_route = Column(Integer)
    admn_dose_frq_unit = Column(Integer)
    admn_frq_x = Column(Integer)
    admn_frq_unit = Column(Integer)
    admn_dur = Column(Integer)
    admn_dur_unit = Column(Integer)
    req = Column(Unicode(1), nullable=False)
    agt_status = Column(Unicode(1))
    subs_allowed = Column(Unicode(1))
    discontinue_date = Column(DateTime)
    admn_start_date = Column(DateTime, index=True)
    subs_reason = Column(UnicodeText(1073741823))
    general_orders = Column(UnicodeText(1073741823))
    discontinue_reason = Column(UnicodeText(1073741823))
    dc_eff_date = Column(DateTime)
    prn_ind = Column(Unicode(1))
    prn_repeat_ind = Column(Unicode(1))
    rx_dose_range = Column(Numeric(11, 4))
    strength = Column(Numeric(11, 4))
    strength_unit = Column(Integer)
    set_intv_id = Column(Integer)
    set_date_tp_init = Column(DateTime)
    set_order_id = Column(Integer)
    dispense_qty = Column(Numeric(11, 0))
    dose_vrtn_typ = Column(ForeignKey(u'dose_vrtn_typ.dose_vrtn_typ'))
    course_desc = Column(Unicode(255))
    dow_frq_unit = Column(Integer)
    week_frq_unit = Column(Integer)
    placer_order_no = Column(Unicode(15), index=True)
    order_unit = Column(Integer)
    order_dose = Column(Numeric(11, 4))
    agt_seq_no = Column(Integer)
    infusion_typ = Column(ForeignKey(u'infusion_typ.infusion_typ'))
    infusion_duration = Column(Integer)
    infusion_timescale = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    prn_reason_typ = Column(Integer)
    rx_typ = Column(Integer)
    refill_ind = Column(Unicode(1))
    refill_qty = Column(Integer)
    dispensed_ind = Column(Unicode(1))
    dose_strength = Column(Unicode(15))
    ind = Column(Unicode(255))
    agt_vol = Column(Numeric(11, 4))
    agt_vol_uom = Column(Integer)
    rx_hydra_id = Column(Integer)
    disp_dose_level_ind = Column(Unicode(1))
    dose_rec_ind = Column(Unicode(1))
    inactivate_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    dose_pct = Column(Numeric(11, 4))
    order_chg_ind = Column(Unicode(1))
    ad_hoc_active_entry_ind = Column(Unicode(1))
    cycle_no = Column(Integer)
    cycle_day = Column(Integer)
    take_as_directed_ind = Column(Unicode(1))
    dispense_vol = Column(Numeric(11, 4))
    dispense_unit = Column(Integer)
    admn_frq_upper_x = Column(Integer)
    not_dispensed_ind = Column(Unicode(1))
    disp_loc_id = Column(ForeignKey(u'disp_loc.disp_loc_id'))
    ovride_dose_times_ind = Column(Unicode(1))
    sync_dose_times_ind = Column(Unicode(1))
    review_req_ind = Column(Unicode(1))
    continue_rx_ind = Column(Unicode(1))
    admn_dose_change_ind = Column(Unicode(1))
    admn_dose_no_rec = Column(Integer)
    admn_dose_total = Column(Integer)
    doses_on_hold = Column(Integer)
    app_cd = Column(Unicode(10))
    revision_no = Column(Integer, server_default=text("((1))"))
    tp_name = Column(Unicode(20))
    tp_vers_no = Column(Unicode(10))
    phase_seq_no = Column(Integer)
    rsn_typ = Column(Integer)
    rsn_desc = Column(Unicode(255))
    hydra_rate_ovride_typ = Column(Unicode(1))
    hydra_rate_ovride_rsn_cmt = Column(Unicode(255))
    hydra_rate_ovride_userid = Column(Unicode(10))
    hydra_rate_ovride_inst_id = Column(Unicode(30))
    hydra_rate_ovride_tstamp = Column(DateTime)
    agt_level_status = Column(Unicode(1))
    agt_display_order = Column(Integer)
    concentration = Column(Unicode(15), server_default=text("('')"))
    printed_cnt = Column(Integer, nullable=False, server_default=text("((0))"))
    pharm_instr = Column(UnicodeText(1073741823))
    disp_qty_string = Column(Unicode(15))
    inst_last_dose_chk_pct = Column(Numeric(11, 4))
    inst_last_dose_chk_typ = Column(Integer)
    inst_last_dose_chk_uom = Column(Unicode(1))
    last_dose_status_typ = Column(Unicode(1))
    last_dose_pt_visit_id = Column(Integer)
    last_dose_rx_id = Column(Integer)
    last_dose_item_no = Column(Integer)

    disp_loc = relationship(u'DispLoc')
    dose_vrtn_typ1 = relationship(u'DoseVrtnTyp')
    infusion_typ1 = relationship(u'InfusionTyp')


class AgtRxDisp(Base):
    __tablename__ = 'agt_rx_disp'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    rx_id = Column(Integer, primary_key=True, nullable=False)
    item_no = Column(Integer, primary_key=True, nullable=False)
    disp_id = Column(Integer, primary_key=True, nullable=False)
    disp_tstamp = Column(DateTime)
    disp_by_userid = Column(Unicode(10))
    disp_by_inst_id = Column(Unicode(30))
    disp_cmt = Column(Unicode(255))
    disp_appr_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    admn_id = Column(Integer)
    disp_agt_name = Column(Unicode(50))
    disp_dosage_form = Column(Integer)
    disp_dose = Column(Numeric(11, 4))
    disp_dose_range = Column(Numeric(11, 4))
    disp_dose_unit = Column(Integer)
    disp_admn_route = Column(Integer)
    disp_order_dose = Column(Numeric(11, 4))
    disp_order_unit = Column(Integer)
    disp_dose_strength = Column(Unicode(15))
    disp_dose_strength_unit = Column(Integer)
    disp_infusion_typ = Column(Integer)
    disp_infusion_duration = Column(Integer)
    disp_infusion_timescale = Column(Integer)
    disp_indication = Column(Unicode(50))
    disp_general_orders = Column(UnicodeText(1073741823))
    syringe_qty = Column(Integer)
    syringe_vol = Column(Numeric(11, 4))
    syringe_vol_uom = Column(Integer)
    disp_chg_ind = Column(Unicode(1))
    disp_agt_vol = Column(Numeric(11, 4))
    disp_agt_vol_uom = Column(Integer)
    rx_hydra_disp_id = Column(Integer)
    disp_course_desc = Column(Unicode(255))
    err_rsn_txt = Column(Unicode(255))
    not_dispensed_ind = Column(Unicode(1))
    dispense_qty = Column(Numeric(11, 0))
    dispense_vol = Column(Numeric(11, 4))
    dispense_unit = Column(Integer)
    expiry_date = Column(DateTime)
    expiry_date_cd = Column(Integer)
    placer_order_no = Column(Unicode(10))
    hydra_rate_ovride_typ = Column(Unicode(1))
    hydra_rate_ovride_rsn_cmt = Column(Unicode(255))
    hydra_rate_ovride_userid = Column(Unicode(10))
    hydra_rate_ovride_inst_id = Column(Unicode(30))
    hydra_rate_ovride_tstamp = Column(DateTime)
    custom_syringe_ind = Column(Unicode(1), server_default=text("('N')"))
    syringe_id = Column(Integer)
    review_ind = Column(Unicode(1), server_default=text("('N')"))
    concentration = Column(Unicode(15))


class AgtRxDispSyringe(Base):
    __tablename__ = 'agt_rx_disp_syringe'

    syringe_id = Column(Integer, primary_key=True, nullable=False)
    syringe_seq_no = Column(Integer, primary_key=True, nullable=False)
    syringe_vol = Column(Numeric(11, 4), nullable=False)
    syringe_vol_uom = Column(Integer, nullable=False)
    pt_id = Column(Unicode(20))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AgtRxDxOvride(Base):
    __tablename__ = 'agt_rx_dx_ovride'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    rx_id = Column(Integer, primary_key=True, nullable=False)
    item_no = Column(Integer, primary_key=True, nullable=False)
    ovride_rsn_cmt = Column(Unicode(255), nullable=False)
    ovride_inst_id = Column(Unicode(30), nullable=False)
    ovride_userid = Column(Unicode(10), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class AgtRxHxInstr(Base):
    __tablename__ = 'agt_rx_hx_instr'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    instr_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    rx_id = Column(Integer, nullable=False)
    item_no = Column(Integer, nullable=False)
    instr_userid = Column(Unicode(10))
    instr_inst_id = Column(Unicode(30))
    general_orders_hx = Column(UnicodeText(1073741823), nullable=False)
    hx_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AgtRxMh(Base):
    __tablename__ = 'agt_rx_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    rx_id = Column(Integer, primary_key=True, nullable=False)
    item_no = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    agt_name = Column(Unicode(50), nullable=False)
    dosage_form = Column(Integer)
    dose_level = Column(Integer)
    rx_dose = Column(Numeric(11, 4))
    rx_total = Column(Numeric(18, 4))
    admn_dosage_unit = Column(Integer, nullable=False)
    admn_route = Column(Integer)
    admn_dose_frq_unit = Column(Integer)
    admn_frq_x = Column(Integer)
    admn_frq_unit = Column(Integer)
    admn_dur = Column(Integer)
    admn_dur_unit = Column(Integer)
    req = Column(Unicode(1), nullable=False)
    agt_status = Column(Unicode(1))
    subs_allowed = Column(Unicode(1))
    discontinue_date = Column(DateTime)
    admn_start_date = Column(DateTime)
    subs_reason = Column(UnicodeText(1073741823))
    general_orders = Column(UnicodeText(1073741823))
    discontinue_reason = Column(UnicodeText(1073741823))
    dc_eff_date = Column(DateTime)
    prn_ind = Column(Unicode(1))
    prn_repeat_ind = Column(Unicode(1))
    rx_dose_range = Column(Numeric(11, 4))
    strength = Column(Numeric(11, 4))
    strength_unit = Column(Integer)
    set_intv_id = Column(Integer)
    set_date_tp_init = Column(DateTime)
    set_order_id = Column(Integer)
    dispense_qty = Column(Numeric(11, 0))
    dose_vrtn_typ = Column(Integer)
    course_desc = Column(Unicode(255))
    dow_frq_unit = Column(Integer)
    week_frq_unit = Column(Integer)
    placer_order_no = Column(Unicode(15))
    order_unit = Column(Integer)
    order_dose = Column(Numeric(11, 4))
    agt_seq_no = Column(Integer)
    infusion_typ = Column(Integer)
    infusion_duration = Column(Integer)
    infusion_timescale = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    prn_reason_typ = Column(Integer)
    rx_typ = Column(Integer)
    refill_ind = Column(Unicode(1))
    refill_qty = Column(Integer)
    dispensed_ind = Column(Unicode(1))
    dose_strength = Column(Unicode(15))
    ind = Column(Unicode(255))
    agt_vol = Column(Numeric(11, 4))
    agt_vol_uom = Column(Integer)
    rx_hydra_id = Column(Integer)
    disp_dose_level_ind = Column(Unicode(1))
    dose_rec_ind = Column(Unicode(1))
    inactivate_ind = Column(Unicode(1))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    dose_pct = Column(Numeric(11, 4))
    order_chg_ind = Column(Unicode(1))
    ad_hoc_active_entry_ind = Column(Unicode(1))
    cycle_no = Column(Integer)
    cycle_day = Column(Integer)
    take_as_directed_ind = Column(Unicode(1))
    dispense_vol = Column(Numeric(11, 4))
    dispense_unit = Column(Integer)
    admn_frq_upper_x = Column(Integer)
    not_dispensed_ind = Column(Unicode(1))
    disp_loc_id = Column(Integer)
    ovride_dose_times_ind = Column(Unicode(1))
    sync_dose_times_ind = Column(Unicode(1))
    review_req_ind = Column(Unicode(1))
    continue_rx_ind = Column(Unicode(1))
    admn_dose_change_ind = Column(Unicode(1))
    admn_dose_no_rec = Column(Integer)
    admn_dose_total = Column(Integer)
    doses_on_hold = Column(Integer)
    app_cd = Column(Unicode(10))
    tp_name = Column(Unicode(20))
    tp_vers_no = Column(Unicode(10))
    phase_seq_no = Column(Integer)
    rsn_typ = Column(Integer)
    rsn_desc = Column(Unicode(255))
    hydra_rate_ovride_typ = Column(Unicode(1))
    hydra_rate_ovride_rsn_cmt = Column(Unicode(255))
    hydra_rate_ovride_userid = Column(Unicode(10))
    hydra_rate_ovride_inst_id = Column(Unicode(30))
    hydra_rate_ovride_tstamp = Column(DateTime)
    agt_level_status = Column(Unicode(1))
    agt_display_order = Column(Integer)
    printed_cnt = Column(Integer, nullable=False, server_default=text("((0))"))
    pharm_instr = Column(UnicodeText(1073741823))
    disp_qty_string = Column(Unicode(15))
    inst_last_dose_chk_pct = Column(Numeric(11, 4))
    inst_last_dose_chk_typ = Column(Integer)
    inst_last_dose_chk_uom = Column(Unicode(1))
    last_dose_status_typ = Column(Unicode(1))
    last_dose_pt_visit_id = Column(Integer)
    last_dose_rx_id = Column(Integer)
    last_dose_item_no = Column(Integer)


class AgtRxPharm(Base):
    __tablename__ = 'agt_rx_pharm'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    agt_rx_pharm_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    rx_id = Column(Integer, nullable=False)
    item_no = Column(Integer, nullable=False)
    admn_start_date = Column(DateTime)
    admn_dur = Column(Integer)
    admn_dur_unit = Column(Integer)
    disp_loc_id = Column(ForeignKey(u'disp_loc.disp_loc_id'))
    dose_level_ind = Column(Unicode(1))
    cur_entry_ind = Column(Unicode(1))
    cancel_date = Column(DateTime)
    cancel_cmt = Column(Unicode(255))
    agt_formulary_inst_id = Column(Unicode(30))
    agt_formulary_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    placer_order_no = Column(Unicode(20))
    parent_agt_rx_pharm_id = Column(Integer)
    intf_status = Column(Unicode(1))

    disp_loc = relationship(u'DispLoc')


class AgtRxPharmXref(Base):
    __tablename__ = 'agt_rx_pharm_xref'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'agt_rx_pharm_id'], [u'agt_rx_pharm.pt_id', u'agt_rx_pharm.agt_rx_pharm_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    agt_rx_pharm_id = Column(Integer, primary_key=True, nullable=False)
    admn_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    admn_seq_no = Column(Integer)
    expected_date_time = Column(DateTime)
    total_doses = Column(Integer)

    pt = relationship(u'AgtRxPharm')


class AgtTr(Base):
    __tablename__ = 'agt_tr'
    __table_args__ = (
        ForeignKeyConstraint(['tr_typ', 'tr_comp_name'], [u'tr_comp_name.tr_typ', u'tr_comp_name.tr_comp_name']),
    )

    agt_name = Column(ForeignKey(u'agt_name.agt_name'), primary_key=True, nullable=False)
    tr_typ = Column(Unicode(30), primary_key=True, nullable=False)
    tr_comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    attr_cat_typ = Column(Integer)
    attr_value_typ = Column(Integer)

    agt_name1 = relationship(u'AgtName')
    tr_comp_name1 = relationship(u'TrCompName')


class AgtTyp(Base):
    __tablename__ = 'agt_typ'

    agt_typ = Column(Integer, primary_key=True)
    agt_typ_desc = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AllergyDesc(Base):
    __tablename__ = 'allergy_desc'

    allergy_desc_id = Column(Integer, primary_key=True)
    allergy_typ = Column(Integer, nullable=False)
    allergy_desc = Column(Unicode(255), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class AllergyRespTyp(Base):
    __tablename__ = 'allergy_resp_typ'

    resp_typ = Column(Integer, primary_key=True)
    resp_desc = Column(Unicode(40), nullable=False)
    medi_symptom_id = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class AllergySeverity(Base):
    __tablename__ = 'allergy_severity'

    severity_id = Column(Integer, primary_key=True)
    severity_cd = Column(Unicode(5), nullable=False)
    severity_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class AllergyTyp(Base):
    __tablename__ = 'allergy_typ'

    allergy_typ = Column(Integer, primary_key=True)
    allergy_desc = Column(Unicode(40), nullable=False)
    allergy_cd = Column(Unicode(5))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class App(Base):
    __tablename__ = 'app'

    app_cd = Column(Unicode(10), primary_key=True)
    app_name = Column(Unicode(20), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    app_vers_no = Column(Unicode(10))
    app_build_no = Column(Unicode(10))
    dsp_app_vers_no = Column(Unicode(10))
    dsp_app_build_no = Column(Unicode(10))


class AppAccessTime(Base):
    __tablename__ = 'app_access_time'

    access_time_id = Column(Integer, primary_key=True)
    group_inst_id = Column(Unicode(30), nullable=False)
    user_group_id = Column(Unicode(10), nullable=False)
    access_start_time = Column(DateTime, nullable=False)
    access_end_time = Column(DateTime, nullable=False)
    day_of_week = Column(Unicode(3), nullable=False)
    efc_date = Column(DateTime, nullable=False)
    exp_date = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AppLevel(Base):
    __tablename__ = 'app_level'

    app_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    app_build_no = Column(Unicode(10), primary_key=True, nullable=False)
    app_level_no = Column(Integer, primary_key=True, nullable=False)
    pbd_zip_file = Column(LargeBinary)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    app_level_typ_no = Column(ForeignKey(u'app_level_typ.app_level_typ_no'))
    valid_entry_ind = Column(Unicode(1))

    app_level_typ = relationship(u'AppLevelTyp')


class AppLevelLog(Base):
    __tablename__ = 'app_level_log'

    app_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    app_build_no = Column(Unicode(10), primary_key=True, nullable=False)
    app_level_no = Column(Integer, primary_key=True, nullable=False)
    machine_name = Column(Unicode(15), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, primary_key=True, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)


class AppLevelTyp(Base):
    __tablename__ = 'app_level_typ'

    app_level_typ_no = Column(Integer, primary_key=True)
    app_level_file_ext = Column(Unicode(3), nullable=False)
    app_level_typ_path = Column(Unicode(100), nullable=False)
    app_level_typ_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class AppLevelXref(Base):
    __tablename__ = 'app_level_xref'

    app_cd = Column(ForeignKey(u'app.app_cd'), primary_key=True, nullable=False)
    app_level_typ_no = Column(ForeignKey(u'app_level_typ.app_level_typ_no'), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    app = relationship(u'App')
    app_level_typ = relationship(u'AppLevelTyp')


class AppMsg(Base):
    __tablename__ = 'app_msg'

    msg_no = Column(Unicode(10), primary_key=True, nullable=False)
    lang_typ = Column(Integer, primary_key=True, nullable=False)
    app_msg_fmt_seq_no = Column(ForeignKey(u'app_msg_fmt.app_msg_fmt_seq_no'), nullable=False)
    app_msg_cls_seq_no = Column(ForeignKey(u'app_msg_cls.app_msg_cls_seq_no'), nullable=False)
    msg_txt_1 = Column(Unicode(255), nullable=False)
    msg_txt_2 = Column(Unicode(255))
    msg_hlp_1 = Column(Unicode(255))
    msg_hlp_2 = Column(Unicode(255))
    msg_hlp_3 = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))

    app_msg_cl = relationship(u'AppMsgCl')
    app_msg_fmt = relationship(u'AppMsgFmt')


class AppMsgCl(Base):
    __tablename__ = 'app_msg_cls'

    app_msg_cls_seq_no = Column(Integer, primary_key=True)
    app_msg_cls_title = Column(Unicode(100), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))


class AppMsgDbm(Base):
    __tablename__ = 'app_msg_dbms'

    dbms = Column(Unicode(10), primary_key=True, nullable=False)
    dbms_msg_no = Column(Unicode(20), primary_key=True, nullable=False)
    msg_no = Column(Unicode(10))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))


class AppMsgFmt(Base):
    __tablename__ = 'app_msg_fmt'

    app_msg_fmt_seq_no = Column(Integer, primary_key=True)
    msg_ser_cd = Column(Unicode(1), nullable=False)
    msg_ser_cd_levl = Column(Integer, nullable=False)
    msg_icon_name = Column(Unicode(20), nullable=False)
    msg_btn1_txt = Column(Unicode(10), nullable=False)
    msg_btn2_txt = Column(Unicode(10))
    msg_btn3_txt = Column(Unicode(10))
    msg_dflt_btn = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    show_msg_no = Column(Unicode(1))


class AppMsgLog(Base):
    __tablename__ = 'app_msg_log'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    app_msg_log_id = Column(Integer, primary_key=True, nullable=False)
    msg_no = Column(Unicode(10), nullable=False)
    msg_txt = Column(UnicodeText(1073741823), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    sql_code = Column(Integer)
    sql_error_txt = Column(UnicodeText(1073741823))


class AppTyp(Base):
    __tablename__ = 'app_typ'

    app_cd = Column(ForeignKey(u'app.app_cd'), primary_key=True, nullable=False)
    app_typ = Column(Unicode(20), primary_key=True, nullable=False)
    app_typ_desc = Column(Unicode(60))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    app = relationship(u'App')


class AsmtComp(Base):
    __tablename__ = 'asmt_comp'

    asmt_comp_name = Column(Unicode(30), primary_key=True)
    result_meas_typ = Column(Integer, nullable=False)
    status_typ = Column(ForeignKey(u'status_typ.status_typ'))
    uom = Column(Integer)
    min_norm = Column(Numeric(11, 4))
    max_norm = Column(Numeric(11, 4))
    min_reason = Column(Numeric(11, 4))
    max_reason = Column(Numeric(11, 4))
    prof_typ = Column(Integer)
    actual_time_req = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    discipline_typ = Column(Integer)
    trans_trf_tstamp = Column(DateTime)
    grade_type = Column(Integer)
    med_mntr_asmt_ind = Column(Unicode(1))

    status_typ1 = relationship(u'StatusTyp')


class AsmtCompBill(Base):
    __tablename__ = 'asmt_comp_bill'

    asmt_comp_name = Column(ForeignKey(u'asmt_comp.asmt_comp_name'), primary_key=True, nullable=False)
    bill_cd = Column(Unicode(30), primary_key=True, nullable=False)
    bill_cd_typ_id = Column(Integer, primary_key=True, nullable=False)
    bill_instance_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    asmt_comp = relationship(u'AsmtComp')


class AsmtCompGrade(Base):
    __tablename__ = 'asmt_comp_grade'

    asmt_comp_name = Column(ForeignKey(u'asmt_comp.asmt_comp_name'), primary_key=True, nullable=False)
    grade_no = Column(Integer, primary_key=True, nullable=False)
    grade_desc = Column(Unicode(100), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    asmt_comp = relationship(u'AsmtComp')


class AsmtGroup(Base):
    __tablename__ = 'asmt_group'

    asmt_group_name = Column(Unicode(30), primary_key=True)
    prof_typ = Column(Integer)
    actual_time_req = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    discipline_typ = Column(Integer)
    trans_trf_tstamp = Column(DateTime)


class AsmtGroupBill(Base):
    __tablename__ = 'asmt_group_bill'

    asmt_group_name = Column(ForeignKey(u'asmt_group.asmt_group_name'), primary_key=True, nullable=False)
    bill_cd = Column(Unicode(30), primary_key=True, nullable=False)
    bill_cd_typ_id = Column(Integer, primary_key=True, nullable=False)
    bill_instance_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    asmt_group = relationship(u'AsmtGroup')


class AsmtGroupComp(Base):
    __tablename__ = 'asmt_group_comp'

    asmt_group_name = Column(ForeignKey(u'asmt_group.asmt_group_name'), primary_key=True, nullable=False)
    asmt_comp_name = Column(ForeignKey(u'asmt_comp.asmt_comp_name'), primary_key=True, nullable=False)
    asmt_comp_seq = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    asmt_comp = relationship(u'AsmtComp')
    asmt_group = relationship(u'AsmtGroup')


class AsmtMthd(Base):
    __tablename__ = 'asmt_mthd'

    asmt_mthd = Column(Integer, primary_key=True)
    asmt_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AspectDesc(Base):
    __tablename__ = 'aspect_desc'
    __table_args__ = (
        ForeignKeyConstraint(['system', 'aspect'], [u'tr_comp_name.tr_typ', u'tr_comp_name.tr_comp_name']),
    )

    system = Column(Unicode(30), primary_key=True, nullable=False)
    aspect = Column(Unicode(30), primary_key=True, nullable=False)
    aspect_desc = Column(Unicode(100), primary_key=True, nullable=False)
    norm_dflt_ind = Column(Unicode(1), nullable=False)
    abnorm_dflt_ind = Column(Unicode(1), nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime, nullable=False)

    tr_comp_name = relationship(u'TrCompName')


class AspectDescPhy(Base):
    __tablename__ = 'aspect_desc_phys'
    __table_args__ = (
        ForeignKeyConstraint(['system', 'aspect', 'aspect_desc'], [u'aspect_desc.system', u'aspect_desc.aspect', u'aspect_desc.aspect_desc']),
    )

    system = Column(Unicode(30), primary_key=True, nullable=False)
    aspect = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    aspect_desc = Column(Unicode(100), primary_key=True, nullable=False)
    norm_dflt_ind = Column(Unicode(1), nullable=False)
    abnorm_dflt_ind = Column(Unicode(1), nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime, nullable=False)

    aspect_desc1 = relationship(u'AspectDesc')


class AttrCatTyp(Base):
    __tablename__ = 'attr_cat_typ'

    attr_cat_typ = Column(Integer, primary_key=True)
    attr_cat_typ_desc = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AttrValueTyp(Base):
    __tablename__ = 'attr_value_typ'

    attr_value_typ = Column(Integer, primary_key=True)
    attr_cat_typ = Column(Integer, nullable=False)
    attr_value_desc = Column(Unicode(50), nullable=False)
    attr_value_dsp = Column(Unicode(10), nullable=False)
    attr_value_seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AuditActionTyp(Base):
    __tablename__ = 'audit_action_typ'

    audit_action_typ = Column(Integer, primary_key=True)
    audit_action_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class AuditHistory1(Base):
    __tablename__ = 'audit_history_1'

    audit_rec_id = Column(Integer, primary_key=True, nullable=False)
    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    audit_table_name = Column(Unicode(30), primary_key=True, nullable=False)
    audit_concat_key = Column(Unicode(255), primary_key=True, nullable=False, index=True)
    audit_prev_data_value = Column(UnicodeText(1073741823))
    audit_row_keys = Column(UnicodeText(1073741823))
    audit_reason_cd = Column(Integer)
    audit_reason_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)


class AuditHistory2(Base):
    __tablename__ = 'audit_history_2'

    audit_rec_id = Column(Integer, primary_key=True, nullable=False)
    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    audit_table_name = Column(Unicode(30), primary_key=True, nullable=False)
    audit_concat_key = Column(Unicode(255), primary_key=True, nullable=False, index=True)
    audit_prev_data_value = Column(UnicodeText(1073741823))
    audit_row_keys = Column(UnicodeText(1073741823))
    audit_reason_cd = Column(Integer)
    audit_reason_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)


class AuditHistory3(Base):
    __tablename__ = 'audit_history_3'

    audit_rec_id = Column(Integer, primary_key=True, nullable=False)
    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    audit_table_name = Column(Unicode(30), primary_key=True, nullable=False)
    audit_concat_key = Column(Unicode(255), primary_key=True, nullable=False, index=True)
    audit_prev_data_value = Column(UnicodeText(1073741823))
    audit_row_keys = Column(UnicodeText(1073741823))
    audit_reason_cd = Column(Integer)
    audit_reason_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)


class AuditHistory4(Base):
    __tablename__ = 'audit_history_4'

    audit_rec_id = Column(Integer, primary_key=True, nullable=False)
    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    audit_table_name = Column(Unicode(30), primary_key=True, nullable=False)
    audit_concat_key = Column(Unicode(255), primary_key=True, nullable=False, index=True)
    audit_prev_data_value = Column(UnicodeText(1073741823))
    audit_row_keys = Column(UnicodeText(1073741823))
    audit_reason_cd = Column(Integer)
    audit_reason_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)


class AuditHistory5(Base):
    __tablename__ = 'audit_history_5'

    audit_rec_id = Column(Integer, primary_key=True, nullable=False)
    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    audit_table_name = Column(Unicode(30), primary_key=True, nullable=False)
    audit_concat_key = Column(Unicode(255), primary_key=True, nullable=False, index=True)
    audit_prev_data_value = Column(UnicodeText(1073741823))
    audit_row_keys = Column(UnicodeText(1073741823))
    audit_reason_cd = Column(Integer)
    audit_reason_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)


class AuditHistory6(Base):
    __tablename__ = 'audit_history_6'

    audit_rec_id = Column(Integer, primary_key=True, nullable=False)
    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    audit_table_name = Column(Unicode(30), primary_key=True, nullable=False)
    audit_concat_key = Column(Unicode(255), primary_key=True, nullable=False, index=True)
    audit_prev_data_value = Column(UnicodeText(1073741823))
    audit_row_keys = Column(UnicodeText(1073741823))
    audit_reason_cd = Column(Integer)
    audit_reason_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)


class AuditReasonCd(Base):
    __tablename__ = 'audit_reason_cd'

    audit_reason_cd = Column(Numeric(5, 0), primary_key=True)
    audit_reason_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class AuditRec(Base):
    __tablename__ = 'audit_rec'

    audit_seq_no = Column(Integer, primary_key=True)
    table_name = Column(Unicode(30), nullable=False)
    audit_tstamp = Column(DateTime, nullable=False)
    audit_action_typ = Column(ForeignKey(u'audit_action_typ.audit_action_typ'), nullable=False)
    audit_rec_desc = Column(UnicodeText(1073741823), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    pt_id = Column(Unicode(20))
    trans_trf_tstamp = Column(DateTime)
    app_vers_no = Column(Unicode(10))
    app_build_no = Column(Unicode(10))

    audit_action_typ1 = relationship(u'AuditActionTyp')


class AuthorTyp(Base):
    __tablename__ = 'author_typ'

    author_typ = Column(Integer, primary_key=True)
    author_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class BaseCd(Base):
    __tablename__ = 'base_cd'

    base_cd = Column(Unicode(3), primary_key=True)
    base_cls_typ = Column(Integer, nullable=False)
    base_desc = Column(Unicode(40), nullable=False)
    seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class BaseClsTyp(Base):
    __tablename__ = 'base_cls_typ'

    base_cls_typ = Column(Integer, primary_key=True)
    base_desc = Column(Unicode(30), nullable=False)
    base_cd_typ = Column(Unicode(1), nullable=False)
    inst_based_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    cat_ind = Column(Unicode(1))


class BaseTyp(Base):
    __tablename__ = 'base_typ'

    base_typ = Column(Integer, primary_key=True)
    base_cls_typ = Column(Integer, nullable=False, index=True)
    base_desc = Column(Unicode(40), nullable=False)
    seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class BaseTypPtListQueryXref(Base):
    __tablename__ = 'base_typ_pt_list_query_xref'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'base_typ_id'], [u'inst_base_typ.inst_id', u'inst_base_typ.base_typ_id']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    base_typ_id = Column(Integer, primary_key=True, nullable=False)
    pt_list_query_id = Column(ForeignKey(u'pt_list_query.pt_list_query_id'), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'InstBaseTyp')
    pt_list_query = relationship(u'PtListQuery')


t_batch_ccpndic1 = Table(
    'batch_ccpndic1', metadata,
    Column('visit_note_id', Integer),
    Column('note_tstamp', DateTime),
    Column('appr_flag', Unicode(1)),
    Column('override_userid', Unicode(10)),
    Column('override_inst_id', Unicode(30)),
    Column('trans_log_mtstamp', DateTime),
    Column('valid_entry_ind', Unicode(1)),
    Column('cur_last_name', Unicode(30)),
    Column('pt_first_name', Unicode(30)),
    Column('pt_initial', Unicode(2)),
    Column('test_pt_ind', Unicode(1)),
    Column('discipline_typ', Integer),
    Column('active_visit_ind', Unicode(1)),
    Column('pt_key_value', Unicode(25)),
    Column('cur_value_ind', Unicode(1)),
    Column('active_entry_ind', Unicode(1)),
    Column('author_first_name', Unicode(30)),
    Column('author_initial', Unicode(1)),
    Column('author_last_name', Unicode(30)),
    Column('author_active_entry_ind', Unicode(1)),
    Column('author_pref_ind', Unicode(1)),
    Column('stkh_first_name', Unicode(30)),
    Column('stkh_initial', Unicode(1)),
    Column('stkh_last_name', Unicode(30)),
    Column('stkh_active_entry_ind', Unicode(1)),
    Column('stkh_pref_ind', Unicode(1)),
    Column('inst_pt_key_desc', Unicode(40)),
    Column('optx_primary_ind', Unicode(1)),
    Column('discipline_typ1', Integer),
    Column('inst_id1', Unicode(30)),
    Column('userid1', Unicode(10)),
    Column('inst_name', Unicode(50)),
    Column('inst_id', Unicode(30)),
    Column('trans_log_tstamp', DateTime)
)


class BedUseTyp(Base):
    __tablename__ = 'bed_use_typ'

    bed_use_typ = Column(Integer, primary_key=True)
    bed_use_typ_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class BehaviorCd(Base):
    __tablename__ = 'behavior_cd'

    behavior_cd = Column(Unicode(1), primary_key=True)
    behavior_desc = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class BillAcct(Base):
    __tablename__ = 'bill_acct'
    __table_args__ = (
        ForeignKeyConstraint(['hl7_fin_cls_typ_inst_id', 'hl7_fin_cls_typ'], [u'hl7_fin_cls_typ.hl7_fin_cls_typ_inst_id', u'hl7_fin_cls_typ.hl7_fin_cls_typ']),
        ForeignKeyConstraint(['hl7_hosp_service_typ_inst_id', 'hl7_hosp_service_typ'], [u'hl7_hosp_service_typ.hl7_hosp_service_typ_inst_id', u'hl7_hosp_service_typ.hl7_hosp_service_typ']),
        ForeignKeyConstraint(['hl7_pt_cls_typ_inst_id', 'hl7_pt_cls_typ'], [u'hl7_pt_cls_typ.hl7_pt_cls_typ_inst_id', u'hl7_pt_cls_typ.hl7_pt_cls_typ']),
        ForeignKeyConstraint(['hl7_pt_status_typ_inst_id', 'hl7_pt_status_typ'], [u'hl7_pt_status_typ.hl7_pt_status_typ_inst_id', u'hl7_pt_status_typ.hl7_pt_status_typ']),
        ForeignKeyConstraint(['hl7_pt_typ_inst_id', 'hl7_pt_typ'], [u'hl7_pt_typ.hl7_pt_typ_inst_id', u'hl7_pt_typ.hl7_pt_typ']),
        Index('nc1_bill_acct', 'pt_id', 'bill_acct_value')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    bill_acct_id = Column(Integer, primary_key=True, nullable=False)
    bill_inst_id = Column(Unicode(30), nullable=False)
    bill_acct_label = Column(Unicode(255), nullable=False)
    bill_acct_value = Column(Unicode(20), nullable=False)
    eff_date = Column(DateTime, nullable=False)
    expiry_date = Column(DateTime, nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    stkh_id = Column(ForeignKey(u'stkh.stkh_id'), ForeignKey(u'stkh.stkh_id'))
    intf_external_field_1 = Column(Unicode(50))
    intf_external_field_2 = Column(Unicode(50))
    intf_external_field_3 = Column(Unicode(50))
    intf_external_field_4 = Column(Unicode(50))
    intf_external_field_5 = Column(Unicode(50))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    ext_ref_stkh_id = Column(Unicode(20))
    hl7_pt_cls_typ_inst_id = Column(Unicode(30))
    hl7_pt_cls_typ = Column(Integer)
    hl7_fin_cls_typ_inst_id = Column(Unicode(30))
    hl7_fin_cls_typ = Column(Integer)
    hl7_pt_status_typ_inst_id = Column(Unicode(30))
    hl7_pt_status_typ = Column(Integer)
    hl7_pt_typ_inst_id = Column(Unicode(30))
    hl7_pt_typ = Column(Integer)
    hl7_hosp_service_typ_inst_id = Column(Unicode(30))
    hl7_hosp_service_typ = Column(Integer)
    radonc_typ = Column(Unicode(1))

    hl7_fin_cls_typ_inst = relationship(u'Hl7FinClsTyp')
    hl7_hosp_service_typ_inst = relationship(u'Hl7HospServiceTyp')
    hl7_pt_cls_typ_inst = relationship(u'Hl7PtClsTyp')
    hl7_pt_status_typ_inst = relationship(u'Hl7PtStatusTyp')
    hl7_pt_typ_inst = relationship(u'Hl7PtTyp')
    stkh = relationship(u'Stkh', primaryjoin='BillAcct.stkh_id == Stkh.stkh_id')
    stkh1 = relationship(u'Stkh', primaryjoin='BillAcct.stkh_id == Stkh.stkh_id')


class BillAcctPtVisit(Base):
    __tablename__ = 'bill_acct_pt_visit'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'bill_acct_id'], [u'bill_acct.pt_id', u'bill_acct.bill_acct_id']),
        ForeignKeyConstraint(['pt_id', 'pt_visit_id'], [u'pt_visit.pt_id', u'pt_visit.pt_visit_id'])
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    bill_acct_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'BillAcct')
    pt1 = relationship(u'PtVisit')


class BillCd(Base):
    __tablename__ = 'bill_cd'

    bill_cd = Column(Unicode(30), primary_key=True, nullable=False)
    bill_cd_typ_id = Column(ForeignKey(u'bill_cd_typ.bill_cd_typ_id'), primary_key=True, nullable=False)
    bill_cd_desc = Column(Unicode(250), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    active_ind = Column(Unicode(1))
    active_chg_date = Column(DateTime)
    intf_send_bill_desc_ind = Column(Unicode(1))
    msg_typ_status_cd = Column(Unicode(1))
    msg_typ_level = Column(Integer)

    bill_cd_typ = relationship(u'BillCdTyp')


class InsPrecertBillCd(BillCd):
    __tablename__ = 'ins_precert_bill_cd'
    __table_args__ = (
        ForeignKeyConstraint(['bill_cd', 'bill_cd_typ_id'], [u'bill_cd.bill_cd', u'bill_cd.bill_cd_typ_id']),
    )

    bill_cd = Column(Unicode(30), primary_key=True, nullable=False)
    bill_cd_typ_id = Column(Integer, primary_key=True, nullable=False)
    ins_precert_typ = Column(ForeignKey(u'ins_precert_typ.ins_precert_typ'))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    ins_precert_typ1 = relationship(u'InsPrecertTyp')


class BillCdHx(Base):
    __tablename__ = 'bill_cd_hx'

    bill_cd = Column(Unicode(30), primary_key=True, nullable=False)
    bill_cd_typ_id = Column(Integer, primary_key=True, nullable=False)
    expiry_date = Column(DateTime, primary_key=True, nullable=False)
    bill_cd_desc = Column(Unicode(250), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))


class BillCdInfo(Base):
    __tablename__ = 'bill_cd_info'
    __table_args__ = (
        ForeignKeyConstraint(['bill_cd', 'bill_cd_typ_id', 'bill_instance_id'], [u'bill_cd_instance.bill_cd', u'bill_cd_instance.bill_cd_typ_id', u'bill_cd_instance.bill_instance_id']),
    )

    bill_cd = Column(Unicode(30), primary_key=True, nullable=False)
    bill_cd_typ_id = Column(Integer, primary_key=True, nullable=False)
    bill_instance_id = Column(Integer, primary_key=True, nullable=False)
    bill_cd_efc_dt = Column(DateTime, primary_key=True, nullable=False)
    bill_cd_est_cost = Column(Numeric(8, 2))
    bill_cd_bill_price = Column(Numeric(8, 2))
    bill_cd_inv_id = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    bill_cd_instance = relationship(u'BillCdInstance')


class BillCdInstance(Base):
    __tablename__ = 'bill_cd_instance'
    __table_args__ = (
        ForeignKeyConstraint(['bill_cd', 'bill_cd_typ_id'], [u'bill_cd.bill_cd', u'bill_cd.bill_cd_typ_id']),
    )

    bill_cd = Column(Unicode(30), primary_key=True, nullable=False)
    bill_cd_typ_id = Column(Integer, primary_key=True, nullable=False)
    bill_instance_id = Column(Integer, primary_key=True, nullable=False)
    bill_instance_desc = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    bill_cd1 = relationship(u'BillCd')


class BillVisitTyp(BillCdInstance):
    __tablename__ = 'bill_visit_typ'
    __table_args__ = (
        ForeignKeyConstraint(['bill_cd', 'bill_cd_typ_id', 'bill_instance_id'], [u'bill_cd_instance.bill_cd', u'bill_cd_instance.bill_cd_typ_id', u'bill_cd_instance.bill_instance_id']),
    )

    visit_typ_name = Column(Unicode(75), nullable=False)
    bill_cd = Column(Unicode(30), primary_key=True, nullable=False)
    bill_cd_typ_id = Column(Integer, primary_key=True, nullable=False)
    discontinue_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    bill_instance_id = Column(Integer, primary_key=True, nullable=False)
    trans_trf_tstamp = Column(DateTime)


class BillCdTyp(Base):
    __tablename__ = 'bill_cd_typ'

    bill_cd_typ_id = Column(Integer, primary_key=True)
    bill_cd_typ_desc = Column(Unicode(10), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class BillEmCatTyp(Base):
    __tablename__ = 'bill_em_cat_typ'

    bill_em_cat_typ = Column(Integer, primary_key=True)
    bill_em_cat_desc = Column(Unicode(80), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class BillEmCptTyp(Base):
    __tablename__ = 'bill_em_cpt_typ'

    bill_em_cpt_typ = Column(Integer, primary_key=True)
    bill_em_cpt_desc = Column(Unicode(50), nullable=False)
    bill_em_cpt_reqd = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class BillEmDataTyp(Base):
    __tablename__ = 'bill_em_data_typ'

    bill_em_data_typ = Column(Integer, primary_key=True)
    bill_em_data_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class BillEmDecisionTyp(Base):
    __tablename__ = 'bill_em_decision_typ'

    bill_em_decision_typ = Column(Integer, primary_key=True)
    bill_em_decision_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class BillEmDefn(Base):
    __tablename__ = 'bill_em_defn'

    bill_em_cat_typ = Column(ForeignKey(u'bill_em_cat_typ.bill_em_cat_typ'), primary_key=True, nullable=False)
    bill_em_elmt_typ = Column(ForeignKey(u'bill_em_elmt_typ.bill_em_elmt_typ'), primary_key=True, nullable=False)
    bill_em_min_count = Column(Integer, primary_key=True, nullable=False)
    bill_em_level = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    bill_em_cat_typ1 = relationship(u'BillEmCatTyp')
    bill_em_elmt_typ1 = relationship(u'BillEmElmtTyp')


class BillEmDxTyp(Base):
    __tablename__ = 'bill_em_dx_typ'

    bill_em_dx_typ = Column(Integer, primary_key=True)
    bill_em_dx_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class BillEmElmtTyp(Base):
    __tablename__ = 'bill_em_elmt_typ'

    bill_em_elmt_typ = Column(Integer, primary_key=True)
    bill_em_elmt_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class BillEmMsg(Base):
    __tablename__ = 'bill_em_msg'

    bill_em_msg_no = Column(Integer, primary_key=True)
    bill_em_msg_text = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class BillEmRiskTyp(Base):
    __tablename__ = 'bill_em_risk_typ'

    bill_em_risk_typ = Column(Integer, primary_key=True)
    bill_em_risk_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class BillEvent(Base):
    __tablename__ = 'bill_event'
    __table_args__ = (
        Index('nc7_bill_event', 'bill_event_status', 'bill_event_typ_id', 'phys_userid', 'phys_inst_id', 'bill_event_date'),
        Index('nc4_bill_event', 'trans_log_mtstamp', 'trans_trf_tstamp'),
        Index('nc8_bill_event', 'bill_inst_id', 'phys_inst_id', 'phys_userid', 'bill_event_date'),
        Index('nc2_bill_event', 'pt_id', 'pt_visit_id', 'bill_event_date'),
        Index('nc5_bill_event', 'pt_id', 'pt_visit_id', 'bill_event_date', 'trans_log_mtstamp', 'trans_trf_tstamp'),
        Index('nc6_bill_event', 'bill_event_status', 'trans_log_mtstamp', 'trans_trf_tstamp')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    bill_event_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    bill_event_date = Column(DateTime, nullable=False, index=True)
    bill_event_desc = Column(Unicode(200), nullable=False)
    bill_event_typ_id = Column(ForeignKey(u'bill_event_typ.event_cd_typ_id'), nullable=False)
    bill_event_bill_cd = Column(Unicode(30))
    bill_cd_typ_id = Column(ForeignKey(u'bill_cd_typ.bill_cd_typ_id'))
    bill_event_units = Column(Integer, nullable=False)
    bill_event_mod = Column(Unicode(3))
    bill_cd_est_cost = Column(Numeric(8, 2))
    bill_cd_bill_price = Column(Numeric(8, 2))
    bill_event_status = Column(Unicode(1), nullable=False)
    bill_cd_inv_id = Column(Unicode(10))
    phys_inst_id = Column(Unicode(30))
    phys_userid = Column(Unicode(10))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    actual_cost = Column(Numeric(8, 2))
    actual_received = Column(Numeric(8, 2))
    bill_instance_id = Column(Integer)
    bill_item_desc = Column(Unicode(250))
    billed_ind = Column(Unicode(1))
    bill_reversal_id = Column(Integer)
    trans_trf_tstamp = Column(DateTime)
    trans_id = Column(Unicode(12))
    bill_generated_ind = Column(Unicode(1))
    ndc_upc_hri_cd = Column(Unicode(11))
    elapsed_admn_time = Column(Integer)
    charge_date = Column(DateTime, index=True)
    bill_event_link_cd = Column(Unicode(1))
    bill_inst_id = Column(Unicode(30))
    bill_modifier = Column(Unicode(20))
    bill_acct_id = Column(Integer)
    loc_id = Column(Integer)
    override_ind = Column(Unicode(1))
    spsr_stkh_id = Column(Unicode(20))
    ref_pt_provider_id = Column(Integer)
    dose_wastage_amt = Column(Numeric(11, 4))
    dose_wastage_unit = Column(Integer)

    bill_cd_typ = relationship(u'BillCdTyp')
    bill_event_typ = relationship(u'BillEventTyp')


class XrefBillEventPrecert(BillEvent):
    __tablename__ = 'xref_bill_event_precert'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'bill_event_id', 'pt_visit_id'], [u'bill_event.pt_id', u'bill_event.bill_event_id', u'bill_event.pt_visit_id']),
        ForeignKeyConstraint(['pt_id', 'financial_ins_id', 'ins_precert_id', 'ins_precert_det_id'], [u'pt_ins_precert_det.pt_id', u'pt_ins_precert_det.financial_ins_id', u'pt_ins_precert_det.ins_precert_id', u'pt_ins_precert_det.ins_precert_det_id'])
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    bill_event_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    trans_cd = Column(Unicode(1))
    reason_cd = Column(Unicode(1))
    visit_date = Column(DateTime)
    financial_ins_id = Column(Integer)
    ins_precert_id = Column(Integer)
    ins_precert_det_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtInsPrecertDet')


class BillEventEmInfo(BillEvent):
    __tablename__ = 'bill_event_em_info'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'bill_event_id', 'pt_visit_id'], [u'bill_event.pt_id', u'bill_event.bill_event_id', u'bill_event.pt_visit_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    bill_event_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    bill_em_cat_typ = Column(ForeignKey(u'bill_em_cat_typ.bill_em_cat_typ'))
    duration_ind = Column(Unicode(1), nullable=False)
    duration_mins = Column(Integer)
    hpi_optx_count = Column(Integer)
    hpi_actual_count = Column(Integer)
    ros_optx_count = Column(Integer)
    ros_actual_count = Column(Integer)
    pfsh_past_ind = Column(Unicode(1))
    pfsh_family_ind = Column(Unicode(1))
    pfsh_social_ind = Column(Unicode(1))
    pe_optx_count = Column(Integer)
    pe_actual_count = Column(Integer)
    mdm_decision_typ = Column(ForeignKey(u'bill_em_decision_typ.bill_em_decision_typ'))
    mdm_dx_typ = Column(ForeignKey(u'bill_em_dx_typ.bill_em_dx_typ'))
    mdm_data_typ = Column(ForeignKey(u'bill_em_data_typ.bill_em_data_typ'))
    mdm_risk_typ = Column(ForeignKey(u'bill_em_risk_typ.bill_em_risk_typ'))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    bill_em_cat_typ1 = relationship(u'BillEmCatTyp')
    bill_em_data_typ = relationship(u'BillEmDataTyp')
    bill_em_decision_typ = relationship(u'BillEmDecisionTyp')
    bill_em_dx_typ = relationship(u'BillEmDxTyp')
    bill_em_risk_typ = relationship(u'BillEmRiskTyp')


class BillEventActual(Base):
    __tablename__ = 'bill_event_actual'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'bill_event_id', 'pt_visit_id'], [u'bill_event.pt_id', u'bill_event.bill_event_id', u'bill_event.pt_visit_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    bill_event_id = Column(Integer, primary_key=True, nullable=False)
    pt_actual_id = Column(Integer, primary_key=True, nullable=False)
    event_typ = Column(Unicode(1), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'BillEvent')


class BillEventLink(Base):
    __tablename__ = 'bill_event_link'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    from_pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    from_bill_event_id = Column(Integer, primary_key=True, nullable=False)
    to_pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    to_bill_event_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class BillEventTyp(Base):
    __tablename__ = 'bill_event_typ'

    event_cd_typ_id = Column(Integer, primary_key=True)
    event_cd_typ_desc = Column(Unicode(10), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class BillEvntCharge(Base):
    __tablename__ = 'bill_evnt_charge'
    __table_args__ = (
        Index('nc2_bill_evnt_charge', 'pt_id', 'pt_visit_id', 'bill_evnt_id'),
    )

    inst_id = Column(Unicode(30), nullable=False)
    pt_id = Column(Unicode(20), nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    bill_evnt_id = Column(Integer, nullable=False)
    trans_id = Column(Unicode(12), primary_key=True)
    trans_type = Column(Unicode(8))
    batch_id = Column(Unicode(12), index=True)
    void_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    hl7_msg_cntl_id = Column(Unicode(30), index=True)
    hl7_set_id = Column(Integer)
    filler_ref_no = Column(Unicode(12))
    plcy_typ_id = Column(Integer)
    plcy_group_typ_id = Column(Integer)
    bill_event_units = Column(Integer)
    bill_cd_bill_price = Column(Numeric(8, 2))
    bill_cd_inv_id = Column(Unicode(10))
    bill_charge_status = Column(Unicode(1))
    bill_charge_status_txt = Column(Unicode(255))


class BillEvntChrgWrk(Base):
    __tablename__ = 'bill_evnt_chrg_wrk'
    __table_args__ = (
        ForeignKeyConstraint(['batch_setup_id', 'batch_group_id'], [u'bill_sys_batch_group.batch_setup_id', u'bill_sys_batch_group.batch_group_id']),
        ForeignKeyConstraint(['bill_sys_inst_id', 'bill_sys_id'], [u'bill_system.bill_sys_inst_id', u'bill_system.bill_sys_id']),
        Index('nc1_bill_evnt_chrg_wrk', 'bill_sys_id', 'inst_id', 'pt_id', 'pt_visit_id', 'bill_evnt_id')
    )

    bill_sys_id = Column(Unicode(20), nullable=False)
    bill_sys_inst_id = Column(Unicode(30), nullable=False)
    trans_id = Column(Unicode(12), primary_key=True)
    batch_setup_id = Column(Integer)
    batch_group_id = Column(Integer)
    batch_group_no = Column(Integer)
    batch_seq_no = Column(Integer)
    batch_no = Column(Unicode(20))
    inst_id = Column(Unicode(30))
    pt_id = Column(Unicode(20))
    pt_visit_id = Column(Integer)
    bill_evnt_id = Column(Integer)
    trans_typ = Column(Unicode(8))
    batch_id = Column(Unicode(12))
    bill_event_typ_id = Column(Integer)
    bill_event_bill_cd = Column(Unicode(30))
    bill_cd_typ_id = Column(Integer)
    bill_event_date = Column(DateTime)
    bill_event_desc = Column(Unicode(200))
    bill_event_units = Column(Integer)
    bill_cd_bill_price = Column(Numeric(8, 2))
    phys_inst_id = Column(Unicode(30))
    phys_userid = Column(Unicode(10))
    loc_id = Column(Integer)
    external_org_stkh_id = Column(Unicode(20))
    batch_desc = Column(Unicode(80))
    bill_cd = Column(Unicode(30))
    bill_event_link_cd = Column(Unicode(1))
    prmy_bill_evnt_id = Column(Integer)
    intf_app_parm_id = Column(Unicode(10))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    assoc_cnt = Column(Integer)
    bill_sys_bill_cd_typ = Column(Unicode(10))
    bill_sys_bill_cd = Column(Unicode(30))
    bill_modifier = Column(Unicode(20))
    bill_acct_id = Column(Integer)
    filler_ref_no = Column(Unicode(12))
    plcy_typ_id = Column(Integer)
    plcy_group_typ_id = Column(Integer)
    bill_cd_inv_id = Column(Unicode(10))

    batch_setup = relationship(u'BillSysBatchGroup')
    bill_sys_inst = relationship(u'BillSystem')


class BillEvntPayment(Base):
    __tablename__ = 'bill_evnt_payment'

    bill_evnt_pmt_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    pt_id = Column(Unicode(20), nullable=False)
    pt_visit_id = Column(Integer)
    bill_evnt_id = Column(Integer)
    trans_id = Column(Unicode(12))
    extrnl_trans_id = Column(Unicode(12))
    trans_typ = Column(Unicode(8))
    bill_cd_typ = Column(Integer)
    bill_cd = Column(Unicode(30))
    bill_units = Column(Integer)
    unit_trans_amt = Column(Numeric(8, 2))
    total_trans_amt = Column(Numeric(8, 2))
    trans_desc = Column(Unicode(40))
    ins_plan_id = Column(Unicode(60))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class BillForm(Base):
    __tablename__ = 'bill_form'

    bill_form_id = Column(Integer, primary_key=True)
    bill_form_desc = Column(Unicode(100), nullable=False)
    bill_form_typ = Column(SmallInteger, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class BillFormItem(Base):
    __tablename__ = 'bill_form_item'
    __table_args__ = (
        ForeignKeyConstraint(['bill_cd', 'bill_cd_typ_id'], [u'bill_cd.bill_cd', u'bill_cd.bill_cd_typ_id']),
    )

    bill_item_id = Column(Integer, primary_key=True)
    bill_cd = Column(Unicode(30), nullable=False)
    bill_cd_typ_id = Column(Integer, nullable=False)
    bill_form_id = Column(ForeignKey(u'bill_form.bill_form_id'), nullable=False)
    bill_event_typ_id = Column(ForeignKey(u'bill_event_typ.event_cd_typ_id'), nullable=False)
    bill_item_desc = Column(Unicode(255))
    bill_group_name = Column(Unicode(30), nullable=False)
    group_disp_order = Column(Integer, nullable=False)
    item_order_in_group = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    bill_modifier = Column(Unicode(20))

    bill_cd1 = relationship(u'BillCd')
    bill_event_typ = relationship(u'BillEventTyp')
    bill_form = relationship(u'BillForm')


class BillFormTyp(Base):
    __tablename__ = 'bill_form_typ'

    bill_form_typ = Column(Integer, primary_key=True)
    bill_form_typ_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class BillModifierTyp(Base):
    __tablename__ = 'bill_modifier_typ'

    bill_cd_typ_id = Column(Integer, primary_key=True, nullable=False)
    bill_modifier_cd = Column(Unicode(5), primary_key=True, nullable=False)
    bill_modifier_desc = Column(Unicode(255), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class BillRelVal(Base):
    __tablename__ = 'bill_rel_val'
    __table_args__ = (
        ForeignKeyConstraint(['bill_cd', 'bill_cd_typ_id'], [u'bill_cd.bill_cd', u'bill_cd.bill_cd_typ_id']),
    )

    bill_cd = Column(Unicode(30), primary_key=True, nullable=False)
    bill_cd_typ_id = Column(Integer, primary_key=True, nullable=False)
    rel_val_name = Column(Unicode(30), primary_key=True, nullable=False)
    rel_val = Column(Numeric(5, 2), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    bill_cd1 = relationship(u'BillCd')


class BillSysBatchDef(Base):
    __tablename__ = 'bill_sys_batch_def'

    batch_setup_id = Column(ForeignKey(u'bill_sys_batch_setup.batch_setup_id'), primary_key=True, nullable=False)
    bill_sys_key_order_no = Column(Integer, primary_key=True, nullable=False)
    bill_sys_key_id = Column(ForeignKey(u'bill_sys_key_cd.bill_sys_key_id'), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    batch_setup = relationship(u'BillSysBatchSetup')
    bill_sys_key = relationship(u'BillSysKeyCd')


class BillSysBatchGroup(Base):
    __tablename__ = 'bill_sys_batch_group'

    batch_setup_id = Column(ForeignKey(u'bill_sys_batch_setup.batch_setup_id'), primary_key=True, nullable=False)
    batch_group_id = Column(Integer, primary_key=True, nullable=False)
    batch_no = Column(Unicode(20))
    batch_desc = Column(Unicode(80), nullable=False)
    batch_group_order_no = Column(Integer, nullable=False)
    bill_sys_key_1 = Column(Unicode(30))
    bill_sys_key_id_1 = Column(Integer)
    bill_sys_key_2 = Column(Unicode(30))
    bill_sys_key_id_2 = Column(Integer)
    bill_sys_key_3 = Column(Unicode(30))
    bill_sys_key_id_3 = Column(Integer)
    bill_sys_key_4 = Column(Unicode(30))
    bill_sys_key_id_4 = Column(Integer)
    bill_sys_key_5 = Column(Unicode(30))
    bill_sys_key_id_5 = Column(Integer)
    default_ind = Column(Unicode(1))
    intf_app_parm_id = Column(ForeignKey(u'intf_app_parm.intf_app_parm_id'), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    batch_setup = relationship(u'BillSysBatchSetup')
    intf_app_parm = relationship(u'IntfAppParm')


class BillSysBatchSetup(Base):
    __tablename__ = 'bill_sys_batch_setup'
    __table_args__ = (
        ForeignKeyConstraint(['bill_sys_inst_id', 'bill_sys_id'], [u'bill_system.bill_sys_inst_id', u'bill_system.bill_sys_id']),
    )

    batch_setup_id = Column(Integer, primary_key=True)
    bill_sys_inst_id = Column(Unicode(30), nullable=False)
    bill_sys_id = Column(Unicode(20), nullable=False)
    batch_setup_desc = Column(Unicode(80), nullable=False)
    batch_setup_order_no = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    bill_sys_inst = relationship(u'BillSystem')


class BillSysKeyCd(Base):
    __tablename__ = 'bill_sys_key_cd'

    bill_sys_key_id = Column(Integer, primary_key=True)
    bill_sys_key_desc = Column(Unicode(60), nullable=False)
    bill_sys_key_col_name = Column(Unicode(40), nullable=False)
    dddw_name = Column(Unicode(30))
    dddw_disp_name = Column(Unicode(30))
    dddw_data_name = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class BillSystem(Base):
    __tablename__ = 'bill_system'

    bill_sys_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    bill_sys_id = Column(Unicode(20), primary_key=True, nullable=False)
    bill_sys_desc = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    override_batch_ind = Column(Unicode(1))
    bill_all_cd_ind = Column(Unicode(1))
    bill_cd_eff_dt = Column(DateTime)
    bill_days_delay = Column(Integer)
    trans_posting_date = Column(DateTime)
    gen_filler_ref_ind = Column(Unicode(1))
    bill_acct_ind = Column(Unicode(1))
    bill_rpt_sort_order_1 = Column(Unicode(1))
    bill_rpt_sort_order_2 = Column(Unicode(1))
    bill_rpt_sort_order_3 = Column(Unicode(1))
    bill_spsr_cd = Column(Unicode(1))
    offset_date = Column(DateTime)
    bill_sys_typ_cd = Column(Unicode(1))
    enable_batch_setup_ind = Column(Unicode(1))
    intf_app_parm_id = Column(Unicode(10))
    merge_ind = Column(Unicode(1))
    ace_ind = Column(Unicode(1))
    ace_out_typ = Column(Unicode(1))
    ace_dt_format = Column(Unicode(32))
    ace_field_delimiter = Column(Unicode(1))
    ace_txt_delimiter = Column(Unicode(1))
    ace_file_typ = Column(Unicode(1))
    ace_include_col_hdr_ind = Column(Unicode(1))
    suppress_amt_ind = Column(Unicode(1))


class BillVisitEvent(Base):
    __tablename__ = 'bill_visit_event'
    __table_args__ = (
        ForeignKeyConstraint(['bill_cd', 'bill_cd_typ_id', 'bill_instance_id'], [u'bill_cd_instance.bill_cd', u'bill_cd_instance.bill_cd_typ_id', u'bill_cd_instance.bill_instance_id']),
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    phase_seq_no = Column(Integer, primary_key=True, nullable=False)
    tp_cycle_no = Column(Integer, primary_key=True, nullable=False)
    cycle_day = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    bill_cd = Column(Unicode(30))
    bill_cd_typ_id = Column(Integer)
    bill_instance_id = Column(Integer)

    bill_cd_instance = relationship(u'BillCdInstance')


class BmiTrend(Base):
    __tablename__ = 'bmi_trend'

    bmi_trend_id = Column(Integer, primary_key=True)
    cls_scheme_id = Column(ForeignKey(u'cls_scheme.cls_scheme_id'), nullable=False)
    base_typ = Column(ForeignKey(u'base_typ.base_typ'), nullable=False)
    sex_cd = Column(Unicode(1))
    age_months = Column(Float(53))
    P3 = Column(Float(53))
    P5 = Column(Float(53))
    P10 = Column(Float(53))
    P25 = Column(Float(53))
    P50 = Column(Float(53))
    P75 = Column(Float(53))
    P85 = Column(Float(53))
    P90 = Column(Float(53))
    P95 = Column(Float(53))
    P97 = Column(Float(53))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    base_typ1 = relationship(u'BaseTyp')
    cls_scheme = relationship(u'ClsScheme')


class BsaFormulaTyp(Base):
    __tablename__ = 'bsa_formula_typ'

    bsa_formula_typ = Column(Integer, primary_key=True)
    bsa_formula_name = Column(Unicode(20), nullable=False)
    bsa_formula_desc = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class CalcPrcsCd(Base):
    __tablename__ = 'calc_prcs_cd'

    calc_prcs_cd = Column(Unicode(1), primary_key=True)
    calc_prcs_cd_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class CalcTyp(Base):
    __tablename__ = 'calc_typ'

    calc_typ = Column(Integer, primary_key=True)
    calc_typ_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class CancelReasonTyp(Base):
    __tablename__ = 'cancel_reason_typ'

    cancel_reason_typ = Column(Integer, primary_key=True)
    cancel_reason_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CcdCat(Base):
    __tablename__ = 'ccd_cat'

    ccd_cat_id = Column(Integer, primary_key=True)
    ccd_cat_desc = Column(Unicode(30), nullable=False)
    ccd_code_class = Column(Unicode(30), nullable=False)
    export_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CdTblVal(Base):
    __tablename__ = 'cd_tbl_val'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'ref_id'], [u'ref_def.inst_id', u'ref_def.ref_id']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    ref_id = Column(Unicode(15), primary_key=True, nullable=False, index=True)
    cd_val = Column(Unicode(60), primary_key=True, nullable=False)
    cd_val_desc = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'RefDef')


class ClinNotifPtListQueryXref(Base):
    __tablename__ = 'clin_notif_pt_list_query_xref'

    clinical_notification_id = Column(Integer, primary_key=True, nullable=False)
    pt_list_query_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class Clinic(Base):
    __tablename__ = 'clinic'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    clinic_id = Column(Integer, primary_key=True, nullable=False)
    clinic_name = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    active_entry_ind = Column(Unicode(1))


class ClinicProvider(Base):
    __tablename__ = 'clinic_provider'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    clinic_id = Column(Integer, primary_key=True, nullable=False)
    user_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ClinicalNotification(Base):
    __tablename__ = 'clinical_notification'

    clinical_notification_id = Column(Integer, primary_key=True)
    clinical_notification_name = Column(Unicode(40), nullable=False)
    clinical_notification_msg = Column(Unicode, nullable=False)
    appr_userid = Column(Unicode(10))
    appr_inst_id = Column(Unicode(30))
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    active_ind = Column(Unicode(1), nullable=False)
    max_freq = Column(Integer)
    max_freq_unit = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ClsCritLst(Base):
    __tablename__ = 'cls_crit_lst'

    scheme_author = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    cls_value = Column(Integer, primary_key=True, nullable=False)
    cls_value_desc = Column(UnicodeText(1073741823), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    cls_value_disp = Column(Unicode(10))
    cls_crit_lst_id = Column(Integer)
    seq_no = Column(Integer)


class ClsScheme(Base):
    __tablename__ = 'cls_scheme'

    cls_scheme_id = Column(Integer, primary_key=True)
    scheme_author = Column(ForeignKey(u'spsr.spsr'), nullable=False)
    eff_date = Column(DateTime, nullable=False)
    scheme_name = Column(Unicode(64), nullable=False)
    scheme_typ = Column(ForeignKey(u'scheme_typ.scheme_typ'), nullable=False)
    appr_ind = Column(Unicode(1))
    active_ind = Column(Unicode(1))
    orig_author = Column(ForeignKey(u'spsr.spsr'))
    orig_eff_date = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))
    app_cd = Column(Unicode(10))
    enm_ind = Column(Unicode(1))

    spsr = relationship(u'Spsr', primaryjoin='ClsScheme.orig_author == Spsr.spsr')
    spsr1 = relationship(u'Spsr', primaryjoin='ClsScheme.scheme_author == Spsr.spsr')
    scheme_typ1 = relationship(u'SchemeTyp')


class Cmtee(Base):
    __tablename__ = 'cmtee'

    cmtee_id = Column(Integer, primary_key=True)
    cmtee_name = Column(Unicode(125), nullable=False)
    cmtee_desc = Column(Unicode(255), nullable=False)
    cmtee_abbr = Column(Unicode(8))
    internal_ind = Column(Unicode(1), nullable=False)
    lead_time = Column(Integer)
    default_room = Column(Unicode(30))
    email_group_name = Column(Unicode(50))
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    ltr_resp_warn_days = Column(Integer)
    ltr_resp_final_days = Column(Integer)
    courtesy_pct = Column(Integer)


class CmteeActivityPrd(Base):
    __tablename__ = 'cmtee_activity_prd'

    cmtee_id = Column(Integer, primary_key=True, nullable=False)
    activity_typ = Column(Integer, primary_key=True, nullable=False)
    activity_prd = Column(Integer, primary_key=True, nullable=False)
    activity_gap_dur = Column(Integer)
    activity_gap_unit = Column(Integer)
    alert_days = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    mode_ind = Column(Unicode(1))


class CmteeAgendum(Base):
    __tablename__ = 'cmtee_agenda'

    cmtee_agenda_id = Column(Integer, primary_key=True)
    cmtee_id = Column(Integer, nullable=False)
    complete_ind = Column(Unicode(1))
    agenda_cmt = Column(UnicodeText(1073741823))
    agenda_cmt_old = Column(UnicodeText(1073741823))
    agenda_ltr_id = Column(Integer)
    memo_ltr_id = Column(Integer)
    rpt_cmtee_agenda_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CmteeAgendaGuest(Base):
    __tablename__ = 'cmtee_agenda_guest'

    cmtee_guest_id = Column(Integer, primary_key=True)
    cmtee_agenda_id = Column(Integer, nullable=False)
    guest_name = Column(Unicode(60))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CmteeAgendaIssue(Base):
    __tablename__ = 'cmtee_agenda_issue'

    cmtee_issue_id = Column(Integer, primary_key=True)
    cmtee_id = Column(Integer, nullable=False)
    cmtee_agenda_id = Column(Integer, nullable=False)
    agenda_issue_typ = Column(Integer, nullable=False)
    cmtee_issue_rcmd_id = Column(Integer)
    rcmd_points_desc = Column(UnicodeText(1073741823))
    motion = Column(Unicode(255))
    probation_dur = Column(Integer)
    probation_dur_unit = Column(Integer)
    orig_cmtee_issue_id = Column(Integer)
    ltr_id = Column(Integer)
    tp_name = Column(Unicode(20))
    confirm_ind = Column(Unicode(1))
    distributed_ind = Column(Unicode(1))
    cur_entry_ind = Column(Unicode(1))
    cmtee_issue_cmt = Column(UnicodeText(1073741823))
    trf_cmtee_id = Column(Integer)
    reg_track_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CmteeAgendaMbr(Base):
    __tablename__ = 'cmtee_agenda_mbr'

    cmtee_id = Column(Integer, primary_key=True, nullable=False)
    cmtee_issue_id = Column(Integer, primary_key=True, nullable=False)
    cmtee_agenda_id = Column(Integer, primary_key=True, nullable=False)
    cmtee_mbr_stkh_id = Column(Unicode(20), primary_key=True, nullable=False)
    tp_name = Column(Unicode(20))
    tp_vers_no = Column(Unicode(10))
    excd_ind = Column(Unicode(1))
    primary_ind = Column(Unicode(1))
    secondary_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    stat_ind = Column(Unicode(1))


class CmteeAgendaMin(Base):
    __tablename__ = 'cmtee_agenda_mins'

    cmtee_agenda_id = Column(Integer, primary_key=True)
    chair_stkh_id = Column(Unicode(20))
    recorded_by_stkh_id = Column(Unicode(20))
    start_time = Column(DateTime)
    adjourn_time = Column(DateTime)
    mins_ltr_id = Column(Integer)
    appr_ind = Column(Unicode(1))
    mins_appr_ind = Column(Unicode(1))
    prev_mins_appr_ind = Column(Unicode(1))
    prev_mins_amend_desc = Column(UnicodeText(1073741823))
    mins_business_txt = Column(UnicodeText(1073741823))
    mins_review_txt = Column(UnicodeText(1073741823))
    dcmt_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CmteeAgendaMinsMbr(Base):
    __tablename__ = 'cmtee_agenda_mins_mbr'

    cmtee_agenda_id = Column(Integer, primary_key=True, nullable=False)
    mbr_stkh_id = Column(Unicode(20), primary_key=True, nullable=False)
    mbr_attend_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CmteeAgendaTrial(Base):
    __tablename__ = 'cmtee_agenda_trial'

    cmtee_id = Column(Integer, primary_key=True, nullable=False)
    cmtee_issue_id = Column(Integer, primary_key=True, nullable=False)
    cmtee_agenda_id = Column(Integer)
    cmtee_trial_id = Column(Integer)
    irb_num = Column(Integer)
    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    confirm_ind = Column(Unicode(1))
    distributed_ind = Column(Unicode(1))
    rcmd_points = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CmteeDate(Base):
    __tablename__ = 'cmtee_date'

    cmtee_agenda_id = Column(Integer, primary_key=True)
    cmtee_id = Column(Integer, nullable=False)
    meeting_typ = Column(Integer)
    mtg_datetime = Column(DateTime)
    mtg_dur = Column(Numeric(5, 2))
    mtg_room = Column(Unicode(30))
    mtg_deadline = Column(DateTime)
    date_confirm_ind = Column(Unicode(1))
    meeting_occur_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CmteeFnctn(Base):
    __tablename__ = 'cmtee_fnctn'

    cmtee_id = Column(Integer, primary_key=True, nullable=False)
    cmtee_fnctn_typ = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class CmteeFnctnTyp(Base):
    __tablename__ = 'cmtee_fnctn_typ'

    cmtee_fnctn_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    cmtee_fnctn_desc = Column(Unicode(255), nullable=False)
    seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CmteeIssue(Base):
    __tablename__ = 'cmtee_issue'

    cmtee_issue_typ_id = Column(Integer, primary_key=True)
    cmtee_id = Column(Integer, nullable=False)
    cmtee_issue_cat_typ = Column(Integer, nullable=False)
    cmtee_issue_topic_typ = Column(Integer, nullable=False)
    cmtee_cat_desc = Column(Unicode(20), nullable=False)
    cmtee_topic_desc = Column(Unicode(30), nullable=False)
    cmtee_issue_desc = Column(Unicode(60), nullable=False)
    seq_no = Column(Integer)
    active_entry_ind = Column(Unicode(1))
    initial_ind = Column(Unicode(1))
    monitor_ind = Column(Unicode(1))
    ia_ind = Column(Unicode(1))
    cmtee_agenda_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    cmtee_issue_abrv = Column(Unicode(20))


class CmteeIssueMotionTyp(Base):
    __tablename__ = 'cmtee_issue_motion_typ'

    cmtee_issue_motion_typ = Column(Integer, primary_key=True, nullable=False)
    cmtee_issue_motion_desc = Column(Unicode(255))
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CmteeIssueRcmd(Base):
    __tablename__ = 'cmtee_issue_rcmd'

    cmtee_issue_rcmd_id = Column(Integer, primary_key=True)
    cmtee_id = Column(Integer, nullable=False)
    cmtee_issue_rcmd_typ = Column(Integer, nullable=False)
    cmtee_issue_rcmd_desc = Column(Unicode(40), nullable=False)
    rcmd_motion_desc = Column(Unicode(255))
    cmtee_status_typ = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CmteeIssueTyp(Base):
    __tablename__ = 'cmtee_issue_typ'

    issue_typ = Column(Integer, primary_key=True)
    issue_desc = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CmteeLtrTemplate(Base):
    __tablename__ = 'cmtee_ltr_template'

    cmtee_id = Column(Integer, primary_key=True, nullable=False)
    ltr_typ = Column(Integer, primary_key=True, nullable=False)
    ltr_template_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CmteeMbr(Base):
    __tablename__ = 'cmtee_mbr'

    cmtee_id = Column(Integer, primary_key=True, nullable=False)
    cmtee_mbr_stkh_id = Column(Unicode(20), primary_key=True, nullable=False)
    cmtee_mbr_role_typ = Column(Integer, nullable=False)
    start_date = Column(DateTime)
    end_date = Column(DateTime)
    active_entry_ind = Column(Unicode(1))
    cmtee_chair_ind = Column(Unicode(1))
    cmtee_vice_chair_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    sitting_mbr_ind = Column(Unicode(1))


class CmteeMbrRoleTyp(Base):
    __tablename__ = 'cmtee_mbr_role_typ'

    cmtee_mbr_role_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    cmtee_mbr_role_typ_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(20))
    trans_trf_tstamp = Column(DateTime)


class CmteeMtg(Base):
    __tablename__ = 'cmtee_mtg'

    cmtee_id = Column(Integer, primary_key=True)
    mtg_freq_cd = Column(Unicode(1))
    mtg_recur = Column(Integer)
    mtg_dur = Column(Numeric(5, 2))
    mtg_mon_ind = Column(Unicode(1))
    mtg_tues_ind = Column(Unicode(1))
    mtg_wed_ind = Column(Unicode(1))
    mtg_thur_ind = Column(Unicode(1))
    mtg_fri_ind = Column(Unicode(1))
    mtg_sat_ind = Column(Unicode(1))
    mtg_sun_ind = Column(Unicode(1))
    mtg_every_mth = Column(Integer)
    mtg_week_of_month = Column(Unicode(10))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CmteeRcmdAb(Base):
    __tablename__ = 'cmtee_rcmd_abs'

    cmtee_id = Column(Integer, primary_key=True, nullable=False)
    cmtee_date_id = Column(Integer, primary_key=True, nullable=False)
    rcmd_abs_id = Column(Integer, primary_key=True, nullable=False)
    cmtee_mbr_stkh_id = Column(Unicode(20))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CmteeRcmdAbstention(Base):
    __tablename__ = 'cmtee_rcmd_abstention'

    cmtee_issue_id = Column(Integer, primary_key=True, nullable=False)
    stkh_id = Column(Unicode(20), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))


class CmteeRcmdCc(Base):
    __tablename__ = 'cmtee_rcmd_cc'

    cmtee_id = Column(Integer, primary_key=True, nullable=False)
    cmtee_date_id = Column(Integer, primary_key=True, nullable=False)
    cmtee_cc_id = Column(Integer, primary_key=True, nullable=False)
    cmtee_mbr_stkh_id = Column(Unicode(20), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CollcVol(Base):
    __tablename__ = 'collc_vol'

    collc_vol_id = Column(Integer, primary_key=True)
    collc_vol_desc = Column(Unicode(30), nullable=False)
    collc_vol_cd = Column(Unicode(5))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CompTyp(Base):
    __tablename__ = 'comp_typ'

    comp_typ = Column(Integer, primary_key=True)
    comp_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ComplaintTyp(Base):
    __tablename__ = 'complaint_typ'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    complaint_id = Column(Integer, primary_key=True, nullable=False)
    complaint_name = Column(Unicode(50), nullable=False)
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ComplianceItem(Base):
    __tablename__ = 'compliance_item'

    compliance_item_id = Column(Integer, primary_key=True)
    compliance_item = Column(Unicode(30), nullable=False)
    compliance_desc = Column(Unicode(200))
    target_pct = Column(Numeric(5, 2))
    seq_no = Column(Integer)
    active_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CompliancePgm(Base):
    __tablename__ = 'compliance_pgm'

    compliance_pgm_id = Column(Integer, primary_key=True)
    compliance_pgm = Column(Unicode(30))
    compliance_pgm_desc = Column(Unicode(200))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CompliancePrd(Base):
    __tablename__ = 'compliance_prd'

    compliance_prd_id = Column(Integer, primary_key=True)
    compliance_pgm_id = Column(ForeignKey(u'compliance_pgm.compliance_pgm_id'), nullable=False)
    prd_name = Column(Unicode(30), nullable=False)
    prd_desc = Column(Unicode(200))
    job_frq = Column(Integer)
    job_frq_day_of_week = Column(Integer)
    job_execution_time = Column(Unicode(5))
    job_id = Column(UNIQUEIDENTIFIER)
    job_schedule_id = Column(Integer)
    active_ind = Column(Unicode(1))
    prd_start_dt = Column(DateTime, nullable=False)
    prd_end_dt = Column(DateTime, nullable=False)
    job_active_ind = Column(Unicode(1), nullable=False)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    app_cd = Column(Unicode(10))

    compliance_pgm = relationship(u'CompliancePgm')


class ContactTyp(Base):
    __tablename__ = 'contact_typ'

    contact_typ = Column(Integer, primary_key=True)
    contact_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class Country(Base):
    __tablename__ = 'country'

    country_id = Column(Integer, primary_key=True)
    country_desc = Column(Unicode(44), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    sin_fmt = Column(Unicode(20))
    trans_trf_tstamp = Column(DateTime)
    phys_reg_label = Column(Unicode(20))
    phys_rx_label = Column(Unicode(20))
    phys_reg_label_fmt = Column(Unicode(15))
    phys_rx_label_fmt = Column(Unicode(15))
    country_cd = Column(Unicode(3))


class CountryField(Base):
    __tablename__ = 'country_field'

    country_id = Column(Integer, primary_key=True, nullable=False)
    fmt_field_name = Column(Unicode(40), primary_key=True, nullable=False)
    fmt_field_lbl = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CrwCurJob(Base):
    __tablename__ = 'crw_cur_jobs'

    userid = Column(Unicode(10), primary_key=True, nullable=False)
    session_id = Column(Unicode(25), primary_key=True, nullable=False)
    job_no = Column(Integer, primary_key=True, nullable=False)
    spid = Column(Integer)
    report_name = Column(Unicode(40))
    inst_id = Column(Unicode(30))
    str_1 = Column(Unicode(50))
    str_2 = Column(Unicode(50))
    str_3 = Column(Unicode(50))
    str_4 = Column(Unicode(50))
    str_5 = Column(Unicode(50))
    str_6 = Column(Unicode(50))
    str_7 = Column(Unicode(50))
    str_8 = Column(Unicode(50))
    str_9 = Column(Unicode(50))
    dt_1 = Column(DateTime)
    dt_2 = Column(DateTime)
    dt_3 = Column(DateTime)
    dt_4 = Column(DateTime)
    dt_5 = Column(DateTime)
    int_1 = Column(Integer)
    int_2 = Column(Integer)
    int_3 = Column(Integer)
    int_4 = Column(Integer)
    int_5 = Column(Integer)
    int_6 = Column(Integer)
    int_7 = Column(Integer)
    int_8 = Column(Integer)
    int_9 = Column(Integer)
    num_1 = Column(Numeric(11, 4))
    num_2 = Column(Numeric(11, 4))
    num_3 = Column(Numeric(11, 4))
    num_4 = Column(Numeric(11, 4))
    num_5 = Column(Numeric(11, 4))
    hdr_1 = Column(Unicode(125), nullable=False)
    hdr_2 = Column(Unicode(125), nullable=False)
    hdr_3 = Column(Unicode(125), nullable=False)
    hdr_4 = Column(Unicode(125), nullable=False)
    hdr_5 = Column(Unicode(125), nullable=False)
    hdr_6 = Column(Unicode(125), nullable=False)
    hdr_7 = Column(Unicode(125), nullable=False)
    user_inst_id = Column(Unicode(30))
    report_group_id = Column(Unicode(25), index=True)


class CrwDemgrMsg(Base):
    __tablename__ = 'crw_demgr_msg'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_time_sch = Column(DateTime, primary_key=True, nullable=False)
    userid = Column(Unicode(10))
    session_id = Column(Unicode(25))
    job_no = Column(Integer)
    str_1 = Column(Unicode(50))
    dt_1 = Column(DateTime)
    dt_2 = Column(DateTime)
    hdr_1 = Column(Unicode(255))
    ssn_demo_ind = Column(Unicode(1))
    address_ind = Column(Unicode(1))
    city_ind = Column(Unicode(1))
    county_ind = Column(Unicode(1))
    state_ind = Column(Unicode(1))
    country_ind = Column(Unicode(1))
    zip_ind = Column(Unicode(1))
    home_tel_ind = Column(Unicode(1))
    bus_tel_ind = Column(Unicode(1))
    pic_ind = Column(Unicode(1))
    provider_ind = Column(Unicode(1))
    referring_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CrwHxJob(Base):
    __tablename__ = 'crw_hx_jobs'

    userid = Column(Unicode(10), primary_key=True, nullable=False)
    session_id = Column(Unicode(25), primary_key=True, nullable=False)
    job_no = Column(Integer, primary_key=True, nullable=False)
    spid = Column(Integer)
    report_name = Column(Unicode(40))
    inst_id = Column(Unicode(30))
    str_1 = Column(Unicode(50))
    str_2 = Column(Unicode(50))
    str_3 = Column(Unicode(50))
    str_4 = Column(Unicode(50))
    str_5 = Column(Unicode(50))
    str_6 = Column(Unicode(50))
    str_7 = Column(Unicode(50))
    str_8 = Column(Unicode(50))
    str_9 = Column(Unicode(50))
    dt_1 = Column(DateTime)
    dt_2 = Column(DateTime)
    dt_3 = Column(DateTime)
    dt_4 = Column(DateTime)
    dt_5 = Column(DateTime)
    int_1 = Column(Integer)
    int_2 = Column(Integer)
    int_3 = Column(Integer)
    int_4 = Column(Integer)
    int_5 = Column(Integer)
    int_6 = Column(Integer)
    int_7 = Column(Integer)
    int_8 = Column(Integer)
    int_9 = Column(Integer)
    num_1 = Column(Numeric(11, 4))
    num_2 = Column(Numeric(11, 4))
    num_3 = Column(Numeric(11, 4))
    num_4 = Column(Numeric(11, 4))
    num_5 = Column(Numeric(11, 4))
    hdr_1 = Column(Unicode(125), nullable=False)
    hdr_2 = Column(Unicode(125), nullable=False)
    hdr_3 = Column(Unicode(125), nullable=False)
    hdr_4 = Column(Unicode(125), nullable=False)
    hdr_5 = Column(Unicode(125), nullable=False)
    hdr_6 = Column(Unicode(125), nullable=False)
    hdr_7 = Column(Unicode(125), nullable=False)
    user_inst_id = Column(Unicode(30))
    report_group_id = Column(Unicode(25))


class CrwReportAcces(Base):
    __tablename__ = 'crw_report_access'
    __table_args__ = (
        ForeignKeyConstraint(['group_inst_id', 'user_group_id'], [u'user_group.group_inst_id', u'user_group.user_group_id']),
    )

    report_name = Column(ForeignKey(u'crw_report_list.report_name'), primary_key=True, nullable=False)
    group_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    user_group_id = Column(Unicode(10), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))

    group_inst = relationship(u'UserGroup')
    crw_report_list = relationship(u'CrwReportList')


class CrwReportLink(Base):
    __tablename__ = 'crw_report_link'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    crw_report_link_id = Column(Integer, primary_key=True, nullable=False)
    report_name = Column(Unicode(40), nullable=False)
    app_cd = Column(Unicode(10), nullable=False)
    window_label = Column(Unicode(30), nullable=False)
    ctrl_label = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CrwReportList(Base):
    __tablename__ = 'crw_report_list'

    report_name = Column(Unicode(40), primary_key=True)
    report_title = Column(Unicode(100), nullable=False)
    report_desc = Column(Unicode(1500), nullable=False)
    report_typ = Column(ForeignKey(u'crw_report_typ.report_typ'), nullable=False)
    report_env = Column(Unicode(2))
    report_dw_name = Column(Unicode(40))
    report_parm_level = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    cp_ind = Column(Unicode(1))
    rx_ind = Column(Unicode(1))
    tx_ind = Column(Unicode(1))
    mgr_ind = Column(Unicode(1))
    pln_ind = Column(Unicode(1))
    sec_ind = Column(Unicode(1))
    cta_ind = Column(Unicode(1))
    cta_mode_cd = Column(Unicode(1))

    crw_report_typ = relationship(u'CrwReportTyp')


class CrwReportParm(Base):
    __tablename__ = 'crw_report_parm'

    report_name = Column(ForeignKey(u'crw_report_list.report_name'), primary_key=True, nullable=False)
    parm_name = Column(Unicode(30), primary_key=True, nullable=False)
    parm_no = Column(Integer)
    parm_label = Column(Unicode(50))
    parm_typ = Column(Unicode(50))
    parm_init_value = Column(Unicode(50))
    parm_help = Column(Unicode(200))
    display_typ = Column(Unicode(50))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    data_source_proc_name = Column(Unicode(125))
    data_source_proc_args_typ = Column(Unicode(50))
    required_ind = Column(Unicode(1))
    parent_parm_name = Column(Unicode(30))

    crw_report_list = relationship(u'CrwReportList')


class CrwReportTyp(Base):
    __tablename__ = 'crw_report_typ'

    report_typ = Column(Integer, primary_key=True)
    report_typ_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))


class CrwReportUser(Base):
    __tablename__ = 'crw_report_user'

    user_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    report_name = Column(Unicode(40), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CsOfDthTyp(Base):
    __tablename__ = 'cs_of_dth_typ'

    cs_of_dth_typ_id = Column(Integer, primary_key=True)
    cs_of_dth_typ_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtActivity(Base):
    __tablename__ = 'ct_activity'

    activity_id = Column(Integer, primary_key=True)
    activity_typ = Column(Integer, nullable=False)
    cmtee_id = Column(Integer)
    tp_name = Column(Unicode(20))
    warn_date = Column(DateTime)
    due_date = Column(DateTime)
    owner_stkh_id = Column(Unicode(20))
    status_typ = Column(Integer)
    cmtee_agenda_id = Column(Integer)
    findings_desc = Column(UnicodeText(1073741823))
    accrual_prd = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtBudgetTyp(Base):
    __tablename__ = 'ct_budget_typ'

    budget_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    budget_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtConsentFormStatu(Base):
    __tablename__ = 'ct_consent_form_status'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    file_name = Column(Unicode(255), primary_key=True, nullable=False)
    vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    cur_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtContractTyp(Base):
    __tablename__ = 'ct_contract_typ'

    contract_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    contract_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtCustForm(Base):
    __tablename__ = 'ct_cust_form'

    cust_form_id = Column(Integer, primary_key=True)
    ct_cust_form_typ = Column(Integer)
    cust_form_trial_specific_ind = Column(Unicode(1))
    cust_form_name = Column(Unicode(55), nullable=False)
    cust_form_vers_no = Column(Unicode(10), nullable=False)
    cust_form_desc = Column(Unicode(255), nullable=False)
    cust_form_active_ind = Column(Unicode(1))
    cust_form_form = Column(LargeBinary)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtCustFormField(Base):
    __tablename__ = 'ct_cust_form_fields'

    cust_form_id = Column(Integer, primary_key=True, nullable=False)
    form_field_id = Column(Integer, primary_key=True, nullable=False)
    field_name = Column(Unicode(55))
    field_outcomes_name = Column(Unicode(55))
    field_outcomes_desc = Column(Unicode(255))
    field_required_ind = Column(Unicode(1))
    field_data_source_sp_name = Column(Unicode(125))
    field_word_field_typ = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtCustFormResultDetail(Base):
    __tablename__ = 'ct_cust_form_result_detail'

    cust_form_result_id = Column(Integer, primary_key=True, nullable=False)
    cust_form_field_name = Column(Unicode(55), primary_key=True, nullable=False)
    cust_form_field_value = Column(Unicode(125))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtCustFormResultHdr(Base):
    __tablename__ = 'ct_cust_form_result_hdr'

    cust_form_result_id = Column(Integer, primary_key=True)
    cust_form_id = Column(Integer, nullable=False)
    appr_ind = Column(Unicode(1), nullable=False)
    valid_entry_ind = Column(Unicode(1))
    cust_form_form = Column(LargeBinary)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    tp_name = Column(Unicode(20))


class CtCustFormTyp(Base):
    __tablename__ = 'ct_cust_form_typ'

    ct_cust_form_typ = Column(Integer, primary_key=True)
    ct_cust_form_typ_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    active_ind = Column(Unicode(1))


class CtDcmnt(Base):
    __tablename__ = 'ct_dcmnt'

    ct_dcmnt_id = Column(Integer, primary_key=True)
    dcmnt_typ = Column(Integer, nullable=False)
    dcmnt_parent_typ = Column(Integer, nullable=False)
    dcmnt_file_name = Column(Unicode(100))
    dcmnt_file_directory = Column(Unicode(255))
    dcmnt_parent_id = Column(Integer)
    dcmnt_format_typ = Column(Integer)
    dcmnt_desc = Column(Unicode(80))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtFinDisclosureTyp(Base):
    __tablename__ = 'ct_fin_disclosure_typ'

    fin_disclosure_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    fin_disclosure_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtForm1SignTyp(Base):
    __tablename__ = 'ct_form1_sign_typ'

    form1_sign_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    form1_sign_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtForm1Typ(Base):
    __tablename__ = 'ct_form1_typ'

    form1_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    form1_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtIbcReviewTyp(Base):
    __tablename__ = 'ct_ibc_review_typ'

    ibc_review_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    ibc_review_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtIcfTyp(Base):
    __tablename__ = 'ct_icf_typ'

    icf_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    icf_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtInstrumentsTyp(Base):
    __tablename__ = 'ct_instruments_typ'

    instruments_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    instruments_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtIssueRcmdTyp(Base):
    __tablename__ = 'ct_issue_rcmd_typ'

    ct_issue_rcmd_typ = Column(Integer, primary_key=True)
    ct_issue_rcmd_desc = Column(Unicode(20), nullable=False)
    ct_status_typ = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtMatStorage(Base):
    __tablename__ = 'ct_mat_storage'

    mat_storage_id = Column(Integer, primary_key=True)
    tp_name = Column(Unicode(20), nullable=False)
    mat_typ = Column(Integer)
    box_desc = Column(Unicode(60))
    loc_desc = Column(Unicode(60))
    mat_moved_stkh_id = Column(Unicode(20))
    moved_date = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtMgdByTyp(Base):
    __tablename__ = 'ct_mgd_by_typ'

    mgd_by_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    mgd_by_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtNextStepTyp(Base):
    __tablename__ = 'ct_next_step_typ'

    next_step_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    next_step_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtPhaseCd(Base):
    __tablename__ = 'ct_phase_cd'

    ct_phase_cd = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    ct_phase_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtPlsoTyp(Base):
    __tablename__ = 'ct_plso_typ'

    plso_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    plso_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtPriorityListTyp(Base):
    __tablename__ = 'ct_priority_list_typ'

    priority_list_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    priority_list_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtProtocol1572Typ(Base):
    __tablename__ = 'ct_protocol_1572_typ'

    protocol_1572_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    protocol_1572_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtProtocolRecvStatusTyp(Base):
    __tablename__ = 'ct_protocol_recv_status_typ'

    protocol_recv_status_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    protocol_recv_status_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtRegDcmntTyp(Base):
    __tablename__ = 'ct_reg_dcmnt_typ'

    reg_dcmnt_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    reg_dcmnt_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtResReviewStatusTyp(Base):
    __tablename__ = 'ct_res_review_status_typ'

    res_review_status_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    res_review_status_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtRscReviewTyp(Base):
    __tablename__ = 'ct_rsc_review_typ'

    rsc_review_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    rsc_review_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtStaffRoleTyp(Base):
    __tablename__ = 'ct_staff_role_typ'

    ct_staff_role_typ_id = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    ct_staff_role_desc = Column(Unicode(55), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtStatusTyp(Base):
    __tablename__ = 'ct_status_typ'

    ct_status_typ = Column(Integer, primary_key=True)
    ct_status_desc = Column(Unicode(20), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CtSystemComp(Base):
    __tablename__ = 'ct_system_comp'

    comp_id = Column(Unicode(10), primary_key=True)
    ct_sec_code = Column(Unicode(10), nullable=False)
    ct_cat_code = Column(Unicode(10), nullable=False)
    comp_code = Column(Unicode(50))
    comp_value = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    comp_based = Column(Unicode(1))
    dsp_format = Column(Integer)
    dsp_comp = Column(Integer)
    item_based = Column(Unicode(1))
    trans_trf_tstamp = Column(DateTime)
    toolbar_ind = Column(Unicode(1))
    ct_toolbar_fcn_typ = Column(Integer)


class CtWorkFileTyp(Base):
    __tablename__ = 'ct_work_file_typ'

    work_file_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    work_file_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CultureCd(Base):
    __tablename__ = 'culture_cd'

    culture_cd = Column(Unicode(10), primary_key=True)
    language_cd = Column(Unicode(3), nullable=False)
    country_cd = Column(Unicode(3))
    culture_desc = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class CumTyp(Base):
    __tablename__ = 'cum_typ'

    cum_typ = Column(Integer, primary_key=True)
    cum_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class Currency(Base):
    __tablename__ = 'currency'

    currency = Column(Integer, primary_key=True)
    currency_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class CycleEvent(Base):
    __tablename__ = 'cycle_event'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no', 'intv_id'], [u'tp_intv.tp_name', u'tp_intv.tp_vers_no', u'tp_intv.intv_id']),
        ForeignKeyConstraint(['tp_name', 'tp_vers_no', 'phase_seq_no', 'cycle_day'], [u'tp_tperiod.tp_name', u'tp_tperiod.tp_vers_no', u'tp_tperiod.phase_seq_no', u'tp_tperiod.tperiod_id'])
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    phase_seq_no = Column(Integer, primary_key=True, nullable=False)
    tp_cycle_no = Column(Integer)
    cycle_day = Column(Integer, primary_key=True, nullable=False)
    event_seq_no = Column(Integer, primary_key=True, nullable=False)
    intv_id = Column(Integer)
    event_typ = Column(Unicode(1), nullable=False)
    cyclical_ind = Column(Unicode(1))
    offset_hhmm = Column(Unicode(4))
    offset_desc = Column(Unicode(255))
    prn_ind = Column(Unicode(1))
    admn_frq_cd = Column(Integer)
    admn_frq_x = Column(Integer)
    admn_frq_unit = Column(Integer)
    admn_dur = Column(Integer)
    admn_dur_unit = Column(Integer)
    order_id = Column(Integer)
    order_display_no = Column(Integer)
    prn_repeat_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    dow_frq_unit = Column(Integer)
    week_frq_unit = Column(Integer)
    chart_summary_ind = Column(Unicode(1), nullable=False)
    event_desc = Column(Unicode(255))
    time_suppress_ind = Column(Unicode(1))
    renewable_ind = Column(Unicode(1))
    chart_req_ind = Column(Unicode(1))
    vrbl_req_ind = Column(Unicode(1))
    med_mntr_asmt_ind = Column(Unicode(1))
    dispense_qty = Column(Integer)
    no_events = Column(Integer)
    dispense_vol = Column(Numeric(11, 4))
    dispense_unit = Column(Integer)
    admn_frq_upper_x = Column(Integer)
    spsr_stkh_id = Column(Unicode(20))
    prn_reason_typ = Column(Integer)

    tp_intv = relationship(u'TpIntv')
    tp_tperiod = relationship(u'TpTperiod')


class CycleEventDetail(Base):
    __tablename__ = 'cycle_event_detail'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    phase_seq_no = Column(Integer, primary_key=True, nullable=False)
    cycle_event_id = Column(Integer, primary_key=True, nullable=False)
    cycle_no = Column(Integer, nullable=False)
    cycle_day = Column(Integer, nullable=False)
    event_typ = Column(Unicode(1), nullable=False)
    intv_id = Column(Integer, nullable=False)
    notified_ind = Column(Unicode(1), nullable=False)
    rqstn_ind = Column(Unicode(1), nullable=False)
    order_id = Column(Integer, nullable=False)
    event_status = Column(Integer)
    sch_tstamp = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    cldr_ind = Column(Unicode(1))


class CycleEventOrder(Base):
    __tablename__ = 'cycle_event_order'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    phase_seq_no = Column(Integer, primary_key=True, nullable=False)
    order_id = Column(Integer, primary_key=True, nullable=False)
    intv_id = Column(Integer, nullable=False)
    event_typ = Column(Unicode(1), nullable=False)
    prn_ind = Column(Unicode(1), nullable=False)
    admn_frq_cd = Column(Integer)
    admn_frq_x = Column(Integer)
    admn_frq_unit = Column(Integer)
    admn_dur = Column(Integer)
    admn_dur_unit = Column(Integer)
    prn_repeat_ind = Column(Unicode(1), nullable=False)
    cycle_no = Column(Integer, nullable=False)
    tperiod_id = Column(Integer, nullable=False)
    offset_hhmm = Column(Unicode(4))
    offset_desc = Column(Unicode(255))
    cyclical_ind = Column(Unicode(1), nullable=False)
    baseline_dose = Column(Numeric(11, 4))
    agt_intv_status_id = Column(Integer)
    dow_frq_unit = Column(Integer)
    week_frq_unit = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    cldr_ind = Column(Unicode(1))
    dispense_qty = Column(Integer)
    dispense_vol = Column(Numeric(11, 4))
    dispense_unit = Column(Integer)
    admn_frq_upper_x = Column(Integer)


class DataUpdateLog(Base):
    __tablename__ = 'data_update_log'

    data_update_log_id = Column(Integer, primary_key=True)
    cls_scheme_id = Column(Integer, nullable=False)
    scheme_name = Column(Unicode(64), nullable=False)
    data_effective_date = Column(DateTime, nullable=False)
    update_start = Column(DateTime, nullable=False)
    update_end = Column(DateTime, nullable=False)
    update_status = Column(Unicode(1), nullable=False)
    update_fail_msg = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class DateCd(Base):
    __tablename__ = 'date_cd'

    date_cd = Column(Integer, primary_key=True)
    date_cd_desc = Column(Unicode(40), nullable=False)
    date_cd_mask = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class DateChangeLog(Base):
    __tablename__ = 'date_change_log'

    old_date = Column(DateTime, nullable=False)
    new_date = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), primary_key=True, nullable=False)
    trans_log_tstamp = Column(DateTime, primary_key=True, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class DbModCompleted(Base):
    __tablename__ = 'db_mod_completed'

    mod_grp_id = Column(Integer, primary_key=True)
    mod_date_completed = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))


class DbPrinterMutex(Base):
    __tablename__ = 'db_printer_mutex'

    printer_mutex_id = Column(Integer, primary_key=True)
    printer_name = Column(Unicode(256), nullable=False, index=True)
    printer_status_ind = Column(Unicode(1), nullable=False)
    printer_status_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


t_db_text_select = Table(
    'db_text_select', metadata,
    Column('db_text_select', UnicodeText(1073741823))
)


class DbTimeSelect(Base):
    __tablename__ = 'db_time_select'

    db_time_select = Column(Unicode(255), primary_key=True)


class DcmntMailQue(Base):
    __tablename__ = 'dcmnt_mail_que'
    __table_args__ = (
        Index('nc1_dcmnt_mail_que', 'pt_id', 'visit_note_id'),
        Index('nc5_dcmnt_mail_que', 'inst_id', 'trans_log_tstamp'),
        Index('nc2_dcmnt_mail_que', 'pt_id', 'pt_visit_id', 'visit_note_id', 'prcs_ind_cd')
    )

    dcmnt_mail_que_id = Column(Unicode(14), primary_key=True)
    pt_id = Column(Unicode(20), nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    visit_note_id = Column(Integer, nullable=False)
    auth_stkh_id = Column(Unicode(20), nullable=False, index=True)
    inst_id = Column(Unicode(30), nullable=False)
    visit_note_txt = Column(UnicodeText(1073741823))
    prcs_ind_cd = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False, index=True)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    visit_note_begin_txt = Column(Unicode(255))
    dcmnt_prty = Column(Unicode(1))
    send_on_appr = Column(Unicode(1))
    error_msg_ind = Column(Unicode(1))
    queue_tstamp = Column(DateTime, index=True)


class DcmntMailRcpt(Base):
    __tablename__ = 'dcmnt_mail_rcpts'
    __table_args__ = (
        Index('nc5_dcmnt_mail_rcpts', 'corsp_mthd', 'external_prcs_cd'),
        Index('nc2_dcmnt_mail_rcpts', 'corsp_mthd', 'external_prcs_cd'),
        Index('nc3_dcmnt_mail_rcpts', 'org_stkh_id', 'prcs_cd', 'corsp_mthd'),
        Index('nc4_dcmnt_mail_rcpts', 'provider_stkh_id', 'prcs_cd', 'corsp_mthd', 'external_prcs_cd')
    )

    dcmnt_mail_que_id = Column(ForeignKey(u'dcmnt_mail_que.dcmnt_mail_que_id'), primary_key=True, nullable=False)
    dcmnt_mail_rcpts_id = Column(Integer, primary_key=True, nullable=False, index=True)
    corsp_mthd = Column(Unicode(1))
    provider_stkh_id = Column(Unicode(20))
    org_stkh_id = Column(Unicode(20))
    prcs_cd = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    prcs_tstamp = Column(DateTime)
    external_prcs_cd = Column(Unicode(1))
    external_prcs_tstamp = Column(DateTime)
    dcmnt_err_cd = Column(Integer)

    dcmnt_mail_que = relationship(u'DcmntMailQue')


class DcmntServer(Base):
    __tablename__ = 'dcmnt_server'

    inst_id = Column(Unicode(30), primary_key=True)
    fax_port = Column(Integer)
    fax_login_userid = Column(Unicode(30))
    fax_server_name = Column(Unicode(30))
    fax_login_password = Column(Unicode(30))
    fax_dialing_prefix = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    intf_engine_id = Column(Unicode(10))
    fax_comm_protocol = Column(Unicode(40))
    coversheet_req_ind = Column(Unicode(1))
    coversheet_path = Column(Unicode(255))
    fax_product_id = Column(Integer)


class DesignationTyp(Base):
    __tablename__ = 'designation_typ'

    designation_typ = Column(Integer, primary_key=True)
    designation_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class DfltCtrl(Base):
    __tablename__ = 'dflt_ctrl'

    app_cd = Column(ForeignKey(u'app.app_cd'), primary_key=True, nullable=False)
    window_label = Column(Unicode(30), primary_key=True, nullable=False)
    ctrl_label = Column(Unicode(30), primary_key=True, nullable=False)
    ctrl_name = Column(Unicode(50), nullable=False)
    mod_flag = Column(Unicode(1), nullable=False)
    ctrl_order_no = Column(Integer, nullable=False)
    enabled_flag = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))

    app = relationship(u'App')


class DfltMenu(Base):
    __tablename__ = 'dflt_menu'

    app_cd = Column(ForeignKey(u'app.app_cd'), primary_key=True, nullable=False)
    menu_label = Column(Unicode(100), primary_key=True, nullable=False)
    parent_menu_label = Column(Unicode(100), nullable=False)
    menu_level = Column(Integer, nullable=False)
    enabled_flag = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))

    app = relationship(u'App')


class DfltXrefCtrl(Base):
    __tablename__ = 'dflt_xref_ctrl'
    __table_args__ = (
        ForeignKeyConstraint(['app_cd', 'window_label_ctrl', 'ctrl_label_ctrl'], [u'dflt_ctrl.app_cd', u'dflt_ctrl.window_label', u'dflt_ctrl.ctrl_label']),
        ForeignKeyConstraint(['app_cd', 'window_label_xref', 'ctrl_label_xref'], [u'dflt_ctrl.app_cd', u'dflt_ctrl.window_label', u'dflt_ctrl.ctrl_label'])
    )

    app_cd = Column(ForeignKey(u'app.app_cd'), primary_key=True, nullable=False)
    window_label_xref = Column(Unicode(30), primary_key=True, nullable=False)
    ctrl_label_xref = Column(Unicode(30), primary_key=True, nullable=False)
    window_label_ctrl = Column(Unicode(30), primary_key=True, nullable=False)
    ctrl_label_ctrl = Column(Unicode(30), primary_key=True, nullable=False)
    xref_level = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))

    dflt_ctrl = relationship(u'DfltCtrl', primaryjoin='DfltXrefCtrl.app_cd == DfltCtrl.app_cd')
    dflt_ctrl1 = relationship(u'DfltCtrl', primaryjoin='DfltXrefCtrl.app_cd == DfltCtrl.app_cd')
    app = relationship(u'App')


class DfltXrefMenu(Base):
    __tablename__ = 'dflt_xref_menu'
    __table_args__ = (
        ForeignKeyConstraint(['app_cd', 'menu_label'], [u'dflt_menu.app_cd', u'dflt_menu.menu_label']),
        ForeignKeyConstraint(['app_cd', 'window_label_ctrl', 'ctrl_label_ctrl'], [u'dflt_ctrl.app_cd', u'dflt_ctrl.window_label', u'dflt_ctrl.ctrl_label'])
    )

    app_cd = Column(ForeignKey(u'app.app_cd'), primary_key=True, nullable=False)
    menu_label = Column(Unicode(100), primary_key=True, nullable=False)
    window_label_ctrl = Column(Unicode(30), primary_key=True, nullable=False)
    ctrl_label_ctrl = Column(Unicode(30), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))

    dflt_menu = relationship(u'DfltMenu')
    dflt_ctrl = relationship(u'DfltCtrl')
    app = relationship(u'App')


class DictationQueue(Base):
    __tablename__ = 'dictation_queue'
    __table_args__ = (
        Index('nc2_dictation_queue', 'pt_id', 'pt_visit_id'),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    dictation_queue_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    pt_visit_id = Column(Integer)
    dictation_typ = Column(ForeignKey(u'dictation_typ.dictation_typ'), nullable=False)
    pt_actual_id = Column(Integer)
    pt_child_actual_id = Column(Integer)
    actual_desc = Column(Unicode(255))
    dictation_file_id = Column(Unicode(14), index=True)
    dictated_by_userid = Column(Unicode(10))
    dictated_by_user_inst_id = Column(Unicode(30))
    dictation_complete_ind = Column(Unicode(1))
    transcription_userid = Column(Unicode(10))
    transcription_user_inst_id = Column(Unicode(30))
    transcription_tstamp = Column(DateTime)
    review_required_ind = Column(Unicode(1))
    transcription_complete_ind = Column(Unicode(1))
    transcription_txt = Column(UnicodeText(1073741823))
    transcription_char_count = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    audio_del_ind = Column(Unicode(1))

    dictation_typ1 = relationship(u'DictationTyp')


class DictationQueueMh(Base):
    __tablename__ = 'dictation_queue_mh'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'dictation_queue_id'], [u'dictation_queue.pt_id', u'dictation_queue.dictation_queue_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    dictation_queue_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer)
    dictation_typ = Column(Integer, nullable=False)
    pt_actual_id = Column(Integer)
    pt_child_actual_id = Column(Integer)
    actual_desc = Column(Unicode(255))
    dictation_file_id = Column(Unicode(14))
    dictated_by_userid = Column(Unicode(10))
    dictated_by_user_inst_id = Column(Unicode(30))
    dictation_complete_ind = Column(Unicode(1))
    transcription_userid = Column(Unicode(10))
    transcription_user_inst_id = Column(Unicode(30))
    transcription_tstamp = Column(DateTime)
    transcription_txt = Column(UnicodeText(1073741823))
    review_required_ind = Column(Unicode(1))
    transcription_complete_ind = Column(Unicode(1))
    transcription_char_count = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    audio_del_ind = Column(Unicode(1))

    pt = relationship(u'DictationQueue')


class DictationTyp(Base):
    __tablename__ = 'dictation_typ'

    dictation_typ = Column(Integer, primary_key=True)
    dictation_typ_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class DisciplineTyp(Base):
    __tablename__ = 'discipline_typ'

    discipline_typ = Column(Integer, primary_key=True)
    discipline_desc = Column(Unicode(40), nullable=False)
    discipline_display = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class DispLoc(Base):
    __tablename__ = 'disp_loc'

    disp_loc_id = Column(Integer, primary_key=True)
    disp_loc_typ = Column(ForeignKey(u'disp_loc_typ.disp_loc_typ'), nullable=False)
    disp_loc_name = Column(Unicode(50), nullable=False)
    next_dose_lead_time = Column(Integer)
    active_entry_ind = Column(Unicode(1))
    elctrnc_trf_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    disp_loc_open_time = Column(Unicode(4))
    disp_loc_close_time = Column(Unicode(4))
    adjust_drug_batch_expiry_ind = Column(Unicode(1))

    disp_loc_typ1 = relationship(u'DispLocTyp')


class DispLocTyp(Base):
    __tablename__ = 'disp_loc_typ'

    disp_loc_typ = Column(Integer, primary_key=True)
    disp_loc_typ_desc = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class DmDbMod(Base):
    __tablename__ = 'dm_db_mod'

    dm_db_mod_id = Column(Integer, primary_key=True)
    dm_db_mod_desc = Column(Unicode(255), nullable=False)
    sort_order = Column(Integer, nullable=False)
    completed_ind = Column(Unicode(1), nullable=False)
    date_completed = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))


class DmDbXref(Base):
    __tablename__ = 'dm_db_xref'

    ccs_key_id = Column(Unicode(30), primary_key=True, nullable=False)
    ccs_seq_typ = Column(Unicode(30), primary_key=True, nullable=False)
    ccs_enm_value = Column(Unicode(30), primary_key=True, nullable=False)
    ccs_med_value = Column(Unicode(30), primary_key=True, nullable=False)


class DocFileTyp(Base):
    __tablename__ = 'doc_file_typ'

    doc_file_typ = Column(Integer, primary_key=True)
    doc_file_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class DosageForm(Base):
    __tablename__ = 'dosage_form'

    dosage_form = Column(Integer, primary_key=True)
    dosage_form_desc = Column(Unicode(40), nullable=False)
    medi_dose_form = Column(Unicode(4))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    form_typ = Column(Integer)
    iBaseFormulationID = Column(Integer)
    FDA_dosage_form = Column(Integer)


class DosageFormExtDrugDb(Base):
    __tablename__ = 'dosage_form_ext_drug_db'

    dosage_form = Column(ForeignKey(u'dosage_form.dosage_form'), primary_key=True, nullable=False)
    ext_drug_db_id = Column(ForeignKey(u'ext_drug_db.ext_drug_db_id'), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    dosage_form1 = relationship(u'DosageForm')
    ext_drug_db = relationship(u'ExtDrugDb')


class DoseLevel(Base):
    __tablename__ = 'dose_level'

    dose_level = Column(Integer, primary_key=True)
    dose_level_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class DoseRoundMthd(Base):
    __tablename__ = 'dose_round_mthd'

    dose_round_mthd = Column(Integer, primary_key=True)
    dose_round_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class DoseVrtnTyp(Base):
    __tablename__ = 'dose_vrtn_typ'

    dose_vrtn_typ = Column(Integer, primary_key=True)
    dose_vrtn_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class DowFrqUnit(Base):
    __tablename__ = 'dow_frq_unit'

    dow_frq_unit = Column(Integer, primary_key=True)
    admn_dose_frq_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    min_req_dur = Column(Numeric(11, 4))
    min_req_dur_unit = Column(Integer)
    day_frq = Column(Integer)
    trans_trf_tstamp = Column(DateTime)


class DrugBatch(Base):
    __tablename__ = 'drug_batch'

    drug_batch_id = Column(Integer, primary_key=True)
    drug_batch_desc = Column(Unicode(255), nullable=False)
    prep_date = Column(DateTime, nullable=False)
    expiry_date = Column(DateTime)
    expiry_override_ind = Column(Unicode(1))
    expiry_override_cmt = Column(Unicode(255))
    appr_ind = Column(Unicode(1))
    prepared_ind = Column(Unicode(1))
    no_of_units = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    lbl_cnt_orig = Column(Integer)
    lbl_cnt_extra = Column(Integer)
    wrksht_cnt = Column(Integer)
    admn_route = Column(Integer, nullable=False)
    total_dose = Column(Numeric(11, 4))
    total_vol = Column(Numeric(11, 4))
    total_dose_uom = Column(Integer)
    total_vol_uom = Column(Integer)
    appr_userid = Column(Unicode(10))
    appr_inst_id = Column(Unicode(30))
    appr_tstamp = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_inst_id = Column(Unicode(30))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_minst_id = Column(Unicode(30))
    trans_log_mtstamp = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)
    disp_loc_id = Column(Integer)
    hydra_fluid_id = Column(Integer)
    hydra_vol = Column(Numeric(11, 4))
    hydra_vol_uom = Column(Integer)
    master_lbl_desc = Column(UnicodeText(1073741823))
    sys_gen_expiry_date = Column(DateTime)
    drug_batch_dest = Column(Unicode(50))
    drug_batch_inst_id = Column(Unicode(30), index=True)
    addl_lbl_dtl = Column(Unicode(255))


class DrugBatchAgt(Base):
    __tablename__ = 'drug_batch_agt'

    drug_batch_agt_id = Column(Integer, primary_key=True)
    drug_batch_id = Column(ForeignKey(u'drug_batch.drug_batch_id'), nullable=False)
    agt_name = Column(Unicode(50), nullable=False)
    dosage_form = Column(Integer)
    admn_route = Column(Integer)
    admn_dosage = Column(Numeric(11, 4))
    admn_dosage_unit = Column(Integer)
    dose_strength = Column(Unicode(15))
    strength_unit = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_inst_id = Column(Unicode(30))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_minst_id = Column(Unicode(30))
    trans_log_mtstamp = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)
    admn_dosage_upper = Column(Numeric(11, 4))
    agt_seq_no = Column(Integer)

    drug_batch = relationship(u'DrugBatch')


class DrugBatchLblDtl(Base):
    __tablename__ = 'drug_batch_lbl_dtl'

    drug_batch_lbl_dtl_id = Column(Integer, primary_key=True)
    drug_batch_lbl_dtl_desc = Column(Unicode(255), nullable=False)
    drug_batch_lbl_dtl_desc_cust = Column(Unicode(255), nullable=False)
    active_entry_ind = Column(Unicode(1), nullable=False)
    seq_no = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_inst_id = Column(Unicode(30))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_minst_id = Column(Unicode(30))
    trans_log_mtstamp = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)


class DrugBatchPrint(Base):
    __tablename__ = 'drug_batch_print'

    drug_batch_print_id = Column(Integer, primary_key=True)
    drug_batch_id = Column(ForeignKey(u'drug_batch.drug_batch_id'), nullable=False)
    printout_typ = Column(Unicode(1), nullable=False)
    date_printed = Column(DateTime, nullable=False)
    reprint_ind = Column(Unicode(1))
    reprint_cmt = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10))
    trans_log_inst_id = Column(Unicode(30))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_minst_id = Column(Unicode(30))
    trans_log_mtstamp = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)

    drug_batch = relationship(u'DrugBatch')


class DrugBatchPrintLblDtl(Base):
    __tablename__ = 'drug_batch_print_lbl_dtl'

    drug_batch_id = Column(ForeignKey(u'drug_batch.drug_batch_id'), primary_key=True, nullable=False)
    drug_batch_lbl_dtl_id = Column(ForeignKey(u'drug_batch_lbl_dtl.drug_batch_lbl_dtl_id'), primary_key=True, nullable=False)
    print_seq = Column(Integer, nullable=False)
    print_desc = Column(Unicode(255), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_inst_id = Column(Unicode(30))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_minst_id = Column(Unicode(30))
    trans_log_mtstamp = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)

    drug_batch = relationship(u'DrugBatch')
    drug_batch_lbl_dtl = relationship(u'DrugBatchLblDtl')


class DrugBatchSignoffDtl(Base):
    __tablename__ = 'drug_batch_signoff_dtl'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'signoff_sect_id'], [u'drug_batch_signoff_sect.inst_id', u'drug_batch_signoff_sect.signoff_sect_id']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    signoff_sect_id = Column(Integer, primary_key=True, nullable=False)
    signoff_dtl_id = Column(Integer, primary_key=True, nullable=False)
    signoff_dtl_hdr_desc = Column(Unicode(255))
    signoff_dtl_desc = Column(UnicodeText(1073741823))
    signoff_personnel = Column(Unicode(255))
    signoff_req_ind = Column(Unicode(1))
    wrksht_include_ind = Column(Unicode(1))
    dtl_seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_inst_id = Column(Unicode(30))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_minst_id = Column(Unicode(30))
    trans_log_mtstamp = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'DrugBatchSignoffSect')


class DrugBatchSignoffSect(Base):
    __tablename__ = 'drug_batch_signoff_sect'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    signoff_sect_id = Column(Integer, primary_key=True, nullable=False)
    signoff_sect_desc = Column(Unicode(255), nullable=False)
    wrksht_include_ind = Column(Unicode(1))
    sect_seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_inst_id = Column(Unicode(30))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_minst_id = Column(Unicode(30))
    trans_log_mtstamp = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)


class DrugBatchUnit(Base):
    __tablename__ = 'drug_batch_unit'

    drug_batch_unit_id = Column(Integer, primary_key=True)
    drug_batch_id = Column(ForeignKey(u'drug_batch.drug_batch_id'), nullable=False)
    linked_to_pt_ind = Column(Unicode(1))
    dispensed_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_inst_id = Column(Unicode(30))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_minst_id = Column(Unicode(30))
    trans_log_mtstamp = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)

    drug_batch = relationship(u'DrugBatch')


class DrugBatchUnitPt(Base):
    __tablename__ = 'drug_batch_unit_pt'

    drug_batch_unit_pt_id = Column(Integer, primary_key=True)
    drug_batch_unit_id = Column(ForeignKey(u'drug_batch_unit.drug_batch_unit_id'), nullable=False)
    drug_batch_id = Column(Integer, nullable=False)
    drug_batch_agt_id = Column(ForeignKey(u'drug_batch_agt.drug_batch_agt_id'), nullable=False)
    pt_id = Column(Unicode(20), nullable=False)
    rx_id = Column(Integer)
    item_no = Column(Integer)
    admn_id = Column(Integer)
    expected_dose_date = Column(DateTime)
    dose_seq_no = Column(Integer)
    tp_name = Column(Unicode(20))
    tp_vers_no = Column(Unicode(10))
    phase_seq_no = Column(Integer)
    cycle_no = Column(Integer)
    cycle_day = Column(Integer)
    intv_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_inst_id = Column(Unicode(30))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_minst_id = Column(Unicode(30))
    trans_log_mtstamp = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)

    drug_batch_agt = relationship(u'DrugBatchAgt')
    drug_batch_unit = relationship(u'DrugBatchUnit')


class DurationUnit(Base):
    __tablename__ = 'duration_unit'

    duration_unit = Column(Integer, primary_key=True)
    duration_desc = Column(Unicode(25), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class DxMthdTyp(Base):
    __tablename__ = 'dx_mthd_typ'

    dx_mthd_typ = Column(Integer, primary_key=True)
    dx_mthd_desc = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    active_entry_ind = Column(Unicode(1))
    revision_no = Column(Integer, server_default=text("((1))"))


class DxSrvSection(Base):
    __tablename__ = 'dx_srv_section'

    dss_id = Column(Integer, primary_key=True)
    dss_desc = Column(Unicode(40), nullable=False)
    dss_cd = Column(Unicode(5))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class DxTyp(Base):
    __tablename__ = 'dx_typ'

    dx_typ = Column(Unicode(1), primary_key=True)
    dx_typ_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class EdiOut(Base):
    __tablename__ = 'edi_out'
    __table_args__ = (
        Index('nc2_edi_out', 'event_id', 'pt_id'),
    )

    edi_out_id = Column(Integer, primary_key=True)
    msg = Column(Unicode(8), nullable=False)
    msg_txt = Column(UnicodeText(1073741823))
    pt_id = Column(Unicode(20))
    event_id = Column(Integer)
    event_id_alt = Column(Integer)
    stkh_id = Column(Unicode(20))
    inst_id = Column(Unicode(30))
    pharm_id = Column(Unicode(10))
    processed_ind = Column(Unicode(1), index=True)
    sent_dt = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    ref_edi_out_id = Column(Integer)


class EducContent(Base):
    __tablename__ = 'educ_content'

    educ_content_id = Column(Integer, primary_key=True)
    educ_topic_id = Column(Integer, nullable=False)
    educ_content_typ = Column(Integer)
    content_url = Column(Unicode(255))
    doc_id = Column(Unicode(30))
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class EducTopic(Base):
    __tablename__ = 'educ_topics'

    educ_topic_id = Column(Integer, primary_key=True)
    educ_topic = Column(Unicode(60))
    educ_topic_desc = Column(Unicode(60))
    educ_topic_typ = Column(Integer)
    educ_cat_id = Column(Integer)
    topic_query = Column(UnicodeText(1073741823))
    num_content = Column(Integer)
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class EducationLvl(Base):
    __tablename__ = 'education_lvl'

    education_lvl_typ = Column(Integer, primary_key=True)
    education_lvl_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class EducationResource(Base):
    __tablename__ = 'education_resource'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'base_typ_id'], [u'inst_base_typ.inst_id', u'inst_base_typ.base_typ_id']),
    )

    education_resource_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    base_typ_id = Column(Integer, nullable=False)
    education_resource_typ = Column(Unicode(1), nullable=False)
    education_resource_value = Column(Unicode(255), nullable=False)
    education_resource_desc = Column(Unicode(255))
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'InstBaseTyp')


class EmailAddres(Base):
    __tablename__ = 'email_address'

    email_address_id = Column(Integer, primary_key=True)
    app_cd = Column(ForeignKey(u'app.app_cd'))
    email_key = Column(Unicode(30))
    email_address = Column(Unicode(60))
    address_desc = Column(Unicode(255))
    stkh_id = Column(ForeignKey(u'stkh.stkh_id'))
    cc_ind = Column(Unicode(1))
    active_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    app = relationship(u'App')
    stkh = relationship(u'Stkh')


class EmailCd(Base):
    __tablename__ = 'email_cd'

    email_cd = Column(Unicode(2), primary_key=True, nullable=False)
    stkh_cd = Column(Unicode(1), primary_key=True, nullable=False)
    email_cd_desc = Column(Unicode(40), nullable=False)
    dflt_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class EmailFnctnlAreaCd(Base):
    __tablename__ = 'email_fnctnl_area_cd'

    fnctnl_area_cd = Column(Unicode(3), primary_key=True)
    fnctnl_area_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class EmailIncidentTyp(Base):
    __tablename__ = 'email_incident_typ'

    email_incident_id = Column(Integer, primary_key=True)
    fnctnl_area_cd = Column(ForeignKey(u'email_fnctnl_area_cd.fnctnl_area_cd'), nullable=False)
    incident = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    email_fnctnl_area_cd = relationship(u'EmailFnctnlAreaCd')


class EmpStatusTyp(Base):
    __tablename__ = 'emp_status_typ'

    emp_status_typ = Column(Integer, primary_key=True)
    emp_status_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class EnmDbMod(Base):
    __tablename__ = 'enm_db_mod'

    enm_db_mod_id = Column(Integer, primary_key=True)
    enm_db_mod_desc = Column(Unicode(255), nullable=False)
    sort_order = Column(Integer, nullable=False)
    completed_ind = Column(Unicode(1), nullable=False)
    date_completed = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    revision_no = Column(Integer, server_default=text("((1))"))


class ErxAgtRx(Base):
    __tablename__ = 'erx_agt_rx'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    erx_agt_rx_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    rx_id = Column(Integer, nullable=False)
    item_no = Column(Integer, nullable=False)
    inst_id = Column(Unicode(30))
    disp_qty = Column(Unicode(15))
    erx_refill_rqst_id = Column(Integer)
    dest_pharm_id = Column(Unicode(7))
    stkh_name_id = Column(Integer)
    sent_ind = Column(Unicode(1))
    rsn_not_sent = Column(Integer)
    rcvd_ind = Column(Unicode(1))
    rcvd_dt = Column(DateTime)
    rx_ref_no = Column(Unicode(35))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    sig = Column(Unicode(140))
    note = Column(Unicode(210))
    revision_no = Column(Integer, server_default=text("((1))"))
    sent_dt = Column(DateTime)
    ndc_cd = Column(Unicode(11))
    course_desc = Column(Unicode(255))


class ErxAgtRxMh(Base):
    __tablename__ = 'erx_agt_rx_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    erx_agt_rx_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    rx_id = Column(Integer, nullable=False)
    item_no = Column(Integer, nullable=False)
    inst_id = Column(Unicode(30))
    disp_qty = Column(Unicode(15))
    erx_refill_rqst_id = Column(Integer)
    dest_pharm_id = Column(Unicode(7))
    stkh_name_id = Column(Integer)
    sent_ind = Column(Unicode(1))
    rsn_not_sent = Column(Integer)
    rcvd_ind = Column(Unicode(1))
    rcvd_dt = Column(DateTime)
    rx_ref_no = Column(Unicode(35))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    sig = Column(Unicode(140))
    note = Column(Unicode(210))
    sent_dt = Column(DateTime)
    ndc_cd = Column(Unicode(11))
    course_desc = Column(Unicode(255))


class ErxConfig(Base):
    __tablename__ = 'erx_config'

    erx_vendor = Column(Unicode(10), primary_key=True)
    acct_id = Column(Unicode(20))
    portal_id = Column(Unicode(20))
    portal_id_bkup = Column(Unicode(20))
    service_lvl_code = Column(Unicode(15))
    service_lvl = Column(Unicode(5))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ErxDataTran(Base):
    __tablename__ = 'erx_data_trans'
    __table_args__ = (
        Index('nc1_erx_data_trans', 'erx_seg', 'erx_tag'),
    )

    erx_data_id = Column(Integer, primary_key=True)
    erx_seg = Column(Unicode(25), nullable=False)
    erx_tag = Column(Unicode(50), nullable=False)
    erx_sub_tag = Column(Unicode(50))
    db_table = Column(Unicode(25))
    db_field = Column(Unicode(25))
    seq_no = Column(Integer)
    new_rec_ind = Column(Unicode(1))
    sub_tab_ind = Column(Unicode(1))


class ErxDrugSeg(Base):
    __tablename__ = 'erx_drug_seg'

    erx_drug_id = Column(Integer, primary_key=True)
    erx_seg_ref_id = Column(Integer, index=True)
    drug_desc = Column(Unicode(110))
    item_id = Column(Unicode(1))
    item_desc = Column(Unicode(35))
    item_no = Column(Unicode(35))
    code_agncy = Column(Unicode(3))
    form_code = Column(Unicode(10))
    drug_strength = Column(Unicode(70))
    drug_strength_code = Column(Unicode(10))
    drug_db_cd = Column(Unicode(35))
    drug_db_src = Column(Unicode(3))
    prod_cd = Column(Unicode(35))
    written_dt = Column(Unicode(10))
    qty_code = Column(Unicode(10))
    qty = Column(Unicode(15))
    qty_qual = Column(Unicode(3))
    days_supp = Column(Unicode(4))
    dosage = Column(Unicode(140))
    drug_dt_qual = Column(Unicode(3))
    drug_dt_prd = Column(Unicode(8))
    drug_dt_prd_qual = Column(Unicode(3))
    prod_sub_code = Column(Unicode(2))
    refills_unit_qual = Column(Unicode(3))
    refill_qty = Column(Unicode(10))
    ref_no = Column(Unicode(35))
    ref_no_qual = Column(Unicode(3))
    rx_note = Column(Unicode(210))
    prior_qual = Column(Unicode(3))
    prior_val = Column(Unicode(35))
    diag1_clinic_qual = Column(Unicode(30))
    diag1_dx1_qual = Column(Unicode(10))
    diag1_dx1_desc = Column(Unicode(17))
    diag1_dx2_qual = Column(Unicode(10))
    diag1_dx2_desc = Column(Unicode(17))
    diag2_clinic_qual = Column(Unicode(30))
    diag2_dx1_qual = Column(Unicode(10))
    diag2_dx1_desc = Column(Unicode(17))
    diag2_dx2_qual = Column(Unicode(10))
    diag2_dx2_desc = Column(Unicode(17))
    last_fill_dt = Column(Unicode(10))
    prod_cd_qual = Column(Unicode(15))
    erx_drug_seg_typ = Column(Unicode(1))


class ErxDueSeg(Base):
    __tablename__ = 'erx_due_seg'

    erx_due_id = Column(Integer, primary_key=True)
    erx_drug_id = Column(Integer)
    srvc_rsn_cd = Column(Unicode(2))
    prof_srvc_cd = Column(Unicode(2))
    srvc_result_cd = Column(Unicode(2))
    co_agt_id = Column(Unicode(20))
    co_agt_qual = Column(Unicode(2))
    clinic_sig_cd = Column(Unicode(1))
    ack_reason = Column(Unicode(100))


class ErxErrLog(Base):
    __tablename__ = 'erx_err_log'

    erx_err_log_id = Column(Integer, primary_key=True)
    external_err_cd = Column(Unicode(6))
    internal_err_cd = Column(Unicode(6))
    err_desc = Column(Unicode(255))
    tech_err_desc = Column(Unicode(1500))
    edi_out_id = Column(Integer, index=True)
    rcvd_from = Column(Unicode(35))
    generated_tstamp = Column(DateTime, index=True)
    ack_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ErxId(Base):
    __tablename__ = 'erx_ids'

    erx_id_id = Column(Integer, primary_key=True)
    erx_seg_ref_id = Column(Integer, index=True)
    erx_seg = Column(Unicode(5))
    id_value = Column(Unicode(80))
    id_value_cd = Column(Unicode(30))


class ErxLog(Base):
    __tablename__ = 'erx_log'

    erx_event = Column(Unicode(20), primary_key=True, nullable=False)
    event_start_dt = Column(DateTime, primary_key=True, nullable=False)
    event_end_dt = Column(DateTime)
    last_updated_ind = Column(Unicode(1))


class ErxObsSeg(Base):
    __tablename__ = 'erx_obs_seg'

    erx_obs_id = Column(Integer, primary_key=True)
    erx_seg_ref_id = Column(Integer)
    meas_dimension = Column(Unicode(3))
    meas_value = Column(Unicode(20))
    obs_date = Column(DateTime)
    meas_data_qual = Column(Unicode(3))
    meas_src_cd = Column(Unicode(3))
    meas_unit_cd = Column(Unicode(15))


class ErxPhone(Base):
    __tablename__ = 'erx_phone'

    erx_phone_id = Column(Integer, primary_key=True)
    erx_seg_ref_id = Column(Integer, index=True)
    erx_seg = Column(Unicode(5))
    phone_no = Column(Unicode(80))
    phone_no_cd = Column(Unicode(3))


class ErxPttSeg(Base):
    __tablename__ = 'erx_ptt_seg'

    erx_ptt_id = Column(Integer, primary_key=True)
    erx_seg_ref_id = Column(Integer, index=True)
    dob = Column(Unicode(8))
    pt_last_name = Column(Unicode(35))
    pt_first_name = Column(Unicode(35))
    pt_init = Column(Unicode(35))
    pt_suffix = Column(Unicode(10))
    pt_prefix = Column(Unicode(10))
    gender = Column(Unicode(3))
    pt_identifier = Column(Unicode(35))
    pt_id_cd = Column(Unicode(3))
    addr_1 = Column(Unicode(35))
    city = Column(Unicode(35))
    state = Column(Unicode(2))
    country = Column(Unicode(2))
    zip_cd = Column(Unicode(9))
    addr_2_cd = Column(Unicode(3))
    addr_2 = Column(Unicode(35))
    email = Column(Unicode(80))


class ErxPvdSeg(Base):
    __tablename__ = 'erx_pvd_seg'

    erx_pvd_id = Column(Integer, primary_key=True)
    erx_seg_ref_id = Column(Integer, index=True)
    prov_cd = Column(Unicode(5))
    prov_spec_typ_cd = Column(Unicode(3))
    prov_spec_cd = Column(Unicode(10))
    prov_last_name = Column(Unicode(35))
    prov_first_name = Column(Unicode(35))
    prov_init = Column(Unicode(35))
    prov_suffix = Column(Unicode(10))
    prov_prefix = Column(Unicode(10))
    prov_email = Column(Unicode(255))
    clinic_name = Column(Unicode(35))
    addr_1 = Column(Unicode(35))
    city = Column(Unicode(35))
    state = Column(Unicode(2))
    country = Column(Unicode(2))
    zip_cd = Column(Unicode(9))
    addr_2_cd = Column(Unicode(3))
    addr_2 = Column(Unicode(35))
    agt_last_name = Column(Unicode(35))
    agt_first_name = Column(Unicode(35))
    agt_init = Column(Unicode(35))
    agt_suffix = Column(Unicode(10))
    agt_prefix = Column(Unicode(10))


class ErxRefillDetail(Base):
    __tablename__ = 'erx_refill_detail'
    __table_args__ = (
        Index('nc1_erx_refill_detail', 'rx_ref_no', 'refill_seg', 'attribute', 'proc_ind'),
    )

    erx_refill_detail_id = Column(Integer, primary_key=True)
    rx_ref_no = Column(Unicode(35), nullable=False)
    refill_seg = Column(Unicode(25), nullable=False)
    attribute = Column(Unicode(30), nullable=False)
    attr_value = Column(Unicode(210), nullable=False)
    group_no = Column(Integer)
    proc_ind = Column(Unicode(1), index=True)


class ErxRefillDrugCvg(Base):
    __tablename__ = 'erx_refill_drug_cvg'

    erx_drug_cvg_id = Column(Integer, primary_key=True)
    erx_seg_ref_id = Column(Integer)
    drug_cvg_status_cd = Column(Unicode(2))


class ErxRefillRqst(Base):
    __tablename__ = 'erx_refill_rqst'
    __table_args__ = (
        Index('nc2_erx_refill_rqst', 'pt_id', 'sent_ind'),
        Index('nc1_erx_refill_rqst', 'prov_stkh_id', 'recvd_dt')
    )

    erx_refill_rqst_id = Column(Integer, primary_key=True)
    pt_id = Column(Unicode(20))
    pt_key = Column(Unicode(35))
    pt_last_name = Column(Unicode(35))
    pt_first_name = Column(Unicode(35))
    pt_init = Column(Unicode(35))
    dob = Column(DateTime)
    recvd_dt = Column(DateTime)
    inst_id = Column(Unicode(30))
    rx_id = Column(Integer)
    item_no = Column(Integer)
    prov_stkh_id = Column(Unicode(20))
    svsr_stkh_id = Column(Unicode(20))
    prov_first_name = Column(Unicode(35))
    prov_last_name = Column(Unicode(35))
    prov_id = Column(Unicode(35))
    prov_id_typ = Column(Unicode(3))
    pharm_id = Column(Unicode(7))
    prod_code = Column(Unicode(35))
    agt_name = Column(Unicode(50))
    drug_desc = Column(Unicode(110))
    drug_strength = Column(Unicode(70))
    sig = Column(Unicode(140))
    qty_disp = Column(Unicode(15))
    drug_dt_qual = Column(Unicode(3))
    drug_dt_prd = Column(Unicode(8))
    drug_dt_prd_qual = Column(Unicode(3))
    prod_sub_code = Column(Integer)
    refill_qty = Column(Integer)
    refill_rqst_resp_cd = Column(Unicode(1))
    refill_resp_rsn_cd = Column(Unicode(3))
    refill_resp_desc = Column(Unicode(70))
    no_refills_rqsted = Column(Integer)
    no_refills_appr = Column(Integer)
    placer_order_no = Column(Unicode(35))
    rx_ref_no = Column(Unicode(35))
    ss_msg_id = Column(Unicode(35))
    resp_prov_stkh_id = Column(Unicode(20))
    resp_svsr_stkh_id = Column(Unicode(20))
    phys_rev_rqd = Column(Unicode(1))
    prc_ind = Column(Unicode(1))
    appr_ind = Column(Unicode(1))
    sent_ind = Column(Unicode(1))
    rcvd_ind = Column(Unicode(1))
    sent_dt = Column(DateTime)
    rcvd_dt = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))
    resp_placer_order_no = Column(Unicode(35))
    obs_note = Column(Unicode(140))


class ErxRefillRqstMh(Base):
    __tablename__ = 'erx_refill_rqst_mh'

    erx_refill_rqst_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    pt_id = Column(Unicode(20))
    pt_key = Column(Unicode(35))
    pt_last_name = Column(Unicode(35))
    pt_first_name = Column(Unicode(35))
    pt_init = Column(Unicode(35))
    dob = Column(DateTime)
    recvd_dt = Column(DateTime)
    inst_id = Column(Unicode(30))
    rx_id = Column(Integer)
    item_no = Column(Integer)
    prov_stkh_id = Column(Unicode(20))
    svsr_stkh_id = Column(Unicode(20))
    prov_first_name = Column(Unicode(35))
    prov_last_name = Column(Unicode(35))
    prov_id = Column(Unicode(35))
    prov_id_typ = Column(Unicode(3))
    pharm_id = Column(Unicode(7))
    prod_code = Column(Unicode(35))
    agt_name = Column(Unicode(50))
    drug_desc = Column(Unicode(110))
    drug_strength = Column(Unicode(70))
    sig = Column(Unicode(140))
    qty_disp = Column(Unicode(15))
    drug_dt_qual = Column(Unicode(3))
    drug_dt_prd = Column(Unicode(8))
    drug_dt_prd_qual = Column(Unicode(3))
    prod_sub_code = Column(Integer)
    refill_qty = Column(Integer)
    refill_rqst_resp_cd = Column(Unicode(1))
    refill_resp_rsn_cd = Column(Unicode(3))
    refill_resp_desc = Column(Unicode(70))
    no_refills_rqsted = Column(Integer)
    no_refills_appr = Column(Integer)
    placer_order_no = Column(Unicode(35))
    rx_ref_no = Column(Unicode(35))
    ss_msg_id = Column(Unicode(35))
    resp_prov_stkh_id = Column(Unicode(20))
    resp_svsr_stkh_id = Column(Unicode(20))
    phys_rev_rqd = Column(Unicode(1))
    prc_ind = Column(Unicode(1))
    appr_ind = Column(Unicode(1))
    sent_ind = Column(Unicode(1))
    rcvd_ind = Column(Unicode(1))
    sent_dt = Column(DateTime)
    rcvd_dt = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    resp_placer_order_no = Column(Unicode(35))
    obs_note = Column(Unicode(140))


class EthnicGroup(Base):
    __tablename__ = 'ethnic_groups'

    ethnic_group_id = Column(Integer, primary_key=True)
    ethnic_group_desc = Column(Unicode(40), nullable=False)
    ethnic_group_cd = Column(Unicode(5))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    base_ethnic_typ = Column(Integer)


class EventTyp(Base):
    __tablename__ = 'event_typ'

    event_typ = Column(Unicode(1), primary_key=True)
    event_name = Column(Unicode(40), nullable=False)
    event_desc = Column(Unicode(100), nullable=False)
    gnrc_intv_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    sch_event_name = Column(Unicode(40))


class ExamAsmt(Base):
    __tablename__ = 'exam_asmt'
    __table_args__ = (
        ForeignKeyConstraint(['exam_comp_id', 'exam_asmt_attr_id', 'inst_id', 'userid'], [u'exam_asmt_attr.exam_comp_id', u'exam_asmt_attr.exam_asmt_attr_id', u'exam_asmt_attr.inst_id', u'exam_asmt_attr.userid']),
        Index('nc2_exam_asmt', 'inst_id', 'userid', 'exam_comp_id')
    )

    exam_comp_id = Column(Integer, primary_key=True, nullable=False)
    exam_asmt_attr_id = Column(Integer, primary_key=True, nullable=False)
    exam_asmt_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    seq_no = Column(Integer, nullable=False)
    exam_asmt_cd = Column(Unicode(1), nullable=False)
    exam_asmt_desc = Column(Unicode(200), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))
    app_cd = Column(Unicode(10))

    exam_comp = relationship(u'ExamAsmtAttr')


class ExamAsmtAttr(Base):
    __tablename__ = 'exam_asmt_attr'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'userid', 'exam_comp_id'], [u'user_exam_comp.inst_id', u'user_exam_comp.userid', u'user_exam_comp.exam_comp_id']),
        Index('nc2_exam_asmt_attr', 'inst_id', 'userid', 'exam_comp_id')
    )

    exam_comp_id = Column(Integer, primary_key=True, nullable=False)
    exam_asmt_attr_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    exam_comp_attr = Column(Unicode(40))
    seq_no = Column(Integer)
    asmt_value_typ = Column(Unicode(10))
    active_ind = Column(Unicode(1))
    desc_phrase = Column(Unicode(100))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))
    app_cd = Column(Unicode(10))

    inst = relationship(u'UserExamComp')


class ExamAsmtAttrCulture(Base):
    __tablename__ = 'exam_asmt_attr_culture'

    exam_comp_id = Column(Integer, primary_key=True, nullable=False)
    exam_asmt_attr_id = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    lookup_desc = Column(Unicode(40), nullable=False)
    lookup_desc_phrase = Column(Unicode(100), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ExamAsmtCulture(Base):
    __tablename__ = 'exam_asmt_culture'

    exam_comp_id = Column(Integer, primary_key=True, nullable=False)
    exam_asmt_attr_id = Column(Integer, primary_key=True, nullable=False)
    exam_asmt_id = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    lookup_desc = Column(Unicode(200), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ExamComp(Base):
    __tablename__ = 'exam_comp'

    exam_comp_id = Column(Integer, primary_key=True)
    exam_cd = Column(Unicode(1))
    system_typ_id = Column(Integer, nullable=False)
    exam_comp_desc = Column(Unicode(40), nullable=False)
    neg_desc = Column(Unicode(100))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ExamCompCulture(Base):
    __tablename__ = 'exam_comp_culture'

    exam_comp_id = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    exam_cd = Column(Unicode(1), nullable=False)
    system_typ_id = Column(Integer, nullable=False)
    lookup_desc = Column(Unicode(40))
    lookup_desc_neg = Column(Unicode(100))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ExamDfltDesc(Base):
    __tablename__ = 'exam_dflt_desc'
    __table_args__ = (
        Index('nc1_exam_dflt_desc', 'inst_id', 'userid'),
    )

    userid = Column(Unicode(10), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    system_comp = Column(Unicode(30), primary_key=True, nullable=False)
    normal_desc = Column(Unicode(200))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ExamSystem(Base):
    __tablename__ = 'exam_system'

    system_typ_id = Column(Integer, primary_key=True)
    exam_cd = Column(Unicode(1))
    exam_system_desc = Column(Unicode(30))
    seq_no = Column(Integer)
    sex_cd = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ExamSystemDfltCulture(Base):
    __tablename__ = 'exam_system_dflt_culture'

    system_typ_id = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    normal_desc = Column(Unicode(255))
    normal_intro = Column(Unicode(255))
    abnormal_intro = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ExpDest(Base):
    __tablename__ = 'exp_dest'

    exp_dest = Column(Unicode(50), primary_key=True)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))


class ExpHxMast(Base):
    __tablename__ = 'exp_hx_mast'

    seq_no = Column(Integer, primary_key=True)
    app_cd = Column(ForeignKey(u'app.app_cd'), nullable=False)
    exp_dest = Column(Unicode(50), nullable=False)
    create_date = Column(DateTime, nullable=False)
    userid = Column(Unicode(10), nullable=False)
    exp_file_name = Column(Unicode(60), nullable=False)
    decryption_pw = Column(Unicode(16), nullable=False)
    nonaffiliate_pw = Column(Unicode(16), nullable=False)
    inst_id = Column(Unicode(30))
    dest_inst_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))

    app = relationship(u'App')


class ExpHxPt(Base):
    __tablename__ = 'exp_hx_pt'

    seq_no = Column(ForeignKey(u'exp_hx_mast.seq_no'), primary_key=True, nullable=False)
    pt_id = Column(Unicode(20), primary_key=True, nullable=False, index=True)
    exp_typ = Column(Unicode(1), nullable=False)
    exp_vers_no = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))

    exp_hx_mast = relationship(u'ExpHxMast')


class ExpHxTp(Base):
    __tablename__ = 'exp_hx_tp'

    seq_no = Column(ForeignKey(u'exp_hx_mast.seq_no'), primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    tp_typ = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))

    exp_hx_mast = relationship(u'ExpHxMast')


class ExtDrugDb(Base):
    __tablename__ = 'ext_drug_db'

    ext_drug_db_id = Column(Integer, primary_key=True)
    ext_drug_db_desc = Column(Unicode(30), nullable=False)
    ext_drug_db_abbr = Column(Unicode(10), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class ExtDrugDbFdbDetail(Base):
    __tablename__ = 'ext_drug_db_fdb_detail'

    ext_drug_db_id = Column(Integer, primary_key=True)
    region_code = Column(Integer)
    language_id = Column(Integer)
    short_name = Column(Unicode(60), nullable=False)
    abbrev = Column(Unicode(10), nullable=False)
    fdb_server_name = Column(Unicode(100), nullable=False)
    fdb_database_name = Column(Unicode(100), nullable=False)
    fdb_userid = Column(Unicode(20), nullable=False)
    fdb_password = Column(Unicode(20), nullable=False)
    disclaimer_msg_txt = Column(UnicodeText(1073741823))
    licence_agrmt_txt = Column(UnicodeText(1073741823))
    dll_name = Column(Unicode(80), nullable=False)
    logo1_pic = Column(Unicode(100))
    logo2_pic = Column(Unicode(100))
    trans_log_user_id = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class Fac(Base):
    __tablename__ = 'fac'

    inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True, nullable=False)
    fac_id = Column(Integer, primary_key=True, nullable=False)
    fac_name = Column(Unicode(50), nullable=False)
    fac_address_1 = Column(Unicode(30), nullable=False)
    fac_address_2 = Column(Unicode(30))
    fac_address_3 = Column(Unicode(30))
    fac_city = Column(Unicode(30), nullable=False)
    fac_county = Column(Unicode(30))
    fac_prv_state = Column(Unicode(30), nullable=False)
    country_id = Column(ForeignKey(u'country.country_id'))
    fac_pc_zip = Column(Unicode(10), nullable=False)
    fac_tel = Column(Unicode(28), nullable=False)
    fac_tel_ext = Column(Unicode(10))
    fac_typ = Column(ForeignKey(u'fac_typ.fac_typ'))
    hl7_flag = Column(Unicode(1))
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    prv_state_id = Column(Integer)
    fac_pc_zip_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    fac_tel_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))

    country = relationship(u'Country')
    fac_pc_zip_fmt = relationship(u'FmtField', primaryjoin='Fac.fac_pc_zip_fmt_id == FmtField.fmt_field_id')
    fac_tel_fmt = relationship(u'FmtField', primaryjoin='Fac.fac_tel_fmt_id == FmtField.fmt_field_id')
    fac_typ1 = relationship(u'FacTyp')
    inst = relationship(u'Inst')


class FacCalibration(Base):
    __tablename__ = 'fac_calibration'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'fac_id', 'fac_comp_id'], [u'fac_comp.inst_id', u'fac_comp.fac_id', u'fac_comp.fac_comp_id']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    fac_id = Column(Integer, primary_key=True, nullable=False)
    fac_comp_id = Column(Integer, primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20))
    comp_name = Column(Unicode(30))
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    sex = Column(Unicode(1), primary_key=True, nullable=False)
    age_start = Column(Integer, primary_key=True, nullable=False)
    age_end = Column(Integer)
    min_norm = Column(Numeric(11, 4))
    max_norm = Column(Numeric(11, 4))
    uom = Column(Integer)
    lead_time = Column(Integer)
    lead_time_unit = Column(Integer)
    min_reason = Column(Numeric(11, 4))
    max_reason = Column(Numeric(11, 4))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    min_abs = Column(Numeric(11, 4))
    max_abs = Column(Numeric(11, 4))

    inst = relationship(u'FacComp')


class FacComp(Base):
    __tablename__ = 'fac_comp'
    __table_args__ = (
        Index('nc1_fac_comp', 'typ_of_test', 'comp_name'),
        Index('nc2_fac_comp', 'fac_id', 'append_result_ind')
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    fac_id = Column(Integer, primary_key=True, nullable=False)
    fac_comp_id = Column(Integer, primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20))
    comp_name = Column(Unicode(30))
    fac_typ_of_test = Column(Unicode(30))
    fac_comp_name = Column(Unicode(30))
    fac_comp_order_no = Column(Integer)
    intf_ord_ind = Column(Unicode(1))
    intf_result_prcs_ind = Column(Unicode(1))
    intf_label_test = Column(Unicode(30))
    prnt_lbl_txt = Column(Unicode(7))
    status_typ = Column(Integer)
    multi_result_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    append_result_ind = Column(Unicode(1))
    configured_ind = Column(Unicode(1))
    intf_merge_cmt_ind = Column(Unicode(1))


class FacCompMap(Base):
    __tablename__ = 'fac_comp_map'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'fac_id', 'fac_comp_id'], [u'fac_comp.inst_id', u'fac_comp.fac_id', u'fac_comp.fac_comp_id']),
    )

    fac_comp_seq = Column(Integer, primary_key=True)
    inst_id = Column(Unicode(30), nullable=False)
    fac_id = Column(Integer, nullable=False)
    fac_comp_id = Column(Integer, nullable=False)
    typ_of_test = Column(Unicode(20))
    comp_name = Column(Unicode(30))
    mapping_typ = Column(Unicode(2))
    mapping_cd = Column(Unicode(30))
    eff_date = Column(DateTime)
    term_date = Column(DateTime)
    spec_typ = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'FacComp')


class FacCompVal(Base):
    __tablename__ = 'fac_comp_val'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'fac_id', 'fac_comp_id'], [u'fac_comp.inst_id', u'fac_comp.fac_id', u'fac_comp.fac_comp_id']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    fac_id = Column(Integer, primary_key=True, nullable=False)
    fac_comp_id = Column(Integer, primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20))
    comp_name = Column(Unicode(30))
    fac_comp_val_id = Column(Integer, primary_key=True, nullable=False)
    fac_comp_val = Column(Unicode(20))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'FacComp')


class FacGroup(Base):
    __tablename__ = 'fac_group'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    fac_id = Column(Integer, primary_key=True, nullable=False)
    fac_group_id = Column(Integer, primary_key=True, nullable=False)
    fac_group_name = Column(Unicode(30), nullable=False)
    billable_ind = Column(Unicode(1))
    group_ind = Column(Unicode(1))
    intf_result_prcs_ind = Column(Unicode(1))
    intf_ord_ind = Column(Unicode(1))
    intf_label_test = Column(Unicode(30))
    prnt_lbl_txt = Column(Unicode(7))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    configured_ind = Column(Unicode(1))
    order_reason_req_ind = Column(Unicode(1))
    report_grp_ind = Column(Unicode(1))


class FacGroupBill(Base):
    __tablename__ = 'fac_group_bill'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'fac_id', 'fac_group_id'], [u'fac_group.inst_id', u'fac_group.fac_id', u'fac_group.fac_group_id']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    fac_id = Column(Integer, primary_key=True, nullable=False)
    fac_group_id = Column(Integer, primary_key=True, nullable=False)
    fac_group_bill_id = Column(Integer, primary_key=True, nullable=False)
    bill_cd = Column(Unicode(30), nullable=False)
    bill_cd_typ_id = Column(Integer, nullable=False)
    bill_instance_id = Column(Integer, nullable=False)
    bill_qty = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'FacGroup')


class FacGroupDxReq(Base):
    __tablename__ = 'fac_group_dx_req'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    fac_id = Column(Integer, primary_key=True, nullable=False)
    fac_group_id = Column(Integer, primary_key=True, nullable=False)
    fac_group_dx_req_group_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class FacGroupDxReqGroup(Base):
    __tablename__ = 'fac_group_dx_req_group'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    fac_id = Column(Integer, primary_key=True, nullable=False)
    fac_group_id = Column(Integer, primary_key=True, nullable=False)
    fac_group_dx_req_group_id = Column(Integer, primary_key=True, nullable=False)
    fac_group_dx_req_comp_id = Column(Integer, primary_key=True, nullable=False)
    from_icd_cd = Column(Unicode(16), nullable=False)
    to_icd_cd = Column(Unicode(16))
    cls_scheme_id = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class FacGroupMap(Base):
    __tablename__ = 'fac_group_map'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'fac_id', 'fac_group_id'], [u'fac_group.inst_id', u'fac_group.fac_id', u'fac_group.fac_group_id']),
    )

    fac_grp_map_seq = Column(Integer, primary_key=True)
    inst_id = Column(Unicode(30), nullable=False)
    fac_id = Column(Integer, nullable=False)
    fac_group_id = Column(Integer, nullable=False)
    mapping_typ = Column(Unicode(2), nullable=False)
    mapping_cd = Column(Unicode(30), nullable=False)
    eff_date = Column(DateTime)
    term_date = Column(DateTime)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'FacGroup')


class FacGroupReason(Base):
    __tablename__ = 'fac_group_reason'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    fac_id = Column(Integer, primary_key=True, nullable=False)
    fac_group_id = Column(Integer, primary_key=True, nullable=False)
    fac_group_reason_id = Column(Integer, primary_key=True, nullable=False)
    order_reason_desc = Column(Unicode(255), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class FacRqstn(Base):
    __tablename__ = 'fac_rqstn'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'fac_id'], [u'fac.inst_id', u'fac.fac_id']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    fac_id = Column(Integer, primary_key=True, nullable=False)
    fac_rqstn_no = Column(Unicode(20), primary_key=True, nullable=False)
    fac_rqstn_desc = Column(Unicode(40), nullable=False)
    prty_of_rqstn = Column(Integer, nullable=False)
    elctrnc_transfer = Column(Unicode(1), nullable=False)
    include_spcmn = Column(Unicode(1), nullable=False)
    print_rqstn_flag = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    active_ind = Column(Unicode(1))
    trans_trf_tstamp = Column(DateTime)
    billable_ind = Column(Unicode(1))
    fixed_font_ind = Column(Unicode(1))
    gnrc_rqstn_ind = Column(Unicode(1))
    vitals_ind = Column(Unicode(30))

    inst = relationship(u'Fac')


class FacRqstnCat(Base):
    __tablename__ = 'fac_rqstn_cat'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'fac_id', 'fac_rqstn_no'], [u'fac_rqstn.inst_id', u'fac_rqstn.fac_id', u'fac_rqstn.fac_rqstn_no']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    fac_id = Column(Integer, primary_key=True, nullable=False)
    fac_rqstn_no = Column(Unicode(20), primary_key=True, nullable=False)
    fac_rqstn_cat_no = Column(Integer, primary_key=True, nullable=False)
    fac_rqstn_order_no = Column(Integer, nullable=False)
    fac_rqstn_cat_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    active_ind = Column(Unicode(1))
    trans_trf_tstamp = Column(DateTime)
    result_cat_order = Column(Integer)

    inst = relationship(u'FacRqstn')


class FacTyp(Base):
    __tablename__ = 'fac_typ'

    fac_typ = Column(Integer, primary_key=True)
    fac_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class FacUnavl(Base):
    __tablename__ = 'fac_unavl'
    __table_args__ = (
        Index('nc1_fac_unavl', 'pt_id', 'pt_visit_id'),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    unavl_id = Column(Integer, primary_key=True, nullable=False)
    fac_id = Column(Integer)
    unavl_typ = Column(Integer, nullable=False)
    unavl_dow = Column(Integer)
    unavl_from = Column(DateTime, nullable=False)
    unavl_to = Column(DateTime, nullable=False)
    pt_id = Column(Unicode(20))
    pt_visit_id = Column(Integer)
    room_typ = Column(Integer)
    unavl_cmt = Column(Unicode(200))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, primary_key=True, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    event_typ = Column(Unicode(1))
    unavl_date = Column(DateTime)


class FacUomMap(Base):
    __tablename__ = 'fac_uom_map'

    fac_uom_map_id = Column(Integer, primary_key=True)
    fac_id = Column(Integer, nullable=False)
    uom = Column(ForeignKey(u'unit_of_meas.uom'), nullable=False)
    fac_uom_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    unit_of_mea = relationship(u'UnitOfMea')


class FaxProduct(Base):
    __tablename__ = 'fax_product'

    fax_product_id = Column(Integer, primary_key=True)
    fax_product = Column(Unicode(50), nullable=False)
    fax_product_vendor = Column(Unicode(50))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class FbmLtr(Base):
    __tablename__ = 'fbm_ltr'

    fbm_ltr_id = Column(Integer, primary_key=True)
    ltr_name = Column(Unicode(255), nullable=False)
    active_entry_ind = Column(Unicode(1), nullable=False)
    rcpt_cd = Column(Unicode(1), nullable=False)
    pt_notification_ind = Column(Unicode(1), nullable=False)
    template_inst_id = Column(Unicode(30))
    template_id = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class FbmPgm(Base):
    __tablename__ = 'fbm_pgm'

    fbm_pgm_id = Column(Integer, primary_key=True)
    fbm_pgm_name = Column(Unicode(255), nullable=False)
    fbm_pgm_typ = Column(Integer)
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class FbmPgmSch(Base):
    __tablename__ = 'fbm_pgm_sch'

    fbm_pgm_id = Column(Integer, primary_key=True, nullable=False)
    fbm_pgm_sch_id = Column(Integer, primary_key=True, nullable=False)
    fbm_pgm_sch_month = Column(Integer, nullable=False)
    fbm_ltr_id = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class FbmPgmTyp(Base):
    __tablename__ = 'fbm_pgm_typ'

    fbm_pgm_typ = Column(Integer, primary_key=True)
    fbm_pgm_typ_desc = Column(Unicode(255), nullable=False)
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class FbmPtFuTyp(Base):
    __tablename__ = 'fbm_pt_fu_typ'

    fbm_pt_fu_typ = Column(Integer, primary_key=True)
    fbm_pt_fu_typ_desc = Column(Unicode(255), nullable=False)
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class FbmPtHandlingTyp(Base):
    __tablename__ = 'fbm_pt_handling_typ'

    fbm_pt_handling_typ = Column(Integer, primary_key=True)
    fbm_pt_handling_typ_desc = Column(Unicode(255), nullable=False)
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class FbmPtRespTyp(Base):
    __tablename__ = 'fbm_pt_resp_typ'

    fbm_pt_resp_typ = Column(Integer, primary_key=True)
    fbm_pt_resp_typ_desc = Column(Unicode(255), nullable=False)
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class FcnAreaTyp(Base):
    __tablename__ = 'fcn_area_typ'

    fcn_area_typ = Column(Integer, primary_key=True)
    fcn_area_typ_desc = Column(Unicode(40), nullable=False)
    app_cd = Column(Unicode(10), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class FcnCl(Base):
    __tablename__ = 'fcn_cls'

    fcn_cls = Column(Integer, primary_key=True)
    fcn_cls_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    formula_dsp_ind = Column(Unicode(1))


class FcnComp(Base):
    __tablename__ = 'fcn_comp'

    fcn_typ = Column(Integer, primary_key=True, nullable=False)
    comp_name = Column(ForeignKey(u'fcn_comp_typ.comp_name'), primary_key=True, nullable=False)
    comp_unit = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    fcn_comp_typ = relationship(u'FcnCompTyp')


class FcnCompTyp(Base):
    __tablename__ = 'fcn_comp_typ'

    comp_name = Column(Unicode(30), primary_key=True)
    comp_alias_1 = Column(Unicode(30), nullable=False)
    comp_alias_2 = Column(Unicode(30), nullable=False)
    edit_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    comp_order_no = Column(Integer)


class FcnDetail(Base):
    __tablename__ = 'fcn_detail'

    fcn_id = Column(Integer, primary_key=True)
    fcn_typ = Column(ForeignKey(u'fcn_typ.fcn_typ'), nullable=False)
    fcn_detail_name = Column(Unicode(30), nullable=False)
    fcn_desc = Column(Unicode(255), nullable=False)
    sex_cd = Column(Unicode(1))
    age_start = Column(Integer)
    age_end = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    fcn_typ1 = relationship(u'FcnTyp')


class FcnTyp(Base):
    __tablename__ = 'fcn_typ'

    fcn_typ = Column(Integer, primary_key=True)
    fcn_cls = Column(Integer, nullable=False)
    fcn_name = Column(Unicode(30), nullable=False)
    fcn_comp = Column(Unicode(30), nullable=False)
    fcn_desc = Column(Unicode(255), nullable=False)
    active_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class FinancialIn(Base):
    __tablename__ = 'financial_ins'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'ins_co_id'], [u'ins_co.inst_id', u'ins_co.ins_co_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    financial_ins_id = Column(Integer, primary_key=True, nullable=False)
    ins_co_id = Column(Integer)
    policy_no = Column(Unicode(30))
    certificate_no = Column(Unicode(30))
    ins_group_no = Column(Unicode(30))
    hmo_auth_no = Column(Unicode(30))
    policy_holder = Column(Unicode(30))
    reltn_to_insd = Column(Integer)
    insd_last_name = Column(Unicode(30))
    insd_first_name = Column(Unicode(30))
    insd_initial = Column(Unicode(2))
    insd_dob = Column(DateTime)
    insd_sin_ssn = Column(Unicode(10))
    insd_address_1 = Column(Unicode(30))
    insd_address_2 = Column(Unicode(30))
    insd_address_3 = Column(Unicode(30))
    insd_city = Column(Unicode(30))
    insd_prv_state = Column(Unicode(30))
    insd_pc_zip = Column(Unicode(10))
    insd_country_id = Column(Integer)
    insd_phone = Column(Unicode(28))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    primary_ind = Column(Unicode(1))
    ins_co_grp_id = Column(Integer)
    trans_trf_tstamp = Column(DateTime)
    plcy_typ_id = Column(ForeignKey(u'plcy_typ.plcy_typ_id'))
    hmo_ind = Column(Unicode(1))
    inst_id = Column(Unicode(30))
    inactive_tstamp = Column(DateTime)
    current_entry_ind = Column(Unicode(1))
    active_entry_ind = Column(Unicode(1))
    insd_prv_state_id = Column(Integer)
    active_date = Column(DateTime)
    active_date_cd = Column(Integer)
    copay_amt = Column(Numeric(8, 2))
    valid_entry_ind = Column(Unicode(1))
    same_addr_ind = Column(Unicode(1))
    county = Column(Unicode(30))
    prv_state_id = Column(Integer)
    insd_pc_zip_fmt_id = Column(Integer)
    insd_phone_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    insd_id_no = Column(Unicode(33))
    intf_ins_co_id = Column(Integer)
    precert_req_ind = Column(Unicode(1))
    insd_sex_cd = Column(Unicode(1))

    insd_phone_fmt = relationship(u'FmtField')
    inst = relationship(u'InsCo')
    plcy_typ = relationship(u'PlcyTyp')


class FmtClsTyp(Base):
    __tablename__ = 'fmt_cls_typ'

    fmt_cls_typ = Column(Integer, primary_key=True)
    fmt_cls_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class FmtField(Base):
    __tablename__ = 'fmt_field'
    __table_args__ = (
        ForeignKeyConstraint(['country_id', 'fmt_field_name'], [u'country_field.country_id', u'country_field.fmt_field_name']),
    )

    fmt_field_id = Column(Integer, primary_key=True)
    country_id = Column(Integer)
    fmt_cls_typ = Column(ForeignKey(u'fmt_cls_typ.fmt_cls_typ'))
    fmt_field_name = Column(Unicode(40))
    fmt_field_list_name = Column(Unicode(40))
    fmt_field_sort_order = Column(Integer)
    fmt_string_id = Column(ForeignKey(u'fmt_string.fmt_string_id'), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    country = relationship(u'CountryField')
    fmt_cls_typ1 = relationship(u'FmtClsTyp')
    fmt_string = relationship(u'FmtString')


class FmtString(Base):
    __tablename__ = 'fmt_string'

    fmt_string_id = Column(Integer, primary_key=True)
    fmt_string_desc = Column(Unicode(40), nullable=False)
    fmt_string_value = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class FocusStatusTyp(Base):
    __tablename__ = 'focus_status_typ'

    focus_status_typ = Column(Integer, primary_key=True)
    focus_status_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class FormTyp(Base):
    __tablename__ = 'form_typ'

    form_typ = Column(Integer, primary_key=True)
    form_desc = Column(Unicode(20))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class FsCustView(Base):
    __tablename__ = 'fs_cust_view'
    __table_args__ = (
        Index('nc1_fs_cust_view', 'pt_id', 'comp_name'),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    fs_data_typ = Column(Unicode(25), nullable=False)
    fs_fcn_id = Column(Integer, primary_key=True, nullable=False)
    comp_name = Column(Unicode(50), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    typ_of_test = Column(Unicode(20))
    test_comp_name = Column(Unicode(30))


class FsCustViewProvider(Base):
    __tablename__ = 'fs_cust_view_provider'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    fs_cust_view_id = Column(Integer, primary_key=True, nullable=False)
    cust_view_desc = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class FsCustViewProviderComp(Base):
    __tablename__ = 'fs_cust_view_provider_comp'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    fs_cust_view_id = Column(Integer, primary_key=True, nullable=False)
    fs_data_typ = Column(Unicode(25), primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20))
    test_comp_name = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    fs_fcn_id = Column(Integer)


class FsFcnTyp(Base):
    __tablename__ = 'fs_fcn_typ'

    fs_fcn_id = Column(Integer, primary_key=True)
    fs_fcn_desc = Column(Unicode(255), nullable=False)
    fs_dflt_fcn_order_no = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class GnrcGrp(Base):
    __tablename__ = 'gnrc_grp'

    gnrc_grp_id = Column(Integer, primary_key=True)
    gnrc_grp_desc = Column(Unicode(50), nullable=False)
    active_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class GnrcNote(Base):
    __tablename__ = 'gnrc_note'

    inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True, nullable=False)
    gnrc_note_id = Column(Integer, primary_key=True, nullable=False)
    gnrc_note_typ = Column(ForeignKey(u'gnrc_note_typ.gnrc_note_typ'), nullable=False)
    gnrc_note_txt = Column(Unicode(255), nullable=False)
    gnrc_note_short_desc = Column(Unicode(40), nullable=False)
    cr_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    seq_no = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))

    gnrc_note_typ1 = relationship(u'GnrcNoteTyp')
    inst = relationship(u'Inst')


class GnrcNoteTyp(Base):
    __tablename__ = 'gnrc_note_typ'

    gnrc_note_typ = Column(Integer, primary_key=True)
    gnrc_note_tbl = Column(Unicode(30), nullable=False)
    gnrc_note_col = Column(Unicode(30), nullable=False)
    gnrc_note_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    app_cd = Column(Unicode(10))


class GradingCriterion(Base):
    __tablename__ = 'grading_criteria'
    __table_args__ = (
        ForeignKeyConstraint(['gs_author', 'eff_date', 'tr_typ', 'tr_comp_name'], [u'tr_comp.gs_author', u'tr_comp.eff_date', u'tr_comp.tr_typ', u'tr_comp.tr_comp_name']),
    )

    gs_author = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    tr_typ = Column(Unicode(30), primary_key=True, nullable=False)
    tr_comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    tr_grade = Column(Integer, primary_key=True, nullable=False)
    tr_min_range = Column(Numeric(11, 4))
    tr_max_range = Column(Numeric(11, 4))
    upper_margin = Column(Numeric(11, 4))
    lower_margin = Column(Numeric(11, 4))
    trend = Column(Numeric(11, 4))
    tr_grading_desc = Column(Unicode(255))
    appr_flag = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    cls_scheme_id = Column(Integer, index=True)
    grading_criteria_id = Column(Integer)
    bill_cd = Column(Unicode(30))
    bill_cd_typ_id = Column(Integer)
    tr_grading_enter_desc = Column(Unicode(255))

    tr_comp = relationship(u'TrComp')


class GradingCriteriaCulture(Base):
    __tablename__ = 'grading_criteria_culture'

    grading_criteria_id = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    tr_typ = Column(Unicode(30), nullable=False)
    tr_comp_name = Column(Unicode(300), nullable=False)
    tr_grading_desc = Column(Unicode(500))
    trans_log_userid = Column(Unicode(10))
    trans_log_inst_id = Column(Unicode(30))
    trans_log_tstamp = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)


class GradingScheme(Base):
    __tablename__ = 'grading_schemes'

    gs_author = Column(ForeignKey(u'spsr.spsr'), primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    gs_typ = Column(Unicode(1), nullable=False)
    gs_desc = Column(Unicode(40))
    original_gs_author = Column(ForeignKey(u'spsr.spsr'))
    original_eff_date = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    spsr = relationship(u'Spsr', primaryjoin='GradingScheme.gs_author == Spsr.spsr')
    spsr1 = relationship(u'Spsr', primaryjoin='GradingScheme.original_gs_author == Spsr.spsr')


class GsTrSubComp(Base):
    __tablename__ = 'gs_tr_sub_comp'
    __table_args__ = (
        ForeignKeyConstraint(['gs_author', 'eff_date', 'tr_typ', 'tr_comp_name'], [u'tr_comp.gs_author', u'tr_comp.eff_date', u'tr_comp.tr_typ', u'tr_comp.tr_comp_name']),
    )

    gs_author = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    tr_typ = Column(Unicode(30), primary_key=True, nullable=False)
    tr_comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    tr_sub_comp_group = Column(Unicode(40))
    tr_sub_comp_name = Column(Unicode(60), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    cls_scheme_id = Column(Integer, index=True)
    tr_sub_comp_id = Column(Integer, index=True)

    tr_comp = relationship(u'TrComp')


class GsTrSubCompCulture(Base):
    __tablename__ = 'gs_tr_sub_comp_culture'

    tr_sub_comp_id = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    tr_typ = Column(Unicode(30), nullable=False)
    tr_comp_name = Column(Unicode(100), nullable=False)
    tr_sub_comp_group = Column(Unicode(100))
    tr_sub_comp_name = Column(Unicode(100))
    trans_log_userid = Column(Unicode(10))
    trans_log_inst_id = Column(Unicode(30))
    trans_log_tstamp = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)


class HcpBill(Base):
    __tablename__ = 'hcp_bill'
    __table_args__ = (
        ForeignKeyConstraint(['bill_cd', 'bill_cd_typ_id', 'bill_instance_id'], [u'bill_cd_instance.bill_cd', u'bill_cd_instance.bill_cd_typ_id', u'bill_cd_instance.bill_instance_id']),
        ForeignKeyConstraint(['hcp_inst_id', 'hcp_id'], [u'hcp_name.hcp_inst_id', u'hcp_name.hcp_id'])
    )

    hcp_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    hcp_id = Column(Integer, primary_key=True, nullable=False)
    bill_cd = Column(Unicode(30), primary_key=True, nullable=False)
    bill_cd_typ_id = Column(Integer, primary_key=True, nullable=False)
    bill_instance_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    bill_cd_instance = relationship(u'BillCdInstance')
    hcp_inst = relationship(u'HcpName')


class HcpName(Base):
    __tablename__ = 'hcp_name'

    hcp_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    hcp_id = Column(Integer, primary_key=True, nullable=False)
    hcp_name = Column(Unicode(50), nullable=False)
    upper_hcp_name = Column(Unicode(50), nullable=False)
    hcp_typ = Column(ForeignKey(u'hcp_typ.hcp_typ'), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    active_entry_ind = Column(Unicode(1))

    hcp_typ1 = relationship(u'HcpTyp')


class HcpRx(Base):
    __tablename__ = 'hcp_rx'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id'], [u'pt_visit.pt_id', u'pt_visit.pt_visit_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    hcp_rx_id = Column(Integer, primary_key=True, nullable=False)
    status = Column(Unicode(1), nullable=False)
    hcp_rx_cmt = Column(UnicodeText(1073741823))
    copies_printed = Column(Integer)
    vrbl_id = Column(Integer)
    ord_by_userid = Column(Unicode(10))
    ord_by_inst_id = Column(Unicode(30))
    refill_ind = Column(Unicode(1))
    refill_qty = Column(Integer)
    refill_hcp_rx_id = Column(Integer)
    pp_int_prints = Column(Integer)
    pp_ext_prints = Column(Integer)
    appr_tstamp = Column(DateTime)
    disp_by_inst_id = Column(Unicode(30))
    disp_by_userid = Column(Unicode(10))
    disp_tstamp = Column(DateTime)
    date_time_ord = Column(DateTime)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    int_prints = Column(Integer)

    pt = relationship(u'PtVisit')


class HcpRxProd(Base):
    __tablename__ = 'hcp_rx_prod'
    __table_args__ = (
        ForeignKeyConstraint(['hcp_inst_id', 'hcp_id'], [u'hcp_name.hcp_inst_id', u'hcp_name.hcp_id']),
        ForeignKeyConstraint(['pt_id', 'pt_visit_id', 'hcp_rx_id'], [u'hcp_rx.pt_id', u'hcp_rx.pt_visit_id', u'hcp_rx.hcp_rx_id'])
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    hcp_rx_id = Column(Integer, primary_key=True, nullable=False)
    item_no = Column(Integer, primary_key=True, nullable=False)
    rx_typ = Column(ForeignKey(u'rx_typ.rx_typ'))
    hcp_inst_id = Column(Unicode(30))
    hcp_id = Column(Integer)
    hcp_name = Column(Unicode(50), nullable=False)
    hcp_qty = Column(Integer, nullable=False)
    hcp_cmt = Column(Unicode(255))
    valid_entry_ind = Column(Unicode(1))
    upper_hcp_name = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    hcp_inst = relationship(u'HcpName')
    pt = relationship(u'HcpRx')
    rx_typ1 = relationship(u'RxTyp')


class HcpTyp(Base):
    __tablename__ = 'hcp_typ'

    hcp_typ = Column(Integer, primary_key=True)
    hcp_typ_desc = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    service_ind = Column(Unicode(1))


class HelpIndex(Base):
    __tablename__ = 'help_index'

    app_cd = Column(Unicode(10), primary_key=True, nullable=False)
    window_label = Column(Unicode(30), primary_key=True, nullable=False)
    map_id = Column(Integer, primary_key=True, nullable=False)
    help_topic = Column(Unicode(100))
    display_order = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class HelpKwrd(Base):
    __tablename__ = 'help_kwrd'

    app_cd = Column(ForeignKey(u'app.app_cd'), primary_key=True, nullable=False)
    window_label = Column(Unicode(30), primary_key=True, nullable=False)
    hlp_kwrd = Column(Unicode(75), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))

    app = relationship(u'App')


class HelpUsage(Base):
    __tablename__ = 'help_usage'

    userid = Column(Unicode(10), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    dt_first_access = Column(DateTime, primary_key=True, nullable=False)
    dt_last_access = Column(DateTime, nullable=False)
    app_cd = Column(Unicode(10), primary_key=True, nullable=False)
    window_label = Column(Unicode(30), nullable=False)
    map_id = Column(Integer, nullable=False)
    help_cnt = Column(Integer, nullable=False)


class Hl7AppTyp(Base):
    __tablename__ = 'hl7_app_typ'

    app_cd = Column(ForeignKey(u'app.app_cd'), primary_key=True, nullable=False)
    app_typ = Column(Unicode(20), primary_key=True, nullable=False)
    app_typ_desc = Column(Unicode(60), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    app = relationship(u'App')


class Hl7Comp(Base):
    __tablename__ = 'hl7_comp'

    comp_id = Column(Unicode(10), primary_key=True)
    inst_id = Column(Unicode(30), nullable=False)
    def_typ = Column(ForeignKey(u'hl7_def_typ.def_typ'), nullable=False)
    data_typ = Column(ForeignKey(u'hl7_data_typ.data_typ'), nullable=False)
    comp_no = Column(Integer, nullable=False)
    comp_name = Column(Unicode(30), nullable=False)
    comp_data_typ = Column(ForeignKey(u'hl7_data_typ.data_typ'), nullable=False)
    sub_comp_no = Column(Integer)
    sub_comp_name = Column(Unicode(30))
    sub_comp_data_typ = Column(ForeignKey(u'hl7_data_typ.data_typ'))
    comp_desc = Column(Unicode(255))
    sub_comp_desc = Column(Unicode(255))
    data_format = Column(Unicode(60))
    del_ind = Column(Unicode(1), nullable=False)
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    hl7_data_typ = relationship(u'Hl7DataTyp', primaryjoin='Hl7Comp.comp_data_typ == Hl7DataTyp.data_typ')
    hl7_data_typ1 = relationship(u'Hl7DataTyp', primaryjoin='Hl7Comp.data_typ == Hl7DataTyp.data_typ')
    hl7_def_typ = relationship(u'Hl7DefTyp')
    hl7_data_typ2 = relationship(u'Hl7DataTyp', primaryjoin='Hl7Comp.sub_comp_data_typ == Hl7DataTyp.data_typ')


class Hl7CondDetail(Base):
    __tablename__ = 'hl7_cond_detail'
    __table_args__ = (
        ForeignKeyConstraint(['field_comp_xref_id', 'hl7_cond_header_id'], [u'hl7_cond_header.field_comp_xref_id', u'hl7_cond_header.hl7_cond_header_id']),
    )

    field_comp_xref_id = Column(Unicode(10), primary_key=True, nullable=False)
    hl7_cond_header_id = Column(Unicode(10), primary_key=True, nullable=False)
    cond_order = Column(Integer, primary_key=True, nullable=False)
    open_bracket = Column(Unicode(4))
    cmpr_val_cd = Column(Unicode(1))
    cmpr_field_comp_xref_id = Column(ForeignKey(u'hl7_field_comp_xref.field_comp_xref_id'))
    cmpr_seg_field_xref_id = Column(ForeignKey(u'hl7_seg_field_xref.seg_field_xref_id'))
    cmpr_mapped_ind = Column(Unicode(1))
    validation_column_name = Column(Unicode(30))
    cmpr_operator = Column(Unicode(10), nullable=False)
    cond_val_cd = Column(Unicode(1))
    cond_val = Column(Unicode(255))
    cond_field_comp_xref_id = Column(ForeignKey(u'hl7_field_comp_xref.field_comp_xref_id'))
    cond_seg_field_xref_id = Column(ForeignKey(u'hl7_seg_field_xref.seg_field_xref_id'))
    cond_mapped_ind = Column(Unicode(1))
    logical_operator = Column(Unicode(3))
    close_bracket = Column(Unicode(4))
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    cmpr_field_comp_xref = relationship(u'Hl7FieldCompXref', primaryjoin='Hl7CondDetail.cmpr_field_comp_xref_id == Hl7FieldCompXref.field_comp_xref_id')
    cmpr_seg_field_xref = relationship(u'Hl7SegFieldXref', primaryjoin='Hl7CondDetail.cmpr_seg_field_xref_id == Hl7SegFieldXref.seg_field_xref_id')
    cond_field_comp_xref = relationship(u'Hl7FieldCompXref', primaryjoin='Hl7CondDetail.cond_field_comp_xref_id == Hl7FieldCompXref.field_comp_xref_id')
    cond_seg_field_xref = relationship(u'Hl7SegFieldXref', primaryjoin='Hl7CondDetail.cond_seg_field_xref_id == Hl7SegFieldXref.seg_field_xref_id')
    field_comp_xref = relationship(u'Hl7CondHeader')


class Hl7CondHeader(Base):
    __tablename__ = 'hl7_cond_header'

    field_comp_xref_id = Column(Unicode(10), primary_key=True, nullable=False)
    hl7_cond_header_id = Column(Unicode(10), primary_key=True, nullable=False)
    msg_evnt_seg_field_xref_id = Column(ForeignKey(u'hl7_msg_evnt_seg_field_xref.msg_evnt_seg_field_xref_id'), nullable=False)
    global_ind = Column(Unicode(1), nullable=False)
    cond_process_order = Column(Integer, nullable=False)
    cond_type = Column(Unicode(1), nullable=False)
    validation_ref_id = Column(Unicode(15))
    validation_inst_id = Column(Unicode(30))
    true_val_cd = Column(Unicode(1))
    true_val = Column(Unicode(255))
    true_field_comp_xref_id = Column(ForeignKey(u'hl7_field_comp_xref.field_comp_xref_id'))
    true_seg_field_xref_id = Column(ForeignKey(u'hl7_seg_field_xref.seg_field_xref_id'))
    true_mapped_ind = Column(Unicode(1))
    false_val_cd = Column(Unicode(1))
    false_val = Column(Unicode(255))
    false_field_comp_xref_id = Column(ForeignKey(u'hl7_field_comp_xref.field_comp_xref_id'))
    false_seg_field_xref_id = Column(ForeignKey(u'hl7_seg_field_xref.seg_field_xref_id'))
    false_mapped_ind = Column(Unicode(1))
    doc_desc = Column(Unicode(255))
    del_ind = Column(Unicode(1), nullable=False)
    inbnd_ind = Column(Unicode(1), nullable=False)
    outbnd_ind = Column(Unicode(1), nullable=False)
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    pre_cond_ind = Column(Unicode(1))

    false_field_comp_xref = relationship(u'Hl7FieldCompXref', primaryjoin='Hl7CondHeader.false_field_comp_xref_id == Hl7FieldCompXref.field_comp_xref_id')
    false_seg_field_xref = relationship(u'Hl7SegFieldXref', primaryjoin='Hl7CondHeader.false_seg_field_xref_id == Hl7SegFieldXref.seg_field_xref_id')
    msg_evnt_seg_field_xref = relationship(u'Hl7MsgEvntSegFieldXref')
    true_field_comp_xref = relationship(u'Hl7FieldCompXref', primaryjoin='Hl7CondHeader.true_field_comp_xref_id == Hl7FieldCompXref.field_comp_xref_id')
    true_seg_field_xref = relationship(u'Hl7SegFieldXref', primaryjoin='Hl7CondHeader.true_seg_field_xref_id == Hl7SegFieldXref.seg_field_xref_id')


class Hl7CondHeaderAppMsg(Base):
    __tablename__ = 'hl7_cond_header_app_msg'
    __table_args__ = (
        ForeignKeyConstraint(['field_comp_xref_id', 'hl7_cond_header_id'], [u'hl7_cond_header.field_comp_xref_id', u'hl7_cond_header.hl7_cond_header_id']),
    )

    field_comp_xref_id = Column(Unicode(10), nullable=False)
    hl7_cond_header_id = Column(Unicode(10), primary_key=True, nullable=False)
    app_msg_no = Column(Unicode(10), primary_key=True, nullable=False)
    msg_parameter_1 = Column(Unicode(60))
    val_cd_1 = Column(Unicode(1))
    seg_field_xref_id_1 = Column(ForeignKey(u'hl7_seg_field_xref.seg_field_xref_id'))
    field_comp_xref_id_1 = Column(ForeignKey(u'hl7_field_comp_xref.field_comp_xref_id'))
    msg_parameter_2 = Column(Unicode(60))
    val_cd_2 = Column(Unicode(1))
    seg_field_xref_id_2 = Column(ForeignKey(u'hl7_seg_field_xref.seg_field_xref_id'))
    field_comp_xref_id_2 = Column(ForeignKey(u'hl7_field_comp_xref.field_comp_xref_id'))
    msg_parameter_3 = Column(Unicode(60))
    val_cd_3 = Column(Unicode(1))
    seg_field_xref_id_3 = Column(ForeignKey(u'hl7_seg_field_xref.seg_field_xref_id'))
    field_comp_xref_id_3 = Column(ForeignKey(u'hl7_field_comp_xref.field_comp_xref_id'))
    msg_parameter_4 = Column(Unicode(60))
    val_cd_4 = Column(Unicode(1))
    seg_field_xref_id_4 = Column(ForeignKey(u'hl7_seg_field_xref.seg_field_xref_id'))
    field_comp_xref_id_4 = Column(ForeignKey(u'hl7_field_comp_xref.field_comp_xref_id'))
    msg_parameter_5 = Column(Unicode(60))
    val_cd_5 = Column(Unicode(1))
    seg_field_xref_id_5 = Column(ForeignKey(u'hl7_seg_field_xref.seg_field_xref_id'))
    field_comp_xref_id_5 = Column(ForeignKey(u'hl7_field_comp_xref.field_comp_xref_id'))
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    field_comp_xref = relationship(u'Hl7CondHeader')
    hl7_field_comp_xref = relationship(u'Hl7FieldCompXref', primaryjoin='Hl7CondHeaderAppMsg.field_comp_xref_id_1 == Hl7FieldCompXref.field_comp_xref_id')
    hl7_field_comp_xref1 = relationship(u'Hl7FieldCompXref', primaryjoin='Hl7CondHeaderAppMsg.field_comp_xref_id_2 == Hl7FieldCompXref.field_comp_xref_id')
    hl7_field_comp_xref2 = relationship(u'Hl7FieldCompXref', primaryjoin='Hl7CondHeaderAppMsg.field_comp_xref_id_3 == Hl7FieldCompXref.field_comp_xref_id')
    hl7_field_comp_xref3 = relationship(u'Hl7FieldCompXref', primaryjoin='Hl7CondHeaderAppMsg.field_comp_xref_id_4 == Hl7FieldCompXref.field_comp_xref_id')
    hl7_field_comp_xref4 = relationship(u'Hl7FieldCompXref', primaryjoin='Hl7CondHeaderAppMsg.field_comp_xref_id_5 == Hl7FieldCompXref.field_comp_xref_id')
    hl7_seg_field_xref = relationship(u'Hl7SegFieldXref', primaryjoin='Hl7CondHeaderAppMsg.seg_field_xref_id_1 == Hl7SegFieldXref.seg_field_xref_id')
    hl7_seg_field_xref1 = relationship(u'Hl7SegFieldXref', primaryjoin='Hl7CondHeaderAppMsg.seg_field_xref_id_2 == Hl7SegFieldXref.seg_field_xref_id')
    hl7_seg_field_xref2 = relationship(u'Hl7SegFieldXref', primaryjoin='Hl7CondHeaderAppMsg.seg_field_xref_id_3 == Hl7SegFieldXref.seg_field_xref_id')
    hl7_seg_field_xref3 = relationship(u'Hl7SegFieldXref', primaryjoin='Hl7CondHeaderAppMsg.seg_field_xref_id_4 == Hl7SegFieldXref.seg_field_xref_id')
    hl7_seg_field_xref4 = relationship(u'Hl7SegFieldXref', primaryjoin='Hl7CondHeaderAppMsg.seg_field_xref_id_5 == Hl7SegFieldXref.seg_field_xref_id')


class Hl7DataTyp(Base):
    __tablename__ = 'hl7_data_typ'

    data_typ = Column(Unicode(3), primary_key=True)
    inst_id = Column(Unicode(30), nullable=False)
    def_typ = Column(ForeignKey(u'hl7_def_typ.def_typ'), nullable=False)
    data_typ_name = Column(Unicode(30), nullable=False)
    data_typ_desc = Column(Unicode(255))
    multi_comp_ind = Column(Unicode(1), nullable=False)
    del_ind = Column(Unicode(1), nullable=False)
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    hl7_def_typ = relationship(u'Hl7DefTyp')


class Hl7DefTyp(Base):
    __tablename__ = 'hl7_def_typ'

    def_typ = Column(Unicode(1), primary_key=True)
    def_typ_name = Column(Unicode(30))
    def_typ_desc = Column(Unicode(255))
    del_ind = Column(Unicode(1), nullable=False)
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class Hl7EvntTyp(Base):
    __tablename__ = 'hl7_evnt_typ'
    __table_args__ = (
        ForeignKeyConstraint(['def_typ', 'vers_no'], [u'hl7_vers.def_typ', u'hl7_vers.vers_no']),
    )

    evnt_typ_id = Column(Unicode(10), primary_key=True)
    inst_id = Column(Unicode(30), nullable=False)
    def_typ = Column(Unicode(1), nullable=False)
    evnt_typ = Column(Unicode(3), nullable=False)
    vers_no = Column(Unicode(10), nullable=False)
    evnt_typ_name = Column(Unicode(30))
    evnt_typ_desc = Column(Unicode(255))
    inbnd_ind = Column(Unicode(1), nullable=False)
    outbnd_ind = Column(Unicode(1), nullable=False)
    flip_ind = Column(Unicode(1), nullable=False)
    del_ind = Column(Unicode(1), nullable=False)
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    hl7_ver = relationship(u'Hl7Ver')


class Hl7Field(Base):
    __tablename__ = 'hl7_field'
    __table_args__ = (
        ForeignKeyConstraint(['def_typ', 'vers_no'], [u'hl7_vers.def_typ', u'hl7_vers.vers_no']),
    )

    field_id = Column(Unicode(10), primary_key=True)
    inst_id = Column(Unicode(30), nullable=False)
    def_typ = Column(Unicode(1), nullable=False)
    item_no = Column(Unicode(5), nullable=False)
    field_name = Column(Unicode(30), nullable=False)
    field_desc = Column(Unicode(255))
    field_data_typ = Column(ForeignKey(u'hl7_data_typ.data_typ'), nullable=False)
    vers_no = Column(Unicode(10), nullable=False)
    map_mthd_cd = Column(Unicode(1), index=True)
    stkh_prcs_cd = Column(Unicode(1))
    add_ind = Column(Unicode(1), nullable=False)
    pt_prcs_cd = Column(Unicode(1))
    rule_cd = Column(Unicode(1), nullable=False)
    inbnd_prcs_cd = Column(Unicode(1), nullable=False)
    outbnd_prcs_cd = Column(Unicode(1), nullable=False)
    hl7_map_ind = Column(Unicode(1), nullable=False)
    del_ind = Column(Unicode(1), nullable=False)
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    prof_reltn_ind = Column(Unicode(1))
    stkh_cd = Column(Unicode(1))
    null_ind = Column(Unicode(1))

    hl7_ver = relationship(u'Hl7Ver')
    hl7_data_typ = relationship(u'Hl7DataTyp')


class Hl7FieldCompXref(Base):
    __tablename__ = 'hl7_field_comp_xref'

    field_comp_xref_id = Column(Unicode(10), primary_key=True)
    field_comp_name = Column(Unicode(30), nullable=False)
    field_id = Column(ForeignKey(u'hl7_field.field_id'), nullable=False)
    comp_id = Column(ForeignKey(u'hl7_comp.comp_id'), nullable=False)
    data_typ_no = Column(Integer, nullable=False)
    data_typ = Column(Unicode(3), nullable=False)
    inbnd_prcs_cd = Column(Unicode(1), nullable=False)
    outbnd_prcs_cd = Column(Unicode(1), nullable=False)
    inbnd_dflt_severity = Column(Integer, nullable=False)
    outbnd_dflt_severity = Column(Integer, nullable=False)
    del_ind = Column(Unicode(1), nullable=False)
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    field_sub_comp_name = Column(Unicode(30))

    comp = relationship(u'Hl7Comp')
    field = relationship(u'Hl7Field')


class Hl7FinClsTyp(Base):
    __tablename__ = 'hl7_fin_cls_typ'

    hl7_fin_cls_typ_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    hl7_fin_cls_typ = Column(Integer, primary_key=True, nullable=False)
    hl7_fin_cls_typ_abbr = Column(Unicode(10), nullable=False)
    hl7_fin_cls_typ_desc = Column(Unicode(255), nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class Hl7HospServiceTyp(Base):
    __tablename__ = 'hl7_hosp_service_typ'

    hl7_hosp_service_typ_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    hl7_hosp_service_typ = Column(Integer, primary_key=True, nullable=False)
    hl7_hosp_service_typ_abbr = Column(Unicode(10), nullable=False)
    hl7_hosp_service_typ_desc = Column(Unicode(255), nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class Hl7In(Base):
    __tablename__ = 'hl7_in'

    hl7_in_seq_no = Column(Integer, primary_key=True)
    intf_app_parm_id = Column(Unicode(10), index=True)
    hl7_msg_cntl_id = Column(Unicode(30))
    sending_app = Column(Unicode(30))
    process_ind = Column(Unicode(1), index=True)
    msg_typ = Column(Unicode(3))
    msg_evnt_typ = Column(Unicode(3))
    file_name = Column(Unicode(255))
    msg_txt = Column(UnicodeText(1073741823))
    hl7_batch_id = Column(Unicode(20))
    hl7_out_seq_no = Column(Integer)
    wrng_msg_cnt = Column(Integer)
    pt_id = Column(Unicode(20))
    resolved_ind = Column(Unicode(1))
    resolved_desc = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False, index=True)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False, index=True)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    ovride_pt_addl_match_ind = Column(Unicode(1))
    post_msg_seq_no = Column(Integer)
    msg_stage_cd = Column(Unicode(1))
    prc_start_time = Column(DateTime)
    prc_end_time = Column(DateTime)
    patient_select_released_ind = Column(Unicode(1))
    update_patient_ser = Column(BigInteger)
    display_pt_key_1_value = Column(Unicode(25), index=True)
    display_pt_key_2_value = Column(Unicode(25))
    upper_display_pt_last_name = Column(Unicode(30))
    upper_display_pt_first_name = Column(Unicode(30))
    patient_select_userid = Column(Unicode(16))
    patient_select_tstamp = Column(DateTime)
    update_pt_id = Column(Unicode(20))


class Hl7InXml(Base):
    __tablename__ = 'hl7_in_xml'

    hl7_in_seq_no = Column(Integer, primary_key=True)
    intf_app_parm_id = Column(Unicode(10))
    process_ind = Column(Unicode(1), nullable=False)
    msg_txt = Column(UnicodeText(1073741823), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class Hl7Link(Base):
    __tablename__ = 'hl7_link'

    hl7_link_id = Column(Unicode(10), primary_key=True)
    src_record_seq_no = Column(Integer, nullable=False, index=True)
    src_record_direction = Column(Unicode(1), nullable=False)
    dest_record_seq_no = Column(Integer, nullable=False, index=True)
    dest_record_direction = Column(Unicode(1), nullable=False)
    link_typ = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class Hl7MsgAppTypXref(Base):
    __tablename__ = 'hl7_msg_app_typ_xref'

    msg_app_typ_xref_id = Column(Unicode(10), primary_key=True)
    msg_typ_id = Column(ForeignKey(u'hl7_msg_typ.msg_typ_id'), nullable=False)
    app_cd = Column(Unicode(10), nullable=False)
    app_typ = Column(Unicode(20), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    msg_typ = relationship(u'Hl7MsgTyp')


class Hl7MsgEvntSegFieldXref(Base):
    __tablename__ = 'hl7_msg_evnt_seg_field_xref'

    msg_evnt_seg_field_xref_id = Column(Unicode(10), primary_key=True)
    msg_evnt_seg_xref_id = Column(ForeignKey(u'hl7_msg_evnt_seg_xref.msg_evnt_seg_xref_id'), nullable=False)
    seg_field_xref_id = Column(ForeignKey(u'hl7_seg_field_xref.seg_field_xref_id'), nullable=False, index=True)
    inbnd_prcs_cd = Column(Unicode(1), nullable=False)
    outbnd_prcs_cd = Column(Unicode(1), nullable=False)
    ovride_ind = Column(Unicode(1), nullable=False)
    validation_ind = Column(Unicode(1), nullable=False)
    del_ind = Column(Unicode(1), nullable=False)
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    doc_desc = Column(Unicode(255))
    business_rule_ind = Column(Unicode(1))

    msg_evnt_seg_xref = relationship(u'Hl7MsgEvntSegXref')
    seg_field_xref = relationship(u'Hl7SegFieldXref')


class Hl7MsgEvntSegXref(Base):
    __tablename__ = 'hl7_msg_evnt_seg_xref'

    msg_evnt_seg_xref_id = Column(Unicode(10), primary_key=True)
    msg_evnt_xref_id = Column(ForeignKey(u'hl7_msg_evnt_xref.msg_evnt_xref_id'), nullable=False)
    msg_typ_id = Column(ForeignKey(u'hl7_msg_typ.msg_typ_id'), nullable=False)
    seg_typ_id = Column(ForeignKey(u'hl7_seg_typ.seg_typ_id'), nullable=False)
    req_ind = Column(Unicode(1), nullable=False)
    default_ind = Column(Unicode(1), nullable=False)
    sort_order_no = Column(Integer, nullable=False)
    nte_assoc_ind = Column(Unicode(1), nullable=False)
    grp_ind = Column(Unicode(1), nullable=False)
    grp_child_ind = Column(Unicode(1), nullable=False)
    repeatable_ind = Column(Unicode(1), nullable=False)
    level_no = Column(Integer, nullable=False)
    parent_msg_seg_xref_id = Column(Unicode(10), nullable=False)
    del_ind = Column(Unicode(1), nullable=False)
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    msg_evnt_xref = relationship(u'Hl7MsgEvntXref')
    msg_typ = relationship(u'Hl7MsgTyp')
    seg_typ = relationship(u'Hl7SegTyp')


class Hl7MsgEvntXref(Base):
    __tablename__ = 'hl7_msg_evnt_xref'

    msg_evnt_xref_id = Column(Unicode(10), primary_key=True)
    msg_typ_id = Column(ForeignKey(u'hl7_msg_typ.msg_typ_id'), nullable=False)
    evnt_typ_id = Column(ForeignKey(u'hl7_evnt_typ.evnt_typ_id'), nullable=False)
    default_ind = Column(Unicode(1), nullable=False)
    supported_ind = Column(Unicode(1), nullable=False)
    del_ind = Column(Unicode(1), nullable=False)
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    evnt_typ = relationship(u'Hl7EvntTyp')
    msg_typ = relationship(u'Hl7MsgTyp')


class Hl7MsgTyp(Base):
    __tablename__ = 'hl7_msg_typ'
    __table_args__ = (
        ForeignKeyConstraint(['def_typ', 'vers_no'], [u'hl7_vers.def_typ', u'hl7_vers.vers_no']),
    )

    msg_typ_id = Column(Unicode(10), primary_key=True)
    inst_id = Column(Unicode(30), nullable=False)
    def_typ = Column(Unicode(1), nullable=False)
    msg_typ = Column(Unicode(3), nullable=False)
    vers_no = Column(Unicode(10), nullable=False)
    msg_typ_name = Column(Unicode(30), nullable=False)
    msg_typ_desc = Column(Unicode(255))
    order_typ = Column(Unicode(3))
    inbnd_ind = Column(Unicode(1), nullable=False)
    outbnd_ind = Column(Unicode(1), nullable=False)
    del_ind = Column(Unicode(1), nullable=False)
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    master_file_typ = Column(Unicode(5))
    msg_typ_status_cd = Column(Unicode(1))
    msg_typ_level = Column(Integer)
    sign_out_userid = Column(Unicode(10))
    sign_out_instid = Column(Unicode(30))
    sign_out_tstamp = Column(DateTime)

    hl7_ver = relationship(u'Hl7Ver')


class Hl7MsgTypAuditHist(Base):
    __tablename__ = 'hl7_msg_typ_audit_hist'

    audit_hist_id = Column(Unicode(10), primary_key=True)
    msg_typ_id = Column(ForeignKey(u'hl7_msg_typ.msg_typ_id'), nullable=False)
    msg_typ_level = Column(Integer, nullable=False)
    author_name = Column(Unicode(60), nullable=False)
    audit_desc = Column(UnicodeText(1073741823))
    app_vers_no = Column(Unicode(20))
    app_sr_no = Column(Unicode(20))
    base_tstamp = Column(DateTime)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    msg_typ = relationship(u'Hl7MsgTyp')


class Hl7Out(Base):
    __tablename__ = 'hl7_out'
    __table_args__ = (
        Index('nc9_hl7_out', 'intf_app_parm_id', 'process_ind', 'intf_comm_id', 'hl7_out_seq_no', 'datetime_sent', 'msg_typ', 'msg_evnt_typ', 'hl7_msg_cntl_id'),
    )

    hl7_out_seq_no = Column(Integer, primary_key=True)
    intf_app_parm_id = Column(Unicode(10), index=True)
    process_ind = Column(Unicode(1), index=True)
    msg_txt = Column(UnicodeText(1073741823))
    datetime_sent = Column(DateTime)
    msg_typ = Column(Unicode(3))
    msg_evnt_typ = Column(Unicode(3))
    hl7_batch_id = Column(Unicode(20))
    hl7_msg_cntl_id = Column(Unicode(30), index=True)
    file_name = Column(Unicode(255))
    pt_id = Column(Unicode(20))
    resolved_ind = Column(Unicode(1))
    resolved_desc = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False, index=True)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False, index=True)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    wrng_msg_cnt = Column(Integer)
    seq_no_protocol_seq = Column(Integer)
    post_msg_seq_no = Column(Integer)
    msg_stage_cd = Column(Unicode(1))
    intf_comm_id = Column(Unicode(10))
    prc_start_time = Column(DateTime)
    prc_end_time = Column(DateTime)
    patient_select_released_ind = Column(Unicode(1))
    update_patient_ser = Column(BigInteger)
    format_typ = Column(Unicode(3))
    stkh_id = Column(Unicode(20))
    unavl_hdr_id = Column(Integer)
    display_pt_key_1_value = Column(Unicode(25), index=True)
    display_pt_key_2_value = Column(Unicode(25))
    upper_display_pt_last_name = Column(Unicode(30))
    upper_display_pt_first_name = Column(Unicode(30))
    patient_select_userid = Column(Unicode(16))
    patient_select_tstamp = Column(DateTime)
    pt_comm_log_id = Column(Integer)


class Hl7OutXml(Base):
    __tablename__ = 'hl7_out_xml'

    hl7_out_seq_no = Column(Integer, primary_key=True)
    intf_app_parm_id = Column(Unicode(10))
    process_ind = Column(Unicode(1), nullable=False)
    msg_txt = Column(UnicodeText(1073741823), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class Hl7PtClsTyp(Base):
    __tablename__ = 'hl7_pt_cls_typ'

    hl7_pt_cls_typ_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    hl7_pt_cls_typ = Column(Integer, primary_key=True, nullable=False)
    hl7_pt_cls_typ_abbr = Column(Unicode(10), nullable=False)
    hl7_pt_cls_typ_desc = Column(Unicode(255), nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class Hl7PtStatusTyp(Base):
    __tablename__ = 'hl7_pt_status_typ'

    hl7_pt_status_typ_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    hl7_pt_status_typ = Column(Integer, primary_key=True, nullable=False)
    hl7_pt_status_typ_abbr = Column(Unicode(10), nullable=False)
    hl7_pt_status_typ_desc = Column(Unicode(255), nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class Hl7PtTyp(Base):
    __tablename__ = 'hl7_pt_typ'

    hl7_pt_typ_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    hl7_pt_typ = Column(Integer, primary_key=True, nullable=False)
    hl7_pt_typ_abbr = Column(Unicode(10), nullable=False)
    hl7_pt_typ_desc = Column(Unicode(255), nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class Hl7SegFieldXref(Base):
    __tablename__ = 'hl7_seg_field_xref'

    seg_field_xref_id = Column(Unicode(10), primary_key=True)
    seg_typ_id = Column(ForeignKey(u'hl7_seg_typ.seg_typ_id'), nullable=False)
    field_id = Column(ForeignKey(u'hl7_field.field_id'), nullable=False, index=True)
    field_no = Column(Integer, nullable=False)
    inbnd_prcs_cd = Column(Unicode(1), nullable=False)
    outbnd_prcs_cd = Column(Unicode(1), nullable=False)
    doc_desc = Column(Unicode(255))
    repeatable_ind = Column(Unicode(1), nullable=False)
    del_ind = Column(Unicode(1), nullable=False)
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    field = relationship(u'Hl7Field')
    seg_typ = relationship(u'Hl7SegTyp')


class Hl7SegTyp(Base):
    __tablename__ = 'hl7_seg_typ'
    __table_args__ = (
        ForeignKeyConstraint(['def_typ', 'vers_no'], [u'hl7_vers.def_typ', u'hl7_vers.vers_no']),
    )

    seg_typ_id = Column(Unicode(10), primary_key=True)
    inst_id = Column(Unicode(30), nullable=False)
    def_typ = Column(Unicode(1), nullable=False)
    seg_typ = Column(Unicode(3), nullable=False)
    seg_typ_name = Column(Unicode(30), nullable=False)
    seg_typ_desc = Column(Unicode(255))
    snapshot_ind = Column(Unicode(1), nullable=False)
    vers_no = Column(Unicode(10), nullable=False)
    grp_ind = Column(Unicode(1), nullable=False)
    del_ind = Column(Unicode(1), nullable=False)
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    hl7_ver = relationship(u'Hl7Ver')


class Hl7Seq(Base):
    __tablename__ = 'hl7_seq'

    hl7_seq_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    hl7_seq_typ = Column(Unicode(10), primary_key=True, nullable=False)
    hl7_seq_no = Column(Numeric(20, 0), nullable=False)
    hl7_seq_digits = Column(Integer, nullable=False)


class Hl7Ver(Base):
    __tablename__ = 'hl7_vers'

    vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    def_typ = Column(ForeignKey(u'hl7_def_typ.def_typ'), primary_key=True, nullable=False)
    vers_desc = Column(Unicode(255))
    del_ind = Column(Unicode(1), nullable=False)
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    hl7_def_typ = relationship(u'Hl7DefTyp')


class HstGradeTyp(Base):
    __tablename__ = 'hst_grade_typ'

    hst_grade_typ = Column(Integer, primary_key=True)
    hst_grade_desc = Column(Unicode(10))
    diff_desc = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class HxHdr(Base):
    __tablename__ = 'hx_hdr'

    hdr_typ = Column(Integer, primary_key=True)
    hdr_desc = Column(Unicode(30), nullable=False)
    sex = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class HxQuestion(Base):
    __tablename__ = 'hx_question'

    hdr_typ = Column(ForeignKey(u'hx_hdr.hdr_typ'), primary_key=True, nullable=False)
    question_no = Column(Integer, primary_key=True, nullable=False)
    question = Column(Unicode(200), nullable=False)
    question_typ = Column(Integer, nullable=False)
    maintain_hx_count = Column(Integer, nullable=False)
    question_ht = Column(Integer)
    question_radio = Column(Unicode(200))
    question_start = Column(Unicode(1))
    question_end = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    hx_hdr = relationship(u'HxHdr')


class HydraFluid(Base):
    __tablename__ = 'hydra_fluid'

    hydra_fluid_id = Column(Integer, primary_key=True)
    hydra_fluid_desc = Column(Unicode(255))
    hydra_fluid_display = Column(Unicode(255))
    hydra_fluid_abbr = Column(Unicode(10))
    display_seq = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IcdDx(Base):
    __tablename__ = 'icd_dx'

    cls_scheme_id = Column(Integer, primary_key=True, nullable=False)
    icd_cd = Column(Unicode(16), primary_key=True, nullable=False, index=True)
    short_title = Column(Unicode(25), nullable=False)
    full_title = Column(Unicode(250), nullable=False)
    cat = Column(Unicode(1), nullable=False)
    subdivided = Column(Unicode(1), nullable=False)
    sex = Column(Unicode(1))
    major_dx_cat = Column(Unicode(2))
    age_cd = Column(Unicode(1))
    list_a_cd = Column(Unicode(3))
    active_ind = Column(Unicode(1))
    active_chg_date = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    include_detail = Column(Unicode(255))
    mnfstn_cd = Column(Unicode(1))
    reltd_mnfstn_desc = Column(Unicode(50))
    clinical_desc = Column(Unicode(250))
    revision_no = Column(Integer, server_default=text("((1))"))
    custom_cd_ind = Column(Unicode(1))
    app_cd = Column(Unicode(10))
    cache_key_ser = Column(BigInteger, index=True)
    reportable_ind = Column(Unicode(1))
    mandatory_ind = Column(Unicode(1))


class IcdDxCulture(Base):
    __tablename__ = 'icd_dx_culture'
    __table_args__ = (
        Index('nc1_icd_dx_culture', 'culture_cd', 'icd_cd'),
    )

    cls_scheme_id = Column(Integer, primary_key=True, nullable=False)
    icd_cd = Column(Unicode(16), primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    short_title = Column(Unicode(25), nullable=False)
    full_title = Column(Unicode(250), nullable=False)
    include_detail = Column(Unicode(255))
    clinical_desc = Column(Unicode(250))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    revision_no = Column(Integer, server_default=text("((1))"))
    app_cd = Column(Unicode(10))


class IcdGroup(Base):
    __tablename__ = 'icd_group'

    icd_group_id = Column(Integer, primary_key=True)
    icd_group_desc = Column(Unicode(250), nullable=False)
    active_ind = Column(Unicode(1), nullable=False, server_default=text("('Y')"))
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IcdProcedure(Base):
    __tablename__ = 'icd_procedure'

    cls_scheme_id = Column(Integer, primary_key=True, nullable=False)
    icd_cd = Column(Unicode(16), primary_key=True, nullable=False)
    short_title = Column(Unicode(25), nullable=False)
    full_title = Column(Unicode(250), nullable=False)
    cat = Column(Unicode(1), nullable=False)
    subdivided = Column(Unicode(1), nullable=False)
    sex = Column(Unicode(1))
    age_cd = Column(Unicode(1))
    list_b_cd = Column(Unicode(3))
    procedure_cls = Column(Unicode(3))
    operating_room = Column(Unicode(1))
    medicare_cd = Column(Unicode(1))


class IcdoMorphCd(Base):
    __tablename__ = 'icdo_morph_cd'

    cls_scheme_id = Column(Integer, primary_key=True, nullable=False)
    morph_cd = Column(Unicode(4), primary_key=True, nullable=False)
    behavior_cd = Column(ForeignKey(u'behavior_cd.behavior_cd'), primary_key=True, nullable=False)
    morph_cd_seq = Column(Integer, primary_key=True, nullable=False)
    morph_desc = Column(Unicode(100))
    icdo_morph_typ = Column(ForeignKey(u'icdo_morph_typ.icdo_morph_typ'))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    conv_grp = Column(Integer)
    varis_histology_cd = Column(Unicode(16), nullable=False)
    cache_key_ser = Column(BigInteger, index=True)

    behavior_cd1 = relationship(u'BehaviorCd')
    icdo_morph_typ1 = relationship(u'IcdoMorphTyp')


class IcdoMorphCdCulture(Base):
    __tablename__ = 'icdo_morph_cd_culture'

    cls_scheme_id = Column(Integer, primary_key=True, nullable=False)
    morph_cd = Column(Unicode(4), primary_key=True, nullable=False)
    behavior_cd = Column(Unicode(1), primary_key=True, nullable=False)
    morph_cd_seq = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    morph_desc = Column(Unicode(100), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    varis_histology_cd = Column(Unicode(16), nullable=False)


class IcdoMorphSite(Base):
    __tablename__ = 'icdo_morph_site'

    morph_cd = Column(Unicode(4), primary_key=True, nullable=False)
    behavior_cd = Column(Unicode(1), primary_key=True, nullable=False)
    morph_cd_seq = Column(Integer, primary_key=True, nullable=False)
    site_applic = Column(Unicode(3), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IcdoMorphTyp(Base):
    __tablename__ = 'icdo_morph_typ'

    icdo_morph_typ = Column(Integer, primary_key=True)
    icdo_morph_desc = Column(Unicode(100), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


t_icdo_morph_typ_culture = Table(
    'icdo_morph_typ_culture', metadata,
    Column('icdo_morph_typ', Integer, nullable=False),
    Column('icdo_morph_desc', Unicode(100)),
    Column('culture_cd', Unicode(10), nullable=False)
)


class IcdoSiteCd(Base):
    __tablename__ = 'icdo_site_cd'

    cls_scheme_id = Column(Integer, primary_key=True, nullable=False)
    icdo_site_cd = Column(Unicode(3), primary_key=True, nullable=False)
    icdo_site_seq = Column(Integer, primary_key=True, nullable=False)
    icdo_desc = Column(Unicode(100))
    icdo_site_typ = Column(ForeignKey(u'icdo_site_typ.icdo_site_typ'), nullable=False)
    syn_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    icdo_site_typ1 = relationship(u'IcdoSiteTyp')


class IcdoSiteCdCulture(Base):
    __tablename__ = 'icdo_site_cd_culture'

    cls_scheme_id = Column(Integer, primary_key=True, nullable=False)
    icdo_site_cd = Column(Unicode(3), primary_key=True, nullable=False)
    icdo_site_seq = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    icdo_desc = Column(Unicode(100), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IcdoSiteTyp(Base):
    __tablename__ = 'icdo_site_typ'

    icdo_site_typ = Column(Unicode(2), primary_key=True)
    icdo_site_desc = Column(Unicode(100), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    diag_file = Column(Unicode(12))


class IdTypCd(Base):
    __tablename__ = 'id_typ_cd'

    id_typ = Column(Integer, primary_key=True)
    typ_desc = Column(Unicode(255), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IdealWt(Base):
    __tablename__ = 'ideal_wt'

    cm_ht = Column(Integer, primary_key=True)
    kg_wt = Column(Numeric(7, 2), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class Image(Base):
    __tablename__ = 'image'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id', 'test_id'], [u'test.pt_id', u'test.pt_visit_id', u'test.test_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    image_id = Column(Integer, primary_key=True, nullable=False)
    image_typ = Column(ForeignKey(u'image_typ.image_typ'), nullable=False)
    image = Column(Unicode(20))
    status = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    image_typ1 = relationship(u'ImageTyp')
    pt = relationship(u'Test')


class ImageTyp(Base):
    __tablename__ = 'image_typ'

    image_typ = Column(Integer, primary_key=True)
    image_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ImgDcmnt(Base):
    __tablename__ = 'img_dcmnt'

    img_dcmnt_id = Column(Unicode(14), primary_key=True)
    dcmnt_desc = Column(Unicode(255))
    cur_vers_no = Column(Integer, nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    valid_entry_ind = Column(Unicode(1))
    del_ind = Column(Unicode(1))


class ImgFileTyp(Base):
    __tablename__ = 'img_file_typ'

    file_typ = Column(Integer, primary_key=True)
    file_desc = Column(Unicode(255), nullable=False)
    file_ext = Column(Unicode(4), nullable=False)
    show_user_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class ImgPage(Base):
    __tablename__ = 'img_page'

    img_id = Column(Unicode(14), primary_key=True, nullable=False)
    img_server_id = Column(ForeignKey(u'img_server.img_server_id'), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    img_dcmnt_id = Column(ForeignKey(u'img_dcmnt.img_dcmnt_id'), index=True)
    page_no = Column(Integer)
    vers_no = Column(Integer)
    share_name = Column(Unicode(255))
    dir_name = Column(Unicode(255))
    file_name = Column(Unicode(255))
    file_size = Column(Integer)
    annotation_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    valid_entry_ind = Column(Unicode(1))
    img_res = Column(Integer)
    compress_factor = Column(Integer)

    img_dcmnt = relationship(u'ImgDcmnt')
    img_server = relationship(u'ImgServer')


class ImgPageBatch(Base):
    __tablename__ = 'img_page_batch'

    img_batch_id = Column(Unicode(14), primary_key=True)
    img_server_id = Column(Unicode(10), nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    no_pages = Column(Integer)
    share_name = Column(Unicode(255))
    note_txt = Column(UnicodeText(1073741823))
    dir_name = Column(Unicode(255))
    file_name = Column(Unicode(255))
    file_size = Column(Integer)
    first_in_batch = Column(Unicode(10))
    master_batch_id = Column(Unicode(14))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    page_no = Column(Integer)
    img_res = Column(Integer)
    compress_factor = Column(Integer)


class ImgPaperCfg(Base):
    __tablename__ = 'img_paper_cfg'

    paper_cfg_id = Column(Unicode(10), primary_key=True)
    paper_dflt_id = Column(ForeignKey(u'img_paper_dflt.paper_dflt_id'), nullable=False)
    scan_mode_id = Column(ForeignKey(u'img_scan_mode.scan_mode_id'), nullable=False)
    form_desc = Column(Unicode(255), nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    resolution = Column(Integer)
    brightness = Column(Integer)
    contrast = Column(Integer)
    duplex_ind = Column(Unicode(1))
    dflt_ind = Column(Unicode(1))
    paper_top = Column(Numeric(8, 3))
    paper_left = Column(Numeric(8, 3))
    paper_right = Column(Numeric(8, 3))
    paper_bottom = Column(Numeric(8, 3))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    paper_dflt = relationship(u'ImgPaperDflt')
    scan_mode = relationship(u'ImgScanMode')


class ImgPaperDflt(Base):
    __tablename__ = 'img_paper_dflt'

    paper_dflt_id = Column(Integer, primary_key=True)
    paper_id = Column(Integer, nullable=False)
    paper_desc = Column(Unicode(255))
    resolution = Column(Integer)
    brightness = Column(Integer)
    contrast = Column(Integer)
    duplex_ind = Column(Unicode(1))
    paper_top = Column(Numeric(8, 3))
    paper_left = Column(Numeric(8, 3))
    paper_right = Column(Numeric(8, 3))
    paper_bottom = Column(Numeric(8, 3))
    show_user_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ImgScanMode(Base):
    __tablename__ = 'img_scan_mode'

    scan_mode_id = Column(Integer, primary_key=True)
    scan_mode = Column(Integer, nullable=False)
    scan_desc = Column(Unicode(255))
    scan_note = Column(Unicode(255))
    show_user_ind = Column(Unicode(1))
    dflt_ind = Column(Unicode(1))
    file_typ = Column(ForeignKey(u'img_file_typ.file_typ'))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    img_file_typ = relationship(u'ImgFileTyp')


class ImgServer(Base):
    __tablename__ = 'img_server'

    img_server_id = Column(Unicode(10), primary_key=True)
    inst_id = Column(Unicode(30), nullable=False)
    machine_name = Column(Unicode(255))
    ip_addr = Column(Unicode(30))
    ip_port = Column(Integer)
    loc_desc = Column(Unicode(255))
    server_mode = Column(Unicode(1))
    cur_share = Column(Unicode(255))
    cur_share_dt = Column(DateTime)
    tot_img = Column(Integer)
    tot_dcmnt = Column(Integer)
    high_user_cnt = Column(Integer)
    cur_user_cnt = Column(Integer)
    max_user_cnt = Column(Integer)
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    img_server_typ = Column(Unicode(1))
    purge_days = Column(Integer)
    compress_factor = Column(Integer)
    run_purge_at = Column(Unicode(5))


class ImgServerStorage(Base):
    __tablename__ = 'img_server_storage'

    img_server_id = Column(ForeignKey(u'img_server.img_server_id'), primary_key=True, nullable=False)
    server_storage_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    typ_of_storage = Column(Unicode(1), nullable=False)
    share_name = Column(Unicode(255))
    max_size = Column(Integer)
    cur_size = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    img_server = relationship(u'ImgServer')


class ImpHxMast(Base):
    __tablename__ = 'imp_hx_mast'

    seq_no = Column(Integer, primary_key=True)
    imp_date = Column(DateTime, nullable=False)
    userid = Column(Unicode(10), nullable=False)
    imp_file_name = Column(Unicode(60), nullable=False)
    file_create_date = Column(DateTime, nullable=False)
    file_create_by = Column(Unicode(50), nullable=False)
    app_cd = Column(ForeignKey(u'app.app_cd'), nullable=False)
    inst_id = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))

    app = relationship(u'App')


class ImpHxPt(Base):
    __tablename__ = 'imp_hx_pt'

    seq_no = Column(ForeignKey(u'imp_hx_mast.seq_no'), primary_key=True, nullable=False)
    pt_id = Column(Unicode(20), primary_key=True, nullable=False, index=True)
    imp_typ = Column(Unicode(1), nullable=False)
    imp_vers_no = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))

    imp_hx_mast = relationship(u'ImpHxMast')


class ImpHxTp(Base):
    __tablename__ = 'imp_hx_tp'

    seq_no = Column(ForeignKey(u'imp_hx_mast.seq_no'), primary_key=True, nullable=False)
    tp_exp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_new_name = Column(Unicode(20))
    tp_amended_flag = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    tp_exp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)

    imp_hx_mast = relationship(u'ImpHxMast')


class ImpexpApp(Base):
    __tablename__ = 'impexp_app'

    table_name = Column(ForeignKey(u'impexp_tables.table_name'), primary_key=True, nullable=False)
    impexp_app_cd = Column(ForeignKey(u'impexp_app_typ.impexp_app_cd'), primary_key=True, nullable=False)
    impexp_app_cmt = Column(Unicode(100))
    sync_tbl = Column(Unicode(1))

    impexp_app_typ = relationship(u'ImpexpAppTyp')
    impexp_table = relationship(u'ImpexpTable')


class ImpexpAppTyp(Base):
    __tablename__ = 'impexp_app_typ'

    impexp_app_cd = Column(Unicode(2), primary_key=True)
    app_cd_desc = Column(Unicode(60), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class ImpexpColumn(Base):
    __tablename__ = 'impexp_columns'

    table_name = Column(ForeignKey(u'impexp_tables.table_name'), primary_key=True, nullable=False)
    column_name = Column(Unicode(40), primary_key=True, nullable=False)
    column_typ = Column(Unicode(20), nullable=False)
    column_width = Column(Integer, nullable=False)
    column_dflt = Column(UnicodeText(1073741823))
    is_empty_chk_flag = Column(Unicode(1))
    column_pkey_ind = Column(Unicode(1))
    not_null_ind = Column(Unicode(1))
    allow_col_to_trf = Column(Unicode(1))
    data_elmnt_name = Column(Unicode(30))
    scrub_rule = Column(ForeignKey(u'trf_scrub_rule.scrub_rule'))
    column_audit_desc_ind = Column(Unicode(1))
    column_audit_desc_seq_no = Column(Numeric(5, 0))
    column_pkey_seq_no = Column(Numeric(5, 0))
    column_audit_dsp_value = Column(Unicode(1))
    uow_key_ind = Column(Unicode(1))
    uow_key_seq_no = Column(Numeric(5, 0))
    column_audit_value_ind = Column(Unicode(1))
    merge_id_ind = Column(Unicode(1))
    seq_typ = Column(Unicode(20))

    trf_scrub_rule = relationship(u'TrfScrubRule')
    impexp_table = relationship(u'ImpexpTable')


class ImpexpTable(Base):
    __tablename__ = 'impexp_tables'

    table_name = Column(Unicode(30), primary_key=True)
    impexp_order = Column(Integer)
    update_flag = Column(Unicode(1))
    tstamp_flag = Column(Unicode(1))
    impexp_app_cd = Column(Unicode(2))
    table_columns = Column(UnicodeText(1073741823))
    distinct_ind = Column(Unicode(1))
    impexp_cmt = Column(Unicode(100))
    audit_ind = Column(Unicode(1))
    audit_table = Column(Unicode(30))
    event_id = Column(Integer)
    audit_indv_rows_ind = Column(Unicode(1))
    merge_cat = Column(Integer)
    merge_order = Column(Integer)
    ccs_merge_cat = Column(Integer)
    ccs_merge_order = Column(Integer)


class TrfTblSendAll(ImpexpTable):
    __tablename__ = 'trf_tbl_send_all'

    tbl_name = Column(ForeignKey(u'impexp_tables.table_name'), primary_key=True)
    perm_flag = Column(Unicode(1), nullable=False)
    cmt = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))


class ImpexpThru(Base):
    __tablename__ = 'impexp_thru'
    __table_args__ = (
        ForeignKeyConstraint(['table_name', 'impexp_app_cd'], [u'impexp_app.table_name', u'impexp_app.impexp_app_cd']),
    )

    table_name = Column(Unicode(30), nullable=False)
    thru_table = Column(ForeignKey(u'impexp_tables.table_name'), nullable=False)
    sql_join = Column(UnicodeText(1073741823), nullable=False)
    dumb_key = Column(Integer, primary_key=True)
    impexp_app_cd = Column(Unicode(2), nullable=False)

    impexp_app = relationship(u'ImpexpApp')
    impexp_table = relationship(u'ImpexpTable')


class InfectionCtrlTyp(Base):
    __tablename__ = 'infection_ctrl_typ'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    infection_ctrl_typ_id = Column(Integer, primary_key=True, nullable=False)
    infection_ctrl_name = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    active_ind = Column(Unicode(1))


class InfusionDetail(Base):
    __tablename__ = 'infusion_details'
    __table_args__ = (
        ForeignKeyConstraint(['agt_name', 'dosage_form', 'dose_level'], [u'agt_dosage.agt_name', u'agt_dosage.dosage_form', u'agt_dosage.dose_level']),
    )

    agt_name = Column(Unicode(50), primary_key=True, nullable=False)
    dosage_form = Column(Integer, primary_key=True, nullable=False)
    dose_level = Column(Integer, primary_key=True, nullable=False)
    infusion_typ = Column(ForeignKey(u'infusion_typ.infusion_typ'), primary_key=True, nullable=False)
    infusion_details = Column(UnicodeText(1073741823), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    agt_dosage = relationship(u'AgtDosage')
    infusion_typ1 = relationship(u'InfusionTyp')


class InfusionTyp(Base):
    __tablename__ = 'infusion_typ'

    infusion_typ = Column(Integer, primary_key=True)
    infusion_desc = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IniParm(Base):
    __tablename__ = 'ini_parms'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    sect_name = Column(Unicode(30), primary_key=True, nullable=False)
    parm_name = Column(Unicode(30), primary_key=True, nullable=False)
    parm_val = Column(Unicode(255))
    data_typ = Column(Unicode(2))
    enc_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    revision_no = Column(Integer, server_default=text("((1))"))


class InsCo(Base):
    __tablename__ = 'ins_co'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'ins_co_parent_id'], [u'ins_co_parent.inst_id', u'ins_co_parent.ins_co_parent_id']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    ins_co_id = Column(Integer, primary_key=True, nullable=False)
    ins_co_name = Column(Unicode(50), nullable=False)
    address_1 = Column(Unicode(30))
    address_2 = Column(Unicode(30))
    address_3 = Column(Unicode(30))
    city = Column(Unicode(30))
    prv_state = Column(Unicode(30))
    pc_zip = Column(Unicode(10))
    country_id = Column(Integer)
    phone = Column(Unicode(28))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    prv_state_id = Column(ForeignKey(u'prv_state.prv_state_id'))
    ins_co_parent_id = Column(Integer)
    intf_ins_co_id = Column(Unicode(15))
    valid_entry_ind = Column(Unicode(1))
    county = Column(Unicode(30))
    pc_zip_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    phone_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))

    inst = relationship(u'InsCoParent')
    pc_zip_fmt = relationship(u'FmtField', primaryjoin='InsCo.pc_zip_fmt_id == FmtField.fmt_field_id')
    phone_fmt = relationship(u'FmtField', primaryjoin='InsCo.phone_fmt_id == FmtField.fmt_field_id')
    prv_state1 = relationship(u'PrvState')


class InsCoGrp(Base):
    __tablename__ = 'ins_co_grp'

    ins_co_grp_id = Column(Integer, primary_key=True)
    ins_co_grp_name = Column(Unicode(20), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class InsCoParent(Base):
    __tablename__ = 'ins_co_parent'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    ins_co_parent_id = Column(Integer, primary_key=True, nullable=False)
    ins_co_parent_desc = Column(Unicode(50), nullable=False)
    address_1 = Column(Unicode(30))
    address_2 = Column(Unicode(30))
    address_3 = Column(Unicode(30))
    city = Column(Unicode(30))
    pc_zip = Column(Unicode(10))
    phone_no = Column(Unicode(28))
    country_id = Column(ForeignKey(u'country.country_id'))
    prv_state_id = Column(ForeignKey(u'prv_state.prv_state_id'))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_trf_tstamp = Column(DateTime)
    indep_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    county = Column(Unicode(30))
    prv_state = Column(Unicode(30))
    pc_zip_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    phone_no_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))

    country = relationship(u'Country')
    pc_zip_fmt = relationship(u'FmtField', primaryjoin='InsCoParent.pc_zip_fmt_id == FmtField.fmt_field_id')
    phone_no_fmt = relationship(u'FmtField', primaryjoin='InsCoParent.phone_no_fmt_id == FmtField.fmt_field_id')
    prv_state1 = relationship(u'PrvState')


class InsPrecertAlertWindow(Base):
    __tablename__ = 'ins_precert_alert_window'

    ins_precert_typ = Column(ForeignKey(u'ins_precert_typ.ins_precert_typ'), primary_key=True, nullable=False)
    window_name = Column(Unicode(40), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    ins_precert_typ1 = relationship(u'InsPrecertTyp')


class InsPrecertTyp(Base):
    __tablename__ = 'ins_precert_typ'

    ins_precert_typ = Column(Integer, primary_key=True)
    ins_precert_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class InsRqstn(Base):
    __tablename__ = 'ins_rqstn'
    __table_args__ = (
        ForeignKeyConstraint(['fac_inst_id', 'fac_id', 'fac_rqstn_no'], [u'fac_rqstn.inst_id', u'fac_rqstn.fac_id', u'fac_rqstn.fac_rqstn_no']),
        ForeignKeyConstraint(['inst_id', 'ins_co_parent_id'], [u'ins_co_parent.inst_id', u'ins_co_parent.ins_co_parent_id'])
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    ins_co_parent_id = Column(Integer, primary_key=True, nullable=False)
    fac_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    fac_id = Column(Integer, primary_key=True, nullable=False)
    fac_rqstn_no = Column(Unicode(20), primary_key=True, nullable=False)
    rqstn_seq_no = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_trf_tstamp = Column(DateTime)
    ins_rqstn_eff_date = Column(DateTime)
    ins_rqstn_exp_date = Column(DateTime)

    fac_inst = relationship(u'FacRqstn')
    inst = relationship(u'InsCoParent')


class Inst(Base):
    __tablename__ = 'inst'

    inst_id = Column(Unicode(30), primary_key=True)
    inst_name = Column(Unicode(50), nullable=False)
    inst_seq = Column(Integer)
    inst_address_1 = Column(Unicode(30), nullable=False)
    inst_address_2 = Column(Unicode(30))
    inst_address_3 = Column(Unicode(30))
    inst_city = Column(Unicode(30), nullable=False)
    inst_prv_state = Column(Unicode(30), nullable=False)
    inst_country = Column(Integer, nullable=False)
    inst_pc_zip = Column(Unicode(10), nullable=False)
    inst_tel = Column(Unicode(28), nullable=False)
    inst_fax = Column(Unicode(28))
    inst_typ = Column(ForeignKey(u'inst_typ.inst_typ'))
    gs_author = Column(Integer)
    eff_date = Column(DateTime)
    abs_min_wt = Column(Numeric(11, 4))
    abs_max_wt = Column(Numeric(11, 4))
    wt_unit = Column(Integer)
    abs_min_ht = Column(Numeric(11, 4))
    abs_max_ht = Column(Numeric(11, 4))
    ht_unit = Column(Numeric(11, 4))
    inst_tel_ext = Column(Unicode(10))
    inst_county = Column(Unicode(30))
    hl7_billing_active = Column(Unicode(1))
    bill_void_ind = Column(Unicode(1))
    progress_note_ind = Column(Unicode(1))
    inst_date_fmt = Column(Unicode(20))
    inst_rx_ifmt = Column(Unicode(11))
    inst_rx_dfmt = Column(Unicode(16))
    inst_test_ifmt = Column(Unicode(11))
    inst_test_dfmt = Column(Unicode(16))
    inst_rx_i_fmt = Column(Unicode(16))
    inst_test_i_fmt = Column(Unicode(16))
    bill_unsol_hl7_ind = Column(Unicode(1))
    audit_del_ind = Column(Unicode(1))
    trf_trnsprt_mthd = Column(Unicode(20))
    trf_retries = Column(Integer)
    trf_ras_phnbk_id = Column(Unicode(30))
    trf_nw_password = Column(Unicode(30))
    trf_domain_name = Column(Unicode(100))
    trf_nw_login_id = Column(Unicode(30))
    phys_order_dur = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    prv_state_id = Column(ForeignKey(u'prv_state.prv_state_id'))
    trf_remote_connect = Column(Unicode(1))
    physical_site_ind = Column(Unicode(1))
    auto_fax_enabled = Column(Unicode(1))
    auto_email_enabled = Column(Unicode(1))
    scan_visit_range = Column(Integer)
    dcmnt_que_enabled = Column(Unicode(1))
    dcmnt_hdr_enabled = Column(Unicode(1))
    prnt_dcmnt_ftr_appr_ind = Column(Unicode(1))
    prnt_dcmnt_ftr_entered_ind = Column(Unicode(1))
    author_print_enabled = Column(Unicode(1))
    agt_formulary_inst_id = Column(Unicode(30))
    time_zone_id = Column(Numeric(5, 0))
    audit_ind = Column(Unicode(1))
    audit_reason_ind = Column(Unicode(1))
    inst_pc_zip_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    inst_tel_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    inst_fax_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    iv_qstr_id = Column(Integer)
    inpt_ind = Column(Unicode(1))
    bill_parent_ind = Column(Unicode(1))
    subj_result_as_txt_ind = Column(Unicode(1))
    revision_no = Column(Integer, server_default=text("((1))"))
    hospital_ser = Column(BigInteger)
    active_entry_ind = Column(Unicode(1))
    parent_inst_id = Column(Unicode(30))
    file_server_userid = Column(Unicode(10))
    file_server_password = Column(Unicode(30))
    stkh_id = Column(Unicode(20))
    track_inpt_hist_ind = Column(Unicode(1))
    department_ser = Column(BigInteger)
    inst_email_address = Column(Unicode(255))
    inst_smtp_address = Column(Unicode(255))

    inst_fax_fmt = relationship(u'FmtField', primaryjoin='Inst.inst_fax_fmt_id == FmtField.fmt_field_id')
    inst_pc_zip_fmt = relationship(u'FmtField', primaryjoin='Inst.inst_pc_zip_fmt_id == FmtField.fmt_field_id')
    inst_tel_fmt = relationship(u'FmtField', primaryjoin='Inst.inst_tel_fmt_id == FmtField.fmt_field_id')
    inst_typ1 = relationship(u'InstTyp')
    prv_state = relationship(u'PrvState')


class InstExtDrugDb(Inst):
    __tablename__ = 'inst_ext_drug_db'

    inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True)
    ext_drug_db_id = Column(ForeignKey(u'ext_drug_db.ext_drug_db_id'), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    ext_drug_db = relationship(u'ExtDrugDb')


class DbInst(Inst):
    __tablename__ = 'db_inst'

    inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True)
    install_flag = Column(Unicode(1), nullable=False)
    next_user_no = Column(Integer, nullable=False)
    audit_ind = Column(Unicode(1))
    audit_reason_ind = Column(Unicode(1))
    db_status_cd = Column(Unicode(30))
    db_status_date = Column(DateTime)
    db_vers_no = Column(Unicode(10))
    db_build_no = Column(Unicode(10))
    dual_mod_ind = Column(Unicode(1))
    locale_id = Column(Integer)
    database_server_name = Column(Unicode(30))
    database_server_port = Column(Integer)


class InstLab(Inst):
    __tablename__ = 'inst_lab'

    inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True)
    next_seq = Column(Unicode(15))
    start_val = Column(Unicode(15))
    end_val = Column(Unicode(15))
    days_prior = Column(Integer)
    days_after = Column(Integer)
    reset_intrvl = Column(Unicode(1))
    start_date = Column(DateTime)
    increment = Column(Integer, nullable=False)
    prefix_list = Column(Unicode(80))
    cur_prefix = Column(Unicode(10))
    reset_date = Column(DateTime)
    asc_active_ind = Column(Unicode(1))
    prcs_mode_ind = Column(Unicode(1))
    dsp_pt_key_cd = Column(Integer)
    dsp_pt_key_inst_id = Column(Unicode(30))
    prmy_lab_inst_id = Column(Unicode(30))
    prmy_lab_fac_id = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    matched_purge = Column(Integer)
    unmatched_purge = Column(Integer)
    dflt_visit_typ_parm = Column(Unicode(1))
    dflt_sort_order_parm = Column(Unicode(1))
    dflt_show_tests_parm = Column(Unicode(1))
    dflt_prmy_fac_parm = Column(Unicode(1), server_default=text("('N')"))


class InstAgendaCatTyp(Base):
    __tablename__ = 'inst_agenda_cat_typ'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'inst_task_area_typ'], [u'inst_task_area_typ.inst_id', u'inst_task_area_typ.task_area_typ']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    cat_name_typ = Column(ForeignKey(u'agenda_cat_typ.cat_name_typ'), primary_key=True, nullable=False)
    inst_cat_desc = Column(Unicode(50))
    inst_task_area_typ = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    agenda_cat_typ = relationship(u'AgendaCatTyp')
    inst = relationship(u'InstTaskAreaTyp')


class InstAgentRstr(Base):
    __tablename__ = 'inst_agent_rstr'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    agt_name = Column(Unicode(50), primary_key=True, nullable=False)
    admn_route_id = Column(Integer, primary_key=True, nullable=False)
    warning_typ = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class InstAgtCat(Base):
    __tablename__ = 'inst_agt_cat'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    agt_cat_id = Column(Integer, primary_key=True, nullable=False)
    agt_cat_desc = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))


class InstAgtCatAgt(Base):
    __tablename__ = 'inst_agt_cat_agt'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'agt_cat_id'], [u'inst_agt_cat.inst_id', u'inst_agt_cat.agt_cat_id']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    agt_cat_id = Column(Integer, primary_key=True, nullable=False)
    upper_agt_name = Column(Unicode(50), primary_key=True, nullable=False)
    agt_name = Column(Unicode(50))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))

    inst = relationship(u'InstAgtCat')


class InstAuthEvent(Base):
    __tablename__ = 'inst_auth_event'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    auth_event_typ = Column(Integer, primary_key=True, nullable=False)
    auth_event_typ_desc = Column(Unicode(100), nullable=False)
    esig_pref_cd = Column(Unicode(5), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    auth_method = Column(Integer)
    ref_table_name = Column(Unicode(128))


class InstBaseTyp(Base):
    __tablename__ = 'inst_base_typ'
    __table_args__ = (
        Index('nc1_inst_base_typ', 'inst_id', 'base_cls_typ'),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    base_typ_id = Column(Integer, primary_key=True, nullable=False)
    base_cls_typ = Column(Integer, nullable=False)
    base_desc = Column(Unicode(100), nullable=False)
    cat_desc = Column(Unicode(50))
    seq_no = Column(Integer)
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    revision_no = Column(Integer, server_default=text("((1))"))


class InstBillCdInfo(Base):
    __tablename__ = 'inst_bill_cd_info'
    __table_args__ = (
        ForeignKeyConstraint(['bill_sys_inst_id', 'bill_sys_id'], [u'bill_system.bill_sys_inst_id', u'bill_system.bill_sys_id']),
    )

    bill_sys_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    bill_sys_id = Column(Unicode(20), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    bill_cd_typ = Column(Integer, primary_key=True, nullable=False)
    bill_cd = Column(Unicode(30), primary_key=True, nullable=False)
    bill_sys_bill_cd_typ = Column(Unicode(10))
    bill_sys_bill_cd = Column(Unicode(30))
    bill_cd_eff_dt = Column(DateTime)
    bill_cd_term_dt = Column(DateTime)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    bill_sys_inst = relationship(u'BillSystem')


class InstBillEventTyp(Base):
    __tablename__ = 'inst_bill_event_typ'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    event_cd_typ_id = Column(Integer, primary_key=True, nullable=False)
    active_entry_ind = Column(Unicode(1), nullable=False)
    batch_group_no = Column(Integer)
    batch_seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class InstBsaFormula(Base):
    __tablename__ = 'inst_bsa_formula'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    bsa_formula_typ = Column(Integer, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    curr_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class InstCareBed(Base):
    __tablename__ = 'inst_care_bed'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'care_unit_id'], [u'inst_care_unit.inst_id', u'inst_care_unit.care_unit_id']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    care_unit_id = Column(Integer, primary_key=True, nullable=False)
    bed_id = Column(Integer, primary_key=True, nullable=False)
    room_desc = Column(Unicode(10), nullable=False)
    bed_desc = Column(Unicode(10), nullable=False)
    medicare_ind = Column(Unicode(1), nullable=False)
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'InstCareUnit')


class RoomBedUse(InstCareBed):
    __tablename__ = 'room_bed_use'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'care_unit_id', 'room_bed_id'], [u'inst_care_bed.inst_id', u'inst_care_bed.care_unit_id', u'inst_care_bed.bed_id']),
        ForeignKeyConstraint(['pt_id', 'pt_adt_id'], [u'pt_adt.pt_id', u'pt_adt.pt_adt_id'])
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    care_unit_id = Column(Integer, primary_key=True, nullable=False)
    room_bed_id = Column(Integer, primary_key=True, nullable=False)
    pt_id = Column(Unicode(20))
    pt_adt_id = Column(Integer)
    bed_use_typ = Column(ForeignKey(u'bed_use_typ.bed_use_typ'), nullable=False)
    use_cmt = Column(Unicode(255))
    bed_hold_days = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    bed_use_typ1 = relationship(u'BedUseTyp')
    pt = relationship(u'PtAdt')


class InstCareUnit(Base):
    __tablename__ = 'inst_care_unit'

    inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True, nullable=False)
    care_unit_id = Column(Integer, primary_key=True, nullable=False)
    care_unit = Column(Unicode(10), nullable=False)
    care_unit_desc = Column(Unicode(100), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    active_entry_ind = Column(Unicode(1))
    printer = Column(Unicode(255))

    inst = relationship(u'Inst')


class InstDept(Base):
    __tablename__ = 'inst_dept'

    inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True, nullable=False)
    dept_id = Column(Integer, primary_key=True, nullable=False)
    dept_name = Column(Unicode(30))
    dept_desc = Column(Unicode(80))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    dept_tel = Column(Unicode(28))
    dept_tel_ext = Column(Unicode(10))
    dept_tel_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))

    dept_tel_fmt = relationship(u'FmtField')
    inst = relationship(u'Inst')


class InstDoseMgmt(Base):
    __tablename__ = 'inst_dose_mgmt'

    inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    value_update_typ = Column(ForeignKey(u'value_typ.value_typ'), nullable=False)
    update_value = Column(Numeric(11, 4))
    update_unit = Column(Integer)
    value_use_typ = Column(Integer)
    use_value = Column(Numeric(11, 4))
    use_unit = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'Inst')
    value_typ = relationship(u'ValueTyp')


class InstEventTyp(Base):
    __tablename__ = 'inst_event_typ'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    event_typ = Column(Unicode(1), primary_key=True, nullable=False)
    inst_event_name = Column(Unicode(40))
    printable_ind = Column(Unicode(1))
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class InstExamSystem(Base):
    __tablename__ = 'inst_exam_system'
    __table_args__ = (
        Index('nc1_inst_exam_system', 'inst_id', 'exam_cd'),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    system_typ_id = Column(ForeignKey(u'exam_system.system_typ_id'), primary_key=True, nullable=False)
    exam_cd = Column(Unicode(1))
    inst_exam_system_desc = Column(Unicode(30))
    seq_no = Column(Integer)
    active_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))

    system_typ = relationship(u'ExamSystem')


class InstFcn(Base):
    __tablename__ = 'inst_fcn'

    inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    fcn_typ = Column(Integer, primary_key=True, nullable=False)
    cur_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))

    inst = relationship(u'Inst')


class InstFsFcnSort(Base):
    __tablename__ = 'inst_fs_fcn_sort'

    fs_fcn_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    inst_fcn_order_no = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    fs_cat_desc = Column(Unicode(20))


class InstHxComp(Base):
    __tablename__ = 'inst_hx_comp'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    hx_comp_id = Column(Integer, primary_key=True, nullable=False)
    hx_comp_desc = Column(Unicode(50), nullable=False)
    seq_no = Column(Integer)
    med_cd = Column(Unicode(1))
    med_hx_ind = Column(Unicode(1))
    fam_hx_ind = Column(Unicode(1))
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))
    procedure_age = Column(Integer)


class InstHxCompCat(Base):
    __tablename__ = 'inst_hx_comp_cat'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    hx_comp_cat_id = Column(Integer, primary_key=True, nullable=False)
    hx_comp_cat_desc = Column(Unicode(40))
    med_cd = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))


class InstHxCompCatComp(Base):
    __tablename__ = 'inst_hx_comp_cat_comp'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'hx_comp_cat_id'], [u'inst_hx_comp_cat.inst_id', u'inst_hx_comp_cat.hx_comp_cat_id']),
        ForeignKeyConstraint(['inst_id', 'hx_comp_id'], [u'inst_hx_comp.inst_id', u'inst_hx_comp.hx_comp_id'])
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    hx_comp_cat_id = Column(Integer, primary_key=True, nullable=False)
    hx_comp_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))

    inst = relationship(u'InstHxCompCat')
    inst1 = relationship(u'InstHxComp')


class InstHydraRoundMthd(Base):
    __tablename__ = 'inst_hydra_round_mthd'

    inst_id = Column(Unicode(30), primary_key=True)
    round_mthd = Column(Integer, nullable=False)
    round_factor = Column(Numeric(11, 4), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class InstLoc(Base):
    __tablename__ = 'inst_loc'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    loc_id = Column(Integer, primary_key=True, nullable=False)
    loc_desc = Column(Unicode(40), nullable=False)
    capacity = Column(Integer)
    event_typ = Column(Unicode(1))
    primary_ind = Column(Unicode(1))
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    slot_size = Column(Integer)
    dept_id = Column(Integer)
    bldg_id = Column(Integer)
    floor_id = Column(Integer)
    room_id = Column(Integer)
    outbnd_sch_ind = Column(Unicode(1))
    loc_open_time = Column(Unicode(4))
    loc_close_time = Column(Unicode(4))
    intf_loc_map_name = Column(Unicode(40))
    loc_cmt = Column(Unicode(255))
    overbook_cd = Column(Unicode(1))
    loc_tel = Column(Unicode(28))
    loc_tel_ext = Column(Unicode(10))
    printable_ind = Column(Unicode(1))
    loc_group_id = Column(Integer)
    loc_tel_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    unavl_cmt = Column(Unicode(200))

    loc_tel_fmt = relationship(u'FmtField')


class InstLocBldg(Base):
    __tablename__ = 'inst_loc_bldg'

    inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True, nullable=False)
    bldg_id = Column(Integer, primary_key=True, nullable=False)
    bldg_name = Column(Unicode(30))
    bldg_desc = Column(Unicode(80))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'Inst')


class InstLocFloor(Base):
    __tablename__ = 'inst_loc_floor'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'bldg_id'], [u'inst_loc_bldg.inst_id', u'inst_loc_bldg.bldg_id']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    bldg_id = Column(Integer, primary_key=True, nullable=False)
    floor_id = Column(Integer, primary_key=True, nullable=False)
    floor_name = Column(Unicode(30))
    floor_desc = Column(Unicode(80))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'InstLocBldg')


class InstLocGroup(Base):
    __tablename__ = 'inst_loc_group'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    loc_group_id = Column(Integer, primary_key=True, nullable=False)
    loc_group_name = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class InstLocRoom(Base):
    __tablename__ = 'inst_loc_room'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'bldg_id', 'floor_id'], [u'inst_loc_floor.inst_id', u'inst_loc_floor.bldg_id', u'inst_loc_floor.floor_id']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    bldg_id = Column(Integer, primary_key=True, nullable=False)
    floor_id = Column(Integer, primary_key=True, nullable=False)
    room_id = Column(Integer, primary_key=True, nullable=False)
    room_name = Column(Unicode(30))
    room_desc = Column(Unicode(80))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'InstLocFloor')


class InstNoteGroup(Base):
    __tablename__ = 'inst_note_group'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    inst_note_group_id = Column(Integer, primary_key=True, nullable=False)
    inst_note_group_name = Column(Unicode(255), nullable=False)
    active_ind = Column(Unicode(1), nullable=False)
    favorite_ind = Column(Unicode(1), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class InstNoteGroupTyp(Base):
    __tablename__ = 'inst_note_group_typ'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    inst_note_group_id = Column(Integer, primary_key=True, nullable=False)
    note_typ = Column(Integer, primary_key=True, nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class InstNoteTyp(Base):
    __tablename__ = 'inst_note_typ'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    note_typ = Column(ForeignKey(u'note_typ.note_typ'), primary_key=True, nullable=False)
    active_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    print_header_ind = Column(Unicode(1))
    print_margin_ind = Column(Unicode(1))
    print_left_margin_val = Column(Numeric(5, 2))
    print_right_margin_val = Column(Numeric(5, 2))
    print_top_margin_val = Column(Numeric(5, 2))
    print_bottom_margin_val = Column(Numeric(5, 2))
    valid_entry_ind = Column(Unicode(1))
    fs_display_ind = Column(Unicode(1))
    favorite_ind = Column(Unicode(1))

    note_typ1 = relationship(u'NoteTyp')


class InstOperation(Base):
    __tablename__ = 'inst_operation'

    inst_id = Column(Unicode(30), primary_key=True)
    inst_name = Column(Unicode(35))
    parent_ind = Column(Unicode(1))
    specialty_cd = Column(Unicode(5))
    tz_gmt_offset_min = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class InstPlcyTyp(Base):
    __tablename__ = 'inst_plcy_typ'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    plcy_typ_id = Column(ForeignKey(u'plcy_typ.plcy_typ_id'), primary_key=True, nullable=False)
    active_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    plcy_group_typ_id = Column(Integer)

    plcy_typ = relationship(u'PlcyTyp')


class InstPo(Base):
    __tablename__ = 'inst_po'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    inst_po_id = Column(Integer, primary_key=True, nullable=False)
    po_typ = Column(Integer)
    po_desc = Column(Unicode(255))
    po_cat = Column(Unicode(40))
    po_seq_no = Column(Integer)
    fav_po_ind = Column(Unicode(1))
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    po_desc_txt = Column(UnicodeText(1073741823))
    inst_po_detail_ind = Column(Unicode(1))


class InstPoDetail(Base):
    __tablename__ = 'inst_po_detail'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'inst_po_id'], [u'inst_po.inst_id', u'inst_po.inst_po_id']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    inst_po_detail_id = Column(Integer, primary_key=True, nullable=False)
    inst_po_id = Column(Integer, primary_key=True, nullable=False)
    po_detail_desc = Column(Unicode(40))
    po_detail_seq_no = Column(Integer)
    fav_po_detail_ind = Column(Unicode(1))
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'InstPo')


class InstPoSheet(Base):
    __tablename__ = 'inst_po_sheet'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'inst_po_id'], [u'inst_po.inst_id', u'inst_po.inst_po_id']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    inst_po_sheet_id = Column(Integer, primary_key=True, nullable=False)
    inst_po_id = Column(Integer, primary_key=True, nullable=False)
    inst_po_sheet_desc = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10))
    trans_log_inst_id = Column(Unicode(30))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_minst_id = Column(Unicode(30))
    trans_log_mtstamp = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'InstPo')


class InstProvider(Base):
    __tablename__ = 'inst_provider'
    __table_args__ = (
        ForeignKeyConstraint(['agt_formulary_group_inst_id', 'agt_formulary_group_id'], [u'agt_formulary_group.inst_id', u'agt_formulary_group.agt_formulary_group_id']),
        Index('nc1_inst_provider', 'user_inst_id', 'userid')
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    user_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    agt_formulary_group_inst_id = Column(Unicode(30))
    agt_formulary_group_id = Column(Integer)
    loc_id = Column(Integer)
    event_typ = Column(Unicode(1))
    unavl_cmt = Column(Unicode(200))

    agt_formulary_group_inst = relationship(u'AgtFormularyGroup')


class InstPtKeyCd(Base):
    __tablename__ = 'inst_pt_key_cd'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    pt_key_cd = Column(ForeignKey(u'pt_key_cd.pt_key_cd'), primary_key=True, nullable=False)
    inst_pt_key_desc = Column(Unicode(40))
    pt_key_unique_ind = Column(Unicode(1), nullable=False)
    pt_key_format = Column(Unicode(25), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    pt_key_dsp_seq = Column(Integer)
    optx_primary_ind = Column(Unicode(1))
    active_ind = Column(Unicode(1))
    req_ind = Column(Unicode(1))
    header_ind = Column(Unicode(1))
    trans_trf_tstamp = Column(DateTime)
    format_mask = Column(Unicode(60))
    visible_ind = Column(Unicode(1))
    unique_hist_ind = Column(Unicode(1))
    sys_gnrt_ind = Column(Unicode(1))
    next_seq = Column(Unicode(15))
    start_val = Column(Unicode(15))
    end_val = Column(Unicode(15))
    increment = Column(Integer)
    prefix_list = Column(Unicode(80))
    cur_prefix = Column(Unicode(10))
    intf_use_ind = Column(Unicode(1))
    intf_id_tag = Column(Unicode(40))
    scan_ind = Column(Unicode(1))
    mr_pt_access_external_ind = Column(Unicode(1))
    vptmgr_ind = Column(Unicode(1))
    vptmgr_id1_ind = Column(Unicode(1))
    vptmgr_id2_ind = Column(Unicode(1))
    display_only_ind = Column(Unicode(1))

    pt_key_cd1 = relationship(u'PtKeyCd')


class InstRouteRstr(Base):
    __tablename__ = 'inst_route_rstr'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    admn_route_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class InstRxReport(Base):
    __tablename__ = 'inst_rx_report'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    rx_report_id = Column(Integer, primary_key=True, nullable=False)
    rx_typ = Column(ForeignKey(u'rx_typ.rx_typ'), nullable=False)
    rx_file_loc = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    rx_typ1 = relationship(u'RxTyp')


class InstSchEventTyp(Base):
    __tablename__ = 'inst_sch_event_typ'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    inst_sch_event_typ = Column(Integer, primary_key=True, nullable=False)
    inst_sch_event_desc = Column(Unicode(40), nullable=False)
    event_typ = Column(ForeignKey(u'event_typ.event_typ'), nullable=False)
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    event_typ1 = relationship(u'EventTyp')


class InstScheme(Base):
    __tablename__ = 'inst_scheme'

    inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    scheme_typ = Column(ForeignKey(u'scheme_typ.scheme_typ'), primary_key=True, nullable=False)
    scheme_author = Column(Integer, nullable=False)
    scheme_eff_date = Column(DateTime, nullable=False)
    cur_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    inst_eff_date = Column(DateTime)

    inst = relationship(u'Inst')
    scheme_typ1 = relationship(u'SchemeTyp')


class InstSeq(Base):
    __tablename__ = 'inst_seq'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    seq_typ = Column(Unicode(20), primary_key=True, nullable=False)
    seq_no = Column(Integer, nullable=False)
    filler_1 = Column(Unicode(255), nullable=False)
    filler_2 = Column(Unicode(255), nullable=False)
    filler_3 = Column(Unicode(255), nullable=False)
    filler_4 = Column(Unicode(255), nullable=False)
    filler_5 = Column(Unicode(255), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class InstShift(Base):
    __tablename__ = 'inst_shift'

    inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True, nullable=False)
    shift_id = Column(Integer, primary_key=True, nullable=False)
    shift_desc = Column(Unicode(30), nullable=False)
    shift_cd = Column(Unicode(2), nullable=False)
    shift_start = Column(Unicode(4), nullable=False)
    shift_end = Column(Unicode(4), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'Inst')


class InstStkhErx(Base):
    __tablename__ = 'inst_stkh_erx'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    stkh_id = Column(Unicode(20), primary_key=True, nullable=False, index=True)
    userid = Column(Unicode(10), nullable=False)
    erx_status_cd = Column(Unicode(1))
    err_cd = Column(Unicode(5))
    err_desc = Column(Unicode(255))
    service_lvl_code = Column(Unicode(15))
    service_lvl = Column(Unicode(5))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class InstTaskAreaTyp(Base):
    __tablename__ = 'inst_task_area_typ'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    task_area_typ = Column(ForeignKey(u'task_area_typ.task_area_typ'), primary_key=True, nullable=False)
    inst_task_area_desc = Column(Unicode(50))
    seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    task_area_typ1 = relationship(u'TaskAreaTyp')


class InstTestComp(Base):
    __tablename__ = 'inst_test_comp'
    __table_args__ = (
        ForeignKeyConstraint(['typ_of_test', 'comp_name'], [u'test_comp.typ_of_test', u'test_comp.comp_name']),
        Index('nc1_inst_test_comp', 'typ_of_test', 'comp_name')
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    inst_comp_name = Column(Unicode(30))
    rqstn_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    inst_comp_order_no = Column(Integer)
    favorite_ind = Column(Unicode(1))
    inst_typ_of_test = Column(Unicode(20))
    fs_active_ind = Column(Unicode(1))
    inst_comp_abbr = Column(Unicode(10))
    threshold_unit = Column(Integer)
    threshold_typ = Column(Integer)
    threshold_value = Column(Numeric(11, 4))

    test_comp = relationship(u'TestComp')


class InstTestCompCalibration(Base):
    __tablename__ = 'inst_test_comp_calibration'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    inst_comp_name = Column(Unicode(30))
    comp_typ = Column(Integer)
    uom = Column(Integer)
    inst_comp_order_no = Column(Integer)
    min_norm = Column(Numeric(16, 4))
    max_norm = Column(Numeric(16, 4))
    status_typ = Column(Integer)
    custom_ind = Column(Unicode(1))
    favorite_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))


class InstTestCompGroup(Base):
    __tablename__ = 'inst_test_comp_group'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    inst_test_comp_group_id = Column(Integer, primary_key=True, nullable=False)
    inst_test_group_name = Column(Unicode(30))
    favorite_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))


class InstTestGroup(Base):
    __tablename__ = 'inst_test_group'
    __table_args__ = (
        ForeignKeyConstraint(['typ_of_test', 'test_group_name'], [u'test_group.typ_of_test', u'test_group.test_group_name']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    test_group_name = Column(Unicode(30), primary_key=True, nullable=False)
    inst_group_name = Column(Unicode(30))
    rqstn_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    test_group = relationship(u'TestGroup')


class InstTpDetail(Base):
    __tablename__ = 'inst_tp_detail'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_detail_typ = Column(Integer, primary_key=True, nullable=False)
    tp_detail_value_id = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class InstTpKeyCd(Base):
    __tablename__ = 'inst_tp_key_cd'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    tp_key_cd = Column(Integer, primary_key=True, nullable=False)
    inst_tp_key_desc = Column(Unicode(40))
    tp_key_unique_ind = Column(Unicode(1), nullable=False)
    tp_key_format = Column(Unicode(20), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    tp_key_dsp_seq = Column(Integer)
    optx_primary_ind = Column(Unicode(1))
    active_ind = Column(Unicode(1))
    req_ind = Column(Unicode(1))
    header_ind = Column(Unicode(1))
    trans_trf_tstamp = Column(DateTime)
    format_mask = Column(Unicode(60))
    visible_ind = Column(Unicode(1))
    unique_hist_ind = Column(Unicode(1))
    sys_gnrt_ind = Column(Unicode(1))
    next_seq = Column(Unicode(15))
    start_val = Column(Unicode(15))
    end_val = Column(Unicode(15))
    increment = Column(Integer)
    prefix_list = Column(Unicode(80))
    cur_prefix = Column(Unicode(10))
    intf_use_ind = Column(Unicode(1))
    intf_id_tag = Column(Unicode(40))


class InstTrComp(Base):
    __tablename__ = 'inst_tr_comp'
    __table_args__ = (
        Index('nc2_inst_tr_comp', 'inst_id', 'cls_scheme_id'),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    inst_tr_comp_id = Column(Integer, primary_key=True, nullable=False)
    gs_author = Column(Integer, nullable=False)
    eff_date = Column(DateTime, nullable=False)
    tr_typ = Column(Unicode(30), nullable=False)
    tr_comp_name = Column(Unicode(30), nullable=False)
    tr_sub_comp_name = Column(Unicode(60))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    cls_scheme_id = Column(Integer, index=True)
    pt_enter_ind = Column(Unicode(1))


class InstTumGrp(Base):
    __tablename__ = 'inst_tum_grp'

    tum_grp_id = Column(Integer, primary_key=True)
    inst_id = Column(Unicode(30), nullable=False)
    tum_grp_desc = Column(Unicode(50), nullable=False)
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class InstTxDecRsn(Base):
    __tablename__ = 'inst_tx_dec_rsn'

    tx_dec_rsn_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    dec_typ = Column(Integer, nullable=False)
    dec_rsn_typ = Column(Integer, nullable=False)
    dec_rsn_desc = Column(Unicode(255), nullable=False)
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    seq_no = Column(Integer)


class InstTyp(Base):
    __tablename__ = 'inst_typ'

    inst_typ = Column(Integer, primary_key=True)
    inst_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class InstTypOfTest(Base):
    __tablename__ = 'inst_typ_of_test'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    inst_typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    seq_no = Column(Integer)
    fs_display_ind = Column(Unicode(1))
    sum_display_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class InstVisitReasonTyp(Base):
    __tablename__ = 'inst_visit_reason_typ'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    visit_reason_id = Column(Integer, primary_key=True, nullable=False)
    visit_reason_typ = Column(Integer, nullable=False)
    visit_reason_desc = Column(Unicode(40), nullable=False)
    active_entry_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    mapping_cd = Column(Unicode(30))


class InstVisitTaskTemplate(Base):
    __tablename__ = 'inst_visit_task_template'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    discipline_typ = Column(Integer, primary_key=True, nullable=False)
    visit_reason_id = Column(Integer, primary_key=True, nullable=False)
    cat_name_typ = Column(Integer, primary_key=True, nullable=False)
    active_entry_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    req_ind = Column(Unicode(1))


class Instr(Base):
    __tablename__ = 'instr'
    __table_args__ = (
        ForeignKeyConstraint(['agt_name', 'dosage_form', 'dose_level'], [u'agt_dosage.agt_name', u'agt_dosage.dosage_form', u'agt_dosage.dose_level']),
    )

    agt_name = Column(Unicode(50), primary_key=True, nullable=False)
    dosage_form = Column(Integer, primary_key=True, nullable=False)
    dose_level = Column(Integer, primary_key=True, nullable=False)
    instr_typ = Column(ForeignKey(u'instr_typ.instr_typ'), primary_key=True, nullable=False)
    instr = Column(UnicodeText(1073741823), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    agt_dosage = relationship(u'AgtDosage')
    instr_typ1 = relationship(u'InstrTyp')


class InstrTyp(Base):
    __tablename__ = 'instr_typ'

    instr_typ = Column(Integer, primary_key=True)
    instr_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IntfAppParm(Base):
    __tablename__ = 'intf_app_parm'

    intf_app_parm_id = Column(Unicode(10), primary_key=True)
    intf_engine_id = Column(Unicode(10))
    intf_comm_id = Column(Unicode(10))
    msg_typ_id = Column(Unicode(10))
    active_ind = Column(Unicode(1), nullable=False)
    direction_ind = Column(Unicode(1), nullable=False)
    app_parm_desc = Column(Unicode(80), nullable=False)
    sending_app = Column(Unicode(30), nullable=False)
    receiving_app = Column(Unicode(30))
    sending_fac = Column(Unicode(30))
    receiving_fac = Column(Unicode(30))
    dflt_inst_id = Column(Unicode(30))
    admn_inst_id = Column(Unicode(30))
    owner_inst_id = Column(Unicode(30))
    msg_field_separator = Column(Unicode(1))
    msg_comp_separator = Column(Unicode(1))
    msg_subcomp_separator = Column(Unicode(1))
    msg_repetition_separator = Column(Unicode(1))
    msg_escape_character = Column(Unicode(1))
    ovride_prcs = Column(Unicode(1), nullable=False)
    prcs_stat_ind = Column(Unicode(1))
    cust_intf_ind = Column(Unicode(1), nullable=False)
    cust_name_id = Column(Unicode(20))
    hl7_batch_ind = Column(Unicode(1))
    hl7_batch_fhs_ind = Column(Unicode(1))
    hl7_batch_bhs_ind = Column(Unicode(1))
    sch_ind = Column(Unicode(1))
    create_trgr_ind = Column(Unicode(1))
    wordcap = Column(Unicode(1))
    userid = Column(Unicode(10), nullable=False)
    update_access_ind = Column(Unicode(1), nullable=False)
    msg_purge_days = Column(Integer)
    out_app_ack = Column(Unicode(2))
    out_accept_ack = Column(Unicode(2))
    visit_days_prior = Column(Integer)
    visit_days_after = Column(Integer)
    gen_open_chart_visit_ind = Column(Unicode(1))
    inst_id_mthd = Column(Unicode(1))
    appr_for_billing_flag = Column(Unicode(1))
    show_merge_cmt_ind = Column(Unicode(1))
    create_pt_cmt_ind = Column(Unicode(1))
    insd_id_no_match_ind = Column(Unicode(1), nullable=False)
    err_in1_ind = Column(Unicode(1))
    sch_prcs_typ = Column(Unicode(1))
    sch_res = Column(Unicode(1))
    imp_compl_ind = Column(Unicode(1))
    gen_format_pon_ind = Column(Unicode(1))
    pon_next_seq = Column(Unicode(15))
    pon_start_val = Column(Unicode(15))
    pon_end_val = Column(Unicode(15))
    pon_increment = Column(Integer)
    pon_prefix_list = Column(Unicode(80))
    pon_cur_prefix = Column(Unicode(10))
    pon_per_test_ind = Column(Unicode(1))
    send_order_days_ind = Column(Unicode(1))
    pt_addl_match_cd = Column(Unicode(1))
    intf_app_parm_id_no_trgr = Column(Unicode(10))
    send_appr_only_ind = Column(Unicode(1))
    send_intf_created_ind = Column(Unicode(1))
    max_line_size = Column(Integer)
    max_outbnd_msg_len = Column(Integer)
    prv_state_abrv_ind = Column(Unicode(1))
    allow_name_change_ind = Column(Unicode(1))
    rad_order_no = Column(Unicode(20))
    mfn_process_cd = Column(Unicode(1))
    send_phys_only_ind = Column(Unicode(1))
    send_email_with_phone_ind = Column(Unicode(1), nullable=False)
    grant_all_inst_access_ind = Column(Unicode(1), nullable=False)
    def_typ = Column(Unicode(1))
    vers_no = Column(Unicode(10))
    msg_typ = Column(Unicode(3))
    msg_typ_name = Column(Unicode(30))
    msg_typ_desc = Column(Unicode(255))
    order_typ = Column(Unicode(3))
    msg_typ_level = Column(Integer)
    stage_msg_ind = Column(Unicode(1))
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    populate_inst_care_bed_ind = Column(Unicode(1))
    visit_typ = Column(Integer)
    linked_intf_app_parm_id = Column(Unicode(10))
    max_pt_records_per_file = Column(Integer)
    max_in1_per_patient = Column(Integer)
    create_bill_visit_event_ind = Column(Unicode(1))
    pt_addl_match_ignore_blank_ind = Column(Unicode(1))
    pt_addl_match_ignore_char = Column(Unicode(30))
    provider_status_send_cd = Column(Integer)
    unfmt_address_ind = Column(Unicode(1))
    varis_ind = Column(Unicode(1))
    patient_select_ind = Column(Unicode(1))
    varis_auto_update_ind = Column(Unicode(1))
    varis_auto_add_ind = Column(Unicode(1))
    varis_in1_match_typ = Column(Unicode(1))
    varis_nk1_match_typ = Column(Unicode(1))
    last_name_compare_char_len = Column(Integer)
    filter_msg_purge_days = Column(Integer)
    suppress_trgr_ind = Column(Unicode(1))
    send_rtf_ind = Column(Unicode(1))
    intf_mode = Column(Integer)
    diagnosis_mode = Column(Unicode(1))
    diagnosis_internal_ind = Column(Unicode(1))
    assign_msgs_ind = Column(Unicode(1))
    transltn_ind = Column(Unicode(1))
    locale_id = Column(Integer)


class IntfAppParmExtended(IntfAppParm):
    __tablename__ = 'intf_app_parm_extended'

    intf_app_parm_id = Column(ForeignKey(u'intf_app_parm.intf_app_parm_id'), primary_key=True)
    file_path = Column(Unicode(80))
    rmot_drv_ind = Column(Unicode(1))
    err_path = Column(Unicode(80))
    err_days = Column(Integer)
    bkup_ind = Column(Unicode(1))
    bkup_path = Column(Unicode(80))
    bkup_days = Column(Integer)
    bkup_ext_name = Column(Unicode(3))
    file_no_gen_ind = Column(Unicode(1))
    file_no_next_seq = Column(Unicode(15))
    file_no_start_val = Column(Unicode(15))
    file_no_end_val = Column(Unicode(15))
    file_no_prefix_list = Column(Unicode(80))
    file_no_cur_prefix = Column(Unicode(10))
    file_no_ext_name = Column(Unicode(3))
    file_no_length = Column(Integer)
    fac_id = Column(Integer)
    fac_inst_id = Column(Unicode(30))
    sni_pid_seg_no = Column(Unicode(2))
    sni_pid_pos_in_seg = Column(Integer)
    sni_pid_len = Column(Integer)
    sni_pid_offset = Column(Integer)
    unsol_prcs_mthd = Column(Unicode(1))
    asc_ind = Column(Unicode(11))
    prime_ind = Column(Unicode(1))
    prime_id = Column(Unicode(60))
    spec_rule = Column(Unicode(1))
    store_uom_desc_ind = Column(Unicode(1))
    dflt_unsol_test_provider_ind = Column(Unicode(1))
    auto_approve_ind = Column(Unicode(1))
    gen_fac_rec_ind = Column(Unicode(1))
    match_extrnl_pon = Column(Unicode(1))
    prcs_with_no_results_ind = Column(Unicode(1))
    acct_provider_ind = Column(Unicode(1))
    bill_prcs_mthd = Column(Unicode(1))
    bill_sys = Column(Unicode(20))
    bill_sys_inst_id = Column(Unicode(30))
    bill_max_detail_lines = Column(Integer)
    bill_last_day_open_ind = Column(Unicode(1))
    bill_capitated_zero_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    rx_disc_new_ind = Column(Unicode(1))
    bill_charge_status_ind = Column(Unicode(1))
    disp_loc_id = Column(Integer)
    lab_analyzer_ind = Column(Unicode(1))
    lab_analyzer_send_comp_ind = Column(Unicode(1))
    max_no_file_prcs = Column(Integer)
    read_only_ind = Column(Unicode(1))
    send_test_dx_ind = Column(Unicode(1))
    auto_approve_abnormals_ind = Column(Unicode(1))
    auto_approve_criticals_ind = Column(Unicode(1))
    gen_result_alerts_ind = Column(Unicode(1))
    dcmnt_file_path = Column(Unicode(80))


class IntfAppParmComp(Base):
    __tablename__ = 'intf_app_parm_comp'
    __table_args__ = (
        ForeignKeyConstraint(['intf_app_parm_id', 'intf_app_parm_field_id'], [u'intf_app_parm_field.intf_app_parm_id', u'intf_app_parm_field.intf_app_parm_field_id']),
        Index('nc2_intf_app_parm_omp', 'intf_app_parm_id', 'field_comp_xref_id')
    )

    intf_app_parm_id = Column(ForeignKey(u'intf_app_parm.intf_app_parm_id'), primary_key=True, nullable=False)
    intf_app_parm_comp_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_app_parm_field_id = Column(Unicode(10), nullable=False, index=True)
    field_comp_xref_id = Column(Unicode(10))
    err_severity = Column(Integer)
    dflt_map_severity = Column(Integer)
    ovride_ind = Column(Unicode(1), nullable=False)
    prepost_ind = Column(Unicode(1), nullable=False)
    prcs_cd = Column(Unicode(1), nullable=False)
    doc_desc = Column(Unicode(255))
    map_active_ind = Column(Unicode(1), nullable=False)
    map_dflt_val = Column(Unicode(60))
    a_ref_id = Column(Unicode(15))
    a_inst_id = Column(Unicode(30))
    b_ref_id = Column(Unicode(15))
    b_inst_id = Column(Unicode(30))
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    def_typ = Column(Unicode(1))
    data_typ = Column(Unicode(3))
    comp_name = Column(Unicode(30))
    comp_no = Column(Integer)
    comp_data_typ = Column(Unicode(3))
    sub_comp_no = Column(Integer)
    sub_comp_name = Column(Unicode(30))
    sub_comp_data_typ = Column(Unicode(3))
    comp_desc = Column(Unicode(255))
    sub_comp_desc = Column(Unicode(255))
    data_format = Column(Unicode(60))
    data_typ_no = Column(Integer)
    case_ind = Column(Unicode(1))
    inbnd_prcs_cd = Column(Unicode(1))
    outbnd_prcs_cd = Column(Unicode(1))
    custom_ind = Column(Unicode(1))
    intf_app_parm_cond_header_id = Column(Unicode(10))

    intf_app_parm = relationship(u'IntfAppParmField')
    intf_app_parm1 = relationship(u'IntfAppParm')


class IntfAppParmCond(Base):
    __tablename__ = 'intf_app_parm_cond'

    intf_app_parm_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_app_parm_cond_header_id = Column(Unicode(10), primary_key=True, nullable=False)
    cond_process_order = Column(Integer, nullable=False)
    global_ind = Column(Unicode(1), nullable=False)
    cond_ind = Column(Unicode(1), nullable=False)
    prcs_ind = Column(Unicode(1), nullable=False)
    pre_cond_ind = Column(Unicode(1))
    filter_ind = Column(Unicode(1), nullable=False)
    doc_desc = Column(Unicode(255))
    base_tstamp = Column(DateTime)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    transltn_ind = Column(Unicode(1))
    seg_occurence = Column(Integer)
    field_occurence = Column(Integer)
    cond_prcs_cd = Column(Unicode(1))


class IntfAppParmCondDetail(Base):
    __tablename__ = 'intf_app_parm_cond_detail'
    __table_args__ = (
        ForeignKeyConstraint(['intf_app_parm_id', 'intf_app_parm_cond_header_id'], [u'intf_app_parm_cond_header.intf_app_parm_id', u'intf_app_parm_cond_header.intf_app_parm_cond_header_id']),
    )

    intf_app_parm_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_app_parm_cond_header_id = Column(Unicode(10), primary_key=True, nullable=False)
    cond_order = Column(Integer, primary_key=True, nullable=False)
    open_bracket = Column(Unicode(4))
    cmpr_val_cd = Column(Unicode(1))
    cmpr_seg_field_xref_id = Column(ForeignKey(u'hl7_seg_field_xref.seg_field_xref_id'))
    cmpr_field_comp_xref_id = Column(ForeignKey(u'hl7_field_comp_xref.field_comp_xref_id'))
    cmpr_mapped_ind = Column(Unicode(1))
    cmpr_operator = Column(Unicode(30), nullable=False)
    cond_val_cd = Column(Unicode(1))
    cond_val = Column(Unicode(255))
    cond_seg_field_xref_id = Column(ForeignKey(u'hl7_seg_field_xref.seg_field_xref_id'))
    cond_field_comp_xref_id = Column(ForeignKey(u'hl7_field_comp_xref.field_comp_xref_id'))
    cond_mapped_ind = Column(Unicode(1))
    logical_operator = Column(Unicode(3))
    close_bracket = Column(Unicode(4))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    base_tstamp = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)

    cmpr_field_comp_xref = relationship(u'Hl7FieldCompXref', primaryjoin='IntfAppParmCondDetail.cmpr_field_comp_xref_id == Hl7FieldCompXref.field_comp_xref_id')
    cmpr_seg_field_xref = relationship(u'Hl7SegFieldXref', primaryjoin='IntfAppParmCondDetail.cmpr_seg_field_xref_id == Hl7SegFieldXref.seg_field_xref_id')
    cond_field_comp_xref = relationship(u'Hl7FieldCompXref', primaryjoin='IntfAppParmCondDetail.cond_field_comp_xref_id == Hl7FieldCompXref.field_comp_xref_id')
    cond_seg_field_xref = relationship(u'Hl7SegFieldXref', primaryjoin='IntfAppParmCondDetail.cond_seg_field_xref_id == Hl7SegFieldXref.seg_field_xref_id')
    intf_app_parm = relationship(u'IntfAppParmCondHeader')


class IntfAppParmCondExpr(Base):
    __tablename__ = 'intf_app_parm_cond_expr'
    __table_args__ = (
        ForeignKeyConstraint(['intf_app_parm_id', 'intf_app_parm_cond_header_id'], [u'intf_app_parm_cond.intf_app_parm_id', u'intf_app_parm_cond.intf_app_parm_cond_header_id']),
    )

    intf_app_parm_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_app_parm_cond_header_id = Column(Unicode(10), primary_key=True, nullable=False)
    expression_typ = Column(Unicode(1), primary_key=True, nullable=False)
    expression = Column(UnicodeText(1073741823))
    base_tstamp = Column(DateTime)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    intf_app_parm = relationship(u'IntfAppParmCond')


class IntfAppParmCondHeader(Base):
    __tablename__ = 'intf_app_parm_cond_header'

    intf_app_parm_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_app_parm_cond_header_id = Column(Unicode(10), primary_key=True, nullable=False)
    hl7_cond_header_id = Column(Unicode(10))
    intf_app_parm_comp_id = Column(Unicode(10), nullable=False)
    global_ind = Column(Unicode(1), nullable=False)
    cond_process_order = Column(Integer, nullable=False)
    true_val_cd = Column(Unicode(1))
    true_val = Column(Unicode(255))
    true_seg_field_xref_id = Column(Unicode(10))
    true_field_comp_xref_id = Column(Unicode(10))
    true_mapped_ind = Column(Unicode(1))
    false_val_cd = Column(Unicode(1))
    false_val = Column(Unicode(255))
    false_seg_field_xref_id = Column(Unicode(10))
    false_field_comp_xref_id = Column(Unicode(10))
    false_mapped_ind = Column(Unicode(1))
    ovride_val_cd = Column(Unicode(1))
    ovride_val = Column(Unicode(255))
    ovride_seg_field_xref_id = Column(Unicode(10))
    ovride_field_comp_xref_id = Column(Unicode(10))
    ovride_mapped_ind = Column(Unicode(1))
    cond_ind = Column(Unicode(1), nullable=False)
    prcs_ind = Column(Unicode(1), nullable=False)
    doc_desc = Column(Unicode(255))
    base_tstamp = Column(DateTime)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    pre_cond_ind = Column(Unicode(1))


class IntfAppParmEvnt(Base):
    __tablename__ = 'intf_app_parm_evnt'

    intf_app_parm_id = Column(ForeignKey(u'intf_app_parm.intf_app_parm_id'), primary_key=True, nullable=False)
    intf_app_parm_evnt_id = Column(Unicode(10), primary_key=True, nullable=False)
    msg_evnt_xref_id = Column(Unicode(10))
    flip_evnt_typ_id = Column(Unicode(10))
    flip_cond_cd = Column(Unicode(1))
    doc_desc = Column(Unicode(255))
    log_invalid_pt_id_prcs_ind = Column(Unicode(1))
    log_missing_pt_id_prcs_ind = Column(Unicode(1))
    prcs_typ = Column(Unicode(1), nullable=False)
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    evnt_typ = Column(Unicode(3))
    evnt_typ_name = Column(Unicode(30))
    evnt_typ_desc = Column(Unicode(255))
    flip_ind = Column(Unicode(1))
    flip_intf_app_parm_evnt_id = Column(Unicode(10))
    custom_ind = Column(Unicode(1))
    ignore_addl_pt_key_match_ind = Column(Unicode(1))
    intf_app_parm_cond_header_id = Column(Unicode(10))

    intf_app_parm = relationship(u'IntfAppParm')


class IntfAppParmField(Base):
    __tablename__ = 'intf_app_parm_field'
    __table_args__ = (
        ForeignKeyConstraint(['intf_app_parm_id', 'intf_app_parm_seg_id'], [u'intf_app_parm_seg.intf_app_parm_id', u'intf_app_parm_seg.intf_app_parm_seg_id']),
        Index('nc2_intf_app_parm_field', 'intf_app_parm_id', 'seg_field_xref_id')
    )

    intf_app_parm_id = Column(ForeignKey(u'intf_app_parm.intf_app_parm_id'), primary_key=True, nullable=False)
    intf_app_parm_field_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_app_parm_seg_id = Column(Unicode(10), nullable=False)
    msg_evnt_seg_field_xref_id = Column(Unicode(10), index=True)
    prcs_cd = Column(Unicode(1), nullable=False)
    intf_stkh_key_map_ind = Column(Unicode(1))
    intf_pt_key_map_ind = Column(Unicode(1))
    hl7_mapped_ind = Column(Unicode(1), nullable=False)
    stkh_map_severity = Column(Integer)
    ovride_ind = Column(Unicode(1), nullable=False)
    doc_desc = Column(Unicode(255))
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    stkh_bitmap_ind = Column(Unicode(1))
    dflt_stkh_id = Column(Unicode(20))
    stkh_add_ind = Column(Unicode(1))
    seg_field_xref_id = Column(Unicode(10))
    field_starting_posn = Column(Integer)
    field_length = Column(Integer)
    field_pos = Column(Integer)
    def_typ = Column(Unicode(1))
    item_no = Column(Unicode(5))
    field_name = Column(Unicode(30))
    field_desc = Column(Unicode(255))
    field_data_typ = Column(Unicode(3))
    map_mthd_cd = Column(Unicode(1))
    stkh_prcs_cd = Column(Unicode(1))
    add_ind = Column(Unicode(1))
    pt_prcs_cd = Column(Unicode(1))
    stkh_cd = Column(Unicode(1))
    prof_reltn_ind = Column(Unicode(1))
    repeatable_ind = Column(Unicode(1))
    field_no = Column(Integer)
    null_ind = Column(Unicode(1))
    outbnd_prcs_cd = Column(Unicode(1))
    inbnd_prcs_cd = Column(Unicode(1))
    custom_ind = Column(Unicode(1))
    seg_field_xref_desc = Column(Unicode(255))
    intf_field_cd_map_send_cd = Column(Unicode(1))
    req_role_typ = Column(Integer)

    intf_app_parm = relationship(u'IntfAppParmSeg')
    intf_app_parm1 = relationship(u'IntfAppParm')


class IntfAppParmFwd(Base):
    __tablename__ = 'intf_app_parm_fwd'

    intf_app_parm_id = Column(ForeignKey(u'intf_app_parm.intf_app_parm_id'), primary_key=True, nullable=False)
    intf_app_parm_fwd_id = Column(ForeignKey(u'intf_app_parm.intf_app_parm_id'), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    intf_app_parm_fwd = relationship(u'IntfAppParm', primaryjoin='IntfAppParmFwd.intf_app_parm_fwd_id == IntfAppParm.intf_app_parm_id')
    intf_app_parm = relationship(u'IntfAppParm', primaryjoin='IntfAppParmFwd.intf_app_parm_id == IntfAppParm.intf_app_parm_id')


class IntfAppParmSeg(Base):
    __tablename__ = 'intf_app_parm_seg'
    __table_args__ = (
        ForeignKeyConstraint(['intf_app_parm_id', 'intf_app_parm_evnt_id'], [u'intf_app_parm_evnt.intf_app_parm_id', u'intf_app_parm_evnt.intf_app_parm_evnt_id']),
    )

    intf_app_parm_id = Column(ForeignKey(u'intf_app_parm.intf_app_parm_id'), primary_key=True, nullable=False)
    intf_app_parm_seg_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_app_parm_evnt_id = Column(Unicode(10), nullable=False)
    msg_evnt_seg_xref_id = Column(Unicode(10))
    prcs_nte_ind = Column(Unicode(1), nullable=False)
    reject_seg_ind = Column(Unicode(1), nullable=False)
    reject_msg_ind = Column(Unicode(1), nullable=False)
    prcs_ind = Column(Unicode(1), nullable=False)
    doc_desc = Column(Unicode(255))
    base_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    auto_gen_ind = Column(Unicode(1))
    write_seg_ind = Column(Unicode(1))
    prcs_mthd_typ = Column(Unicode(1))
    generate_ind = Column(Unicode(1))
    header_ind = Column(Unicode(1))
    def_typ = Column(Unicode(1))
    seg_typ = Column(Unicode(3))
    seg_typ_name = Column(Unicode(30))
    seg_typ_desc = Column(Unicode(255))
    snapshot_ind = Column(Unicode(1))
    grp_ind = Column(Unicode(1))
    req_ind = Column(Unicode(1))
    sort_order_no = Column(Integer)
    nte_assoc_ind = Column(Unicode(1))
    grp_child_ind = Column(Unicode(1))
    repeatable_ind = Column(Unicode(1))
    parent_intf_app_parm_seg_id = Column(Unicode(10))
    seg_typ_id = Column(Unicode(10))
    predefined_ind = Column(Unicode(1))
    intf_app_parm_cond_header_id = Column(Unicode(10))
    inbound_prcs_ind = Column(Unicode(1))

    intf_app_parm = relationship(u'IntfAppParmEvnt')
    intf_app_parm1 = relationship(u'IntfAppParm')


class IntfAppParmTrgr(Base):
    __tablename__ = 'intf_app_parm_trgr'

    intf_app_parm_id = Column(ForeignKey(u'intf_app_parm.intf_app_parm_id'), primary_key=True, nullable=False)
    intf_trgr_seq_no = Column(ForeignKey(u'intf_trgr.intf_trgr_seq_no'), primary_key=True, nullable=False, index=True)
    process_ind = Column(Unicode(1), nullable=False, index=True)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    hl7_out_seq_no = Column(Integer)

    intf_app_parm = relationship(u'IntfAppParm')
    intf_trgr = relationship(u'IntfTrgr')


class IntfAppParmTrnsltn(Base):
    __tablename__ = 'intf_app_parm_trnsltn'

    intf_app_parm_id = Column(ForeignKey(u'intf_app_parm.intf_app_parm_id'), primary_key=True, nullable=False)
    intf_app_parm_transltn_id = Column(Unicode(10), primary_key=True, nullable=False)
    transltn_typ = Column(Unicode(15))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    intf_app_parm = relationship(u'IntfAppParm')


class IntfAppParmTrnsltnXml(IntfAppParmTrnsltn):
    __tablename__ = 'intf_app_parm_trnsltn_xml'
    __table_args__ = (
        ForeignKeyConstraint(['intf_app_parm_id', 'intf_app_parm_evnt_id'], [u'intf_app_parm_evnt.intf_app_parm_id', u'intf_app_parm_evnt.intf_app_parm_evnt_id']),
        ForeignKeyConstraint(['intf_app_parm_id', 'intf_app_parm_transltn_id'], [u'intf_app_parm_trnsltn.intf_app_parm_id', u'intf_app_parm_trnsltn.intf_app_parm_transltn_id'])
    )

    intf_app_parm_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_app_parm_transltn_id = Column(Unicode(10), primary_key=True, nullable=False)
    xml_dfn = Column(UnicodeText(1073741823))
    xml_validator = Column(UnicodeText(1073741823))
    sending_system_xpath = Column(Unicode(1024))
    receiving_system_xpath = Column(Unicode(1024))
    evnt_typ_xpath = Column(Unicode(1024))
    intf_app_parm_evnt_id = Column(Unicode(10))
    xml_defn_typ = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    intf_app_parm = relationship(u'IntfAppParmEvnt')


class IntfAppParmTrnsltnFld(Base):
    __tablename__ = 'intf_app_parm_trnsltn_fld'
    __table_args__ = (
        ForeignKeyConstraint(['intf_app_parm_id', 'intf_app_parm_comp_id'], [u'intf_app_parm_comp.intf_app_parm_id', u'intf_app_parm_comp.intf_app_parm_comp_id']),
        ForeignKeyConstraint(['intf_app_parm_id', 'intf_app_parm_field_id'], [u'intf_app_parm_field.intf_app_parm_id', u'intf_app_parm_field.intf_app_parm_field_id']),
        ForeignKeyConstraint(['intf_app_parm_id', 'intf_app_parm_transltn_id', 'intf_app_parm_transltn_rcrd_id'], [u'intf_app_parm_trnsltn_recrd.intf_app_parm_id', u'intf_app_parm_trnsltn_recrd.intf_app_parm_transltn_id', u'intf_app_parm_trnsltn_recrd.intf_app_parm_transltn_rcrd_id'])
    )

    intf_app_parm_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_app_parm_transltn_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_app_parm_transltn_rcrd_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_app_parm_transltn_fld_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_app_parm_seg_id = Column(Unicode(10), nullable=False)
    process_ind = Column(Unicode(1), nullable=False)
    typ_cd = Column(Unicode(1), nullable=False)
    repeating_ind = Column(Unicode(1), nullable=False)
    intf_app_parm_field_id = Column(Unicode(10), nullable=False)
    field_occurence = Column(Integer)
    intf_app_parm_comp_id = Column(Unicode(10), nullable=False)
    xml_path = Column(Unicode(1024))
    xml_path_occurence = Column(Integer)
    constant_value = Column(Unicode(1024))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    intf_app_parm = relationship(u'IntfAppParmComp')
    intf_app_parm1 = relationship(u'IntfAppParmField')
    intf_app_parm2 = relationship(u'IntfAppParmTrnsltnRecrd')


class IntfAppParmTrnsltnRecrd(Base):
    __tablename__ = 'intf_app_parm_trnsltn_recrd'
    __table_args__ = (
        ForeignKeyConstraint(['intf_app_parm_id', 'intf_app_parm_seg_id'], [u'intf_app_parm_seg.intf_app_parm_id', u'intf_app_parm_seg.intf_app_parm_seg_id']),
        ForeignKeyConstraint(['intf_app_parm_id', 'intf_app_parm_transltn_id'], [u'intf_app_parm_trnsltn.intf_app_parm_id', u'intf_app_parm_trnsltn.intf_app_parm_transltn_id'])
    )

    intf_app_parm_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_app_parm_transltn_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_app_parm_transltn_rcrd_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_app_parm_seg_id = Column(Unicode(10), nullable=False)
    repeating_ind = Column(Unicode(1), nullable=False)
    xml_path = Column(Unicode(1024))
    seg_occurence = Column(Integer)
    intf_app_parm_evnt_id = Column(Unicode(10))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    intf_app_parm = relationship(u'IntfAppParmSeg')
    intf_app_parm1 = relationship(u'IntfAppParmTrnsltn')


class IntfBillingRun(Base):
    __tablename__ = 'intf_billing_run'

    intf_bill_run_seq_id = Column(Unicode(12), primary_key=True)
    bill_run_no = Column(Integer, nullable=False)
    bill_run_date = Column(DateTime)
    sel_start_date = Column(DateTime)
    total_trans = Column(Integer)
    status_ind = Column(Unicode(1))
    override_date = Column(DateTime)
    bill_run_desc = Column(Unicode(255))
    bill_sys_id = Column(Unicode(20))
    bill_sys_inst_id = Column(Unicode(30))
    total_msg = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    trans_posting_date = Column(DateTime)
    varis_bill_run_seq_id = Column(Integer)


class IntfBillingRunInfo(Base):
    __tablename__ = 'intf_billing_run_info'

    intf_app_parm_id = Column(Unicode(10), primary_key=True, nullable=False)
    bill_run_no = Column(Integer, primary_key=True, nullable=False)
    intf_bill_run_seq_id = Column(ForeignKey(u'intf_billing_run.intf_bill_run_seq_id'), nullable=False)
    total_trans = Column(Integer)
    batch_id = Column(Unicode(12))
    bill_run_desc = Column(Unicode(255))
    batch_no = Column(Unicode(20), nullable=False)
    override_batch_no = Column(Unicode(20))
    total_msg = Column(Integer)
    hl7_out_seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    intf_bill_run_seq = relationship(u'IntfBillingRun')


class IntfComm(Base):
    __tablename__ = 'intf_comm'

    intf_comm_id = Column(Unicode(10), primary_key=True)
    comm_name = Column(Unicode(30), nullable=False)
    comm_desc = Column(Unicode(255))
    protocol = Column(Unicode(1), nullable=False)
    msg_len_encode = Column(Unicode(1))
    rmot_port = Column(Unicode(6))
    rmot_address = Column(Unicode(20))
    login_userid = Column(Unicode(20))
    login_pwd = Column(Unicode(20))
    dbms = Column(Unicode(4))
    svr_name = Column(Unicode(30))
    db_name = Column(Unicode(30))
    tcpip_prcs_path = Column(Unicode(80))
    tcpip_bkup_path = Column(Unicode(80))
    tcpip_err_path = Column(Unicode(80))
    tcpip_bkup_days = Column(Integer)
    tcpip_err_days = Column(Integer)
    tcpip_debug_ind = Column(Unicode(1))
    msg_resend_min = Column(Integer)
    direction_ind = Column(Unicode(1), nullable=False)
    imp_compl_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    tcpip_log_path = Column(Unicode(80))
    intf_engine_id = Column(ForeignKey(u'intf_engine.intf_engine_id'))
    seq_no_protocol_ind = Column(Unicode(1))
    seq_no_state_cd = Column(Unicode(1))
    last_rcv_seq_no = Column(Integer)
    seq_no_protocol_seq = Column(Integer)
    resync_link_ind = Column(Unicode(1))
    frozen_link_ind = Column(Unicode(1))
    resend_msg_ind = Column(Unicode(1))
    link_down_ok_ind = Column(Unicode(1))
    email_resend_count = Column(Integer)
    socket_down_resend_min = Column(Integer)
    tcpip_log_days = Column(Integer)
    rmot_ack_port = Column(Unicode(6))
    ack_intf_comm_id = Column(Unicode(10))
    ack_active_ind = Column(Unicode(1))
    purge_intf_engine_id = Column(Unicode(10))
    tcpip_idle_disconnect_timeout = Column(Integer)
    cust_name_id = Column(Unicode(20))
    cust_ind = Column(Unicode(1))
    drop_connection_typ = Column(Unicode(1))
    socket_security_ind = Column(Unicode(1))

    intf_engine = relationship(u'IntfEngine')


class IntfDispLoc(Base):
    __tablename__ = 'intf_disp_loc'

    intf_app_parm_id = Column(Unicode(10), primary_key=True, nullable=False)
    disp_loc_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class IntfEmail(Base):
    __tablename__ = 'intf_email'

    intf_email_id = Column(Integer, primary_key=True)
    email_incident_id = Column(ForeignKey(u'email_incident_typ.email_incident_id'), nullable=False)
    intf_app_parm_id = Column(Unicode(10))
    intf_engine_id = Column(Unicode(10))
    intf_comm_id = Column(Unicode(10))
    sch_seq_no = Column(Integer)
    svrty = Column(Integer)
    intf_app_parm_seg_id = Column(Unicode(10))
    intf_app_parm_evnt_id = Column(Unicode(10))
    intf_email_desc = Column(Unicode(255))
    header_line = Column(Unicode(100))
    subject_line = Column(Unicode(100))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    email_incident = relationship(u'EmailIncidentTyp')


class IntfEmailLog(Base):
    __tablename__ = 'intf_email_log'

    intf_email_log_id = Column(Integer, primary_key=True)
    intf_email_id = Column(Integer, nullable=False)
    hl7_in_out = Column(Unicode(1))
    hl7_seq_no = Column(Integer)
    msg_log_id = Column(Integer)
    process_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class IntfEmailMsg(Base):
    __tablename__ = 'intf_email_msg'

    intf_email_msg_id = Column(Unicode(10), primary_key=True)
    intf_email_id = Column(ForeignKey(u'intf_email.intf_email_id'), nullable=False)
    intf_app_parm_id = Column(Unicode(10), nullable=False)
    seg_typ_id = Column(Unicode(10), nullable=False)
    msg_no = Column(Unicode(10), nullable=False)
    lang_typ = Column(Integer)
    severity = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    intf_email = relationship(u'IntfEmail')


class IntfEmailMsgLog(Base):
    __tablename__ = 'intf_email_msg_log'

    intf_email_msg_log_id = Column(Integer, primary_key=True)
    intf_email_id = Column(Integer, nullable=False)
    intf_email_msg_id = Column(Unicode(10), nullable=False)
    hl7_in_out = Column(Unicode(1))
    hl7_seq_no = Column(Integer)
    msg_log_id = Column(Integer)
    process_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class IntfEngine(Base):
    __tablename__ = 'intf_engine'

    intf_engine_id = Column(Unicode(10), primary_key=True)
    engine_name = Column(Unicode(30), nullable=False)
    prcs_intrvl_secs = Column(Integer, nullable=False)
    stats_hours_tokeep = Column(Integer, nullable=False)
    stats_days_tokeep = Column(Integer, nullable=False)
    stats_months_tokeep = Column(Integer, nullable=False)
    run_wprocess_ind = Column(Unicode(1), nullable=False)
    last_prcs_time = Column(DateTime, nullable=False)
    log_path = Column(Unicode(80))
    msg_log_purge_days = Column(Integer)
    sch_purge_days = Column(Integer)
    run_trgr_evnts_ind = Column(Unicode(1))
    debug_ind = Column(Unicode(1))
    imp_compl_ind = Column(Unicode(1))
    engine_typ = Column(Unicode(1))
    engine_inst_id = Column(Unicode(30))
    mntr_port = Column(Unicode(6))
    pid = Column(Integer)
    enabled_ind = Column(Unicode(1))
    service_monitor_intrvl_min = Column(Integer)
    intf_service_id = Column(Unicode(10))
    start_mthd = Column(Unicode(1))
    log_intrvl = Column(Integer)
    sch_stop_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IntfExclLabMap(Base):
    __tablename__ = 'intf_excl_lab_map'

    intf_app_parm_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_lab_comp_seq_no = Column(Integer, primary_key=True, nullable=False)
    lab_map_cd = Column(Unicode(30), nullable=False)
    eff_date = Column(DateTime)
    termination_date = Column(DateTime)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IntfFieldCdMap(Base):
    __tablename__ = 'intf_field_cd_map'

    intf_field_cd_map_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_app_parm_id = Column(ForeignKey(u'intf_app_parm.intf_app_parm_id'), primary_key=True, nullable=False)
    seg_field_xref_id = Column(Unicode(10), nullable=False)
    sort_order_no = Column(Integer)
    map_typ = Column(Unicode(3), nullable=False)
    key_cd = Column(Unicode(20), nullable=False)
    key_typ = Column(Unicode(20), nullable=False)
    external_typ = Column(Unicode(30))
    external_desc = Column(Unicode(60))
    pref_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    intf_app_parm = relationship(u'IntfAppParm')


class IntfLabAnalyzer(Base):
    __tablename__ = 'intf_lab_analyzer'

    intf_app_parm_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_lab_analyzer_id = Column(Unicode(10), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    fac_id = Column(Integer, nullable=False)
    fac_group_id = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class IntfLabGrp(Base):
    __tablename__ = 'intf_lab_grp'

    order_id = Column(Integer, primary_key=True, nullable=False)
    grp_id = Column(Integer, primary_key=True, nullable=False)
    hl7_pon = Column(Unicode(15))
    hl7_fon = Column(Unicode(15))
    hl7_obs_datetime = Column(DateTime)
    hl7_lab_sys_cd = Column(Unicode(30))
    hl7_lab_sys_desc = Column(Unicode(60))
    test_inst_id = Column(Unicode(30))
    test_fac_id = Column(Integer)
    fac_group_name = Column(Unicode(30))
    fac_comp_name = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    obr_result_status = Column(Unicode(1))
    hl7_spec_typ = Column(Unicode(5))


class IntfLabObsResult(Base):
    __tablename__ = 'intf_lab_obs_result'

    order_id = Column(Integer, primary_key=True, nullable=False)
    grp_id = Column(Integer, primary_key=True, nullable=False)
    obs_id = Column(Integer, primary_key=True, nullable=False)
    hl7_lab_sys_cd = Column(Unicode(30))
    hl7_lab_sys_desc = Column(Unicode(60))
    fac_group_name = Column(Unicode(30))
    fac_comp_name = Column(Unicode(30))
    test_inst_id = Column(Unicode(30))
    test_fac_id = Column(Integer)
    result_typ_flag = Column(Unicode(1))
    hl7_test_val = Column(Unicode(255))
    test_cmt = Column(UnicodeText(1073741823))
    status_cmt = Column(Unicode(1))
    hl7_range = Column(Unicode(20))
    hl7_uom = Column(Unicode(10))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    hl7_result_status = Column(Unicode(2))
    release_ind = Column(Unicode(1))
    comp_name = Column(Unicode(30))
    hl7_result_alt_id = Column(Unicode(30))
    hl7_producer_id = Column(Unicode(60))


class IntfLabOrder(Base):
    __tablename__ = 'intf_lab_order'

    order_id = Column(Integer, primary_key=True)
    intf_app_parm_id = Column(Unicode(10), nullable=False)
    hl7_in_seq_no_orig = Column(Integer)
    hl7_in_seq_no_new = Column(Integer)
    pt_id = Column(Unicode(20))
    hl7_pt_intrnl_key = Column(Unicode(20))
    hl7_pt_extrnl_key = Column(Unicode(16))
    hl7_pt_last_name = Column(Unicode(30))
    hl7_pt_first_name = Column(Unicode(30))
    hl7_msg_cntl_id = Column(Unicode(30))
    hl7_msg_datetime = Column(Unicode(20))
    test_inst_id = Column(Unicode(30))
    test_fac_id = Column(Integer)
    gen_cmt = Column(UnicodeText(1073741823))
    order_cmt = Column(UnicodeText(1073741823))
    status = Column(Unicode(1), nullable=False)
    asc_no = Column(Unicode(15))
    process_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class IntfMap(Base):
    __tablename__ = 'intf_map'

    map_typ = Column(Unicode(6), primary_key=True, nullable=False)
    a_ref_id = Column(Unicode(15), primary_key=True, nullable=False)
    a_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    b_ref_id = Column(Unicode(15), primary_key=True, nullable=False)
    b_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    optx_dflt_val = Column(Unicode(60))
    extrnl_dflt_val = Column(Unicode(60))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))


class IntfMode(Base):
    __tablename__ = 'intf_mode'

    intf_mode = Column(Integer, primary_key=True, nullable=False)
    lang_typ = Column(ForeignKey(u'lang_typ.lang_typ'), primary_key=True, nullable=False)
    intf_mode_desc = Column(Unicode(100))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    lang_typ1 = relationship(u'LangTyp')


class IntfModeApp(Base):
    __tablename__ = 'intf_mode_app'

    intf_mode = Column(Integer, primary_key=True, nullable=False)
    app_cd = Column(Unicode(10), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IntfModeMsgTyp(Base):
    __tablename__ = 'intf_mode_msg_typ'

    intf_mode = Column(Integer, primary_key=True, nullable=False)
    msg_typ = Column(Unicode(3), primary_key=True, nullable=False)
    direction_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IntfMsgLog(Base):
    __tablename__ = 'intf_msg_log'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    msg_log_id = Column(Integer, primary_key=True, nullable=False)
    msg_id = Column(Integer, index=True)
    msg_log_typ = Column(Unicode(3))
    msg_log_txt = Column(Unicode(255))
    msg_no = Column(Unicode(10), index=True)
    msg_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime, index=True)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    msg_sql_txt = Column(UnicodeText(1073741823))
    intf_engine_id = Column(Unicode(10))
    intf_comm_id = Column(Unicode(10))
    severity = Column(Integer)
    msg_sent_ind = Column(Unicode(1))
    trans_trf_tstamp = Column(DateTime)


class IntfNoteTypSel(Base):
    __tablename__ = 'intf_note_typ_sel'

    intf_note_typ_id = Column(Integer, primary_key=True)
    intf_app_parm_id = Column(ForeignKey(u'intf_app_parm.intf_app_parm_id'), nullable=False)
    note_typ = Column(Integer)
    note_txt = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    note_name = Column(Unicode(30))

    intf_app_parm = relationship(u'IntfAppParm')


class IntfOlPrcsStat(Base):
    __tablename__ = 'intf_ol_prcs_stat'

    intf_app_parm_id = Column(Unicode(10), primary_key=True)
    msg_cnt = Column(Integer)
    err_msg_cnt = Column(Integer)
    scss_msg_cnt = Column(Integer)
    wrng_msg_cnt = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    filter_cnt = Column(Integer)
    last_prcs_tstamp = Column(DateTime)
    last_rcv_sent_tstamp = Column(DateTime)


class IntfOlStat(Base):
    __tablename__ = 'intf_ol_stat'

    intf_comm_id = Column(Unicode(10), primary_key=True)
    app_inbnd_msg_cnt = Column(Integer)
    app_inbnd_err_cnt = Column(Integer)
    app_outbnd_msg_cnt = Column(Integer)
    app_outbnd_err_cnt = Column(Integer)
    app_inbnd_cnct = Column(Unicode(1))
    app_outbnd_cnct = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    ack_connected = Column(Unicode(1))


class IntfPtKeyMap(Base):
    __tablename__ = 'intf_pt_key_map'
    __table_args__ = (
        ForeignKeyConstraint(['pt_key_cd_inst_id', 'pt_key_cd'], [u'inst_pt_key_cd.inst_id', u'inst_pt_key_cd.pt_key_cd']),
    )

    intf_app_parm_id = Column(ForeignKey(u'intf_app_parm.intf_app_parm_id'), primary_key=True, nullable=False)
    intf_pt_key_map_id = Column(Unicode(10), primary_key=True, nullable=False)
    seg_field_xref_id = Column(ForeignKey(u'hl7_seg_field_xref.seg_field_xref_id'), nullable=False)
    pt_id_typ_cd = Column(Unicode(30))
    pt_id_typ_desc = Column(Unicode(60))
    pt_key_cd = Column(Integer, nullable=False)
    pt_key_cd_inst_id = Column(Unicode(30), nullable=False)
    pt_id_prcs_flag = Column(Unicode(1), nullable=False)
    pt_id_match_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    allow_update_ind = Column(Unicode(1))
    trim_char = Column(Unicode(1))
    trim_blank_ind = Column(Unicode(1))
    trim_leading_no_char = Column(Integer)
    pad_with_char = Column(Unicode(1))
    pad_char_to_len = Column(Integer)
    display_key_1_ind = Column(Unicode(1))
    display_key_2_ind = Column(Unicode(1))

    intf_app_parm = relationship(u'IntfAppParm')
    pt_key_cd_inst = relationship(u'InstPtKeyCd')
    seg_field_xref = relationship(u'Hl7SegFieldXref')


class IntfPtKeyMapVari(Base):
    __tablename__ = 'intf_pt_key_map_varis'

    intf_app_parm_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_pt_key_map_id = Column(Unicode(10), primary_key=True, nullable=False)
    seg_field_xref_id = Column(Unicode(10), nullable=False)
    pt_key_desc = Column(Unicode(196))
    pt_id_typ_cd = Column(Unicode(30))
    pt_id_prcs_flag = Column(Unicode(1), nullable=False)
    pt_id_match_ind = Column(Unicode(1), nullable=False)
    allow_update_ind = Column(Unicode(1), nullable=False)
    trim_char = Column(Unicode(1))
    trim_blank_ind = Column(Unicode(1))
    trim_leading_no_char = Column(Integer)
    pad_with_char = Column(Unicode(1))
    pad_char_to_len = Column(Integer)
    display_key_1_ind = Column(Unicode(1), nullable=False)
    display_key_2_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    pt_key_cd = Column(Integer)
    pt_key_cd_inst_id = Column(Unicode(30))


class IntfPtSelectConfig(Base):
    __tablename__ = 'intf_pt_select_config'

    intf_pt_select_config_id = Column(Integer, primary_key=True)
    column_label = Column(Unicode(30))
    varis_stored_proc_name = Column(Unicode(30))
    varis_parameter_name = Column(Unicode(30))
    hl7_segment_name = Column(Unicode(30))
    hl7_field_no = Column(Integer)
    hl7_comp_no = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)


class IntfPtSelectDefn(Base):
    __tablename__ = 'intf_pt_select_defn'

    intf_pt_select_defn_id = Column(Integer, primary_key=True)
    intf_pt_select_config_id = Column(Integer)
    column_label = Column(Unicode(30))
    header_label = Column(Unicode(30))
    varis_stored_proc_name = Column(Unicode(30))
    varis_parameter_name = Column(Unicode(30))
    hl7_segment_name = Column(Unicode(30))
    hl7_field_no = Column(Integer)
    hl7_comp_no = Column(Integer)
    editable_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)


class IntfSch(Base):
    __tablename__ = 'intf_sch'

    sch_seq_no = Column(ForeignKey(u'intf_sch_def.sch_seq_no'), primary_key=True, nullable=False)
    run_tstamp = Column(DateTime, primary_key=True, nullable=False, index=True)
    status_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    intf_sch_def = relationship(u'IntfSchDef')


class IntfSchDef(Base):
    __tablename__ = 'intf_sch_def'

    sch_seq_no = Column(Integer, primary_key=True)
    sch_name = Column(Unicode(30), nullable=False)
    active_ind = Column(Unicode(1))
    prcs_task = Column(Unicode(15))
    minute_intrvl = Column(Integer)
    day_intrvl = Column(Integer)
    day_of_month = Column(Integer)
    sch_time = Column(Unicode(5))
    daily_ind = Column(Unicode(1))
    mon_ind = Column(Unicode(1))
    tues_ind = Column(Unicode(1))
    wed_ind = Column(Unicode(1))
    thur_ind = Column(Unicode(1))
    fri_ind = Column(Unicode(1))
    sat_ind = Column(Unicode(1))
    sun_ind = Column(Unicode(1))
    run_asap_ind = Column(Unicode(1), nullable=False)
    intf_engine_id = Column(ForeignKey(u'intf_engine.intf_engine_id'), nullable=False)
    intf_app_parm_id = Column(Unicode(10))
    bill_sys_inst_id = Column(Unicode(30))
    bill_sys_id = Column(Unicode(20))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    pre_custom = Column(Unicode(80))
    post_custom = Column(Unicode(80))
    sch_param = Column(Unicode(255))
    srv_ind = Column(Unicode(1))

    intf_engine = relationship(u'IntfEngine')


class IntfSchMap(Base):
    __tablename__ = 'intf_sch_map'

    intf_sch_map_id = Column(Integer, primary_key=True)
    intf_app_parm_id = Column(Unicode(15), nullable=False)
    mapping_typ_cd = Column(Unicode(1), nullable=False)
    inst_id = Column(Unicode(30))
    department_ser = Column(BigInteger)
    loc_id = Column(Integer)
    machine_resource_ser = Column(BigInteger)
    mapping_cd = Column(Unicode(30), nullable=False)
    event_typ = Column(Unicode(1))
    activity_ser = Column(BigInteger)
    send_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IntfService(Base):
    __tablename__ = 'intf_service'

    intf_service_id = Column(Unicode(10), primary_key=True)
    machine_name = Column(Unicode(255))
    update_at = Column(DateTime)
    update_asap_ind = Column(Unicode(1), nullable=False)
    enabled_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    level_no = Column(Integer)


class IntfSmryStat(Base):
    __tablename__ = 'intf_smry_stats'

    intf_app_parm_id = Column(Unicode(10), primary_key=True, nullable=False)
    msg_cnt = Column(Integer)
    err_msg_cnt = Column(Integer)
    scss_msg_cnt = Column(Integer)
    wrng_msg_cnt = Column(Integer)
    prcs_hour = Column(Integer)
    prcs_day = Column(Integer)
    prcs_month = Column(Integer)
    prcs_year = Column(Integer)
    prcs_stamp = Column(Integer, primary_key=True, nullable=False)
    prime_cnt = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    filter_cnt = Column(Integer)


class IntfStkhKeyMap(Base):
    __tablename__ = 'intf_stkh_key_map'

    intf_app_parm_id = Column(ForeignKey(u'intf_app_parm.intf_app_parm_id'), primary_key=True, nullable=False)
    intf_stkh_key_map_id = Column(Unicode(10), primary_key=True, nullable=False)
    seg_field_xref_id = Column(Unicode(10), nullable=False)
    stkh_id_typ_cd = Column(Unicode(40))
    stkh_id_typ_desc = Column(Unicode(60))
    stkh_key_cd = Column(Integer)
    stkh_key_cd_inst_id = Column(Unicode(30))
    stkh_role_typ = Column(Integer)
    stkh_id_match_cd = Column(Unicode(1), nullable=False)
    stkh_match_ind = Column(Unicode(1), nullable=False)
    add_ind = Column(Unicode(1), nullable=False)
    visit_inst_id = Column(Unicode(30))
    req_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    stkh_cd = Column(Unicode(1))
    prof_reltn_typ = Column(Integer)
    allow_update_ind = Column(Unicode(1))

    intf_app_parm = relationship(u'IntfAppParm')


class IntfStkhKeyMapRole(Base):
    __tablename__ = 'intf_stkh_key_map_role'
    __table_args__ = (
        ForeignKeyConstraint(['intf_app_parm_id', 'intf_stkh_key_map_id'], [u'intf_stkh_key_map.intf_app_parm_id', u'intf_stkh_key_map.intf_stkh_key_map_id']),
    )

    intf_app_parm_id = Column(Unicode(10), primary_key=True, nullable=False)
    intf_stkh_key_map_id = Column(Unicode(10), primary_key=True, nullable=False)
    stkh_role_typ = Column(ForeignKey(u'stkh_role_typ.role_typ'), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    intf_app_parm = relationship(u'IntfStkhKeyMap')
    stkh_role_typ1 = relationship(u'StkhRoleTyp')


class IntfTrgr(Base):
    __tablename__ = 'intf_trgr'

    intf_trgr_seq_no = Column(Integer, primary_key=True)
    inst_id = Column(Unicode(30), nullable=False)
    fac_id = Column(Integer)
    msg_typ = Column(Unicode(3))
    msg_evnt_typ = Column(Unicode(3))
    trgr_status_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    hl7_out_seq_no = Column(Integer)
    order_typ = Column(Unicode(3))
    intf_trgr_parent = Column(Integer)
    trans_trf_tstamp = Column(DateTime)
    intf_app_parm_id_no_trgr = Column(Unicode(10))
    intf_app_parm_id_trgr = Column(Unicode(10))
    key_name_1 = Column(Unicode(60))
    key_value_1 = Column(Unicode(50))
    key_name_2 = Column(Unicode(60))
    key_value_2 = Column(Unicode(50))
    key_name_3 = Column(Unicode(60))
    key_value_3 = Column(Unicode(50))
    key_name_4 = Column(Unicode(60))
    key_value_4 = Column(Unicode(50))
    key_name_5 = Column(Unicode(60))
    key_value_5 = Column(Unicode(50))
    key_name_6 = Column(Unicode(60))
    key_value_6 = Column(Unicode(50))
    key_name_7 = Column(Unicode(60))
    key_value_7 = Column(Unicode(50))
    key_name_8 = Column(Unicode(60))
    key_value_8 = Column(Unicode(50))
    key_name_9 = Column(Unicode(60))
    key_value_9 = Column(Unicode(50))
    key_name_10 = Column(Unicode(60))
    key_value_10 = Column(Unicode(50))
    app_cd = Column(Unicode(10))


class IntfTrgrKey(Base):
    __tablename__ = 'intf_trgr_keys'

    intf_trgr_seq_no = Column(ForeignKey(u'intf_trgr.intf_trgr_seq_no'), primary_key=True, nullable=False)
    trgr_key_name = Column(Unicode(60), primary_key=True, nullable=False)
    trgr_key_val = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    intf_trgr = relationship(u'IntfTrgr')


class IntvCatDflt(Base):
    __tablename__ = 'intv_cat_dflt'

    pln_typ = Column(Integer, primary_key=True, nullable=False)
    intv_cat_id = Column(Integer, primary_key=True, nullable=False)
    event_typ = Column(Unicode(1), nullable=False)
    intv_cat_desc = Column(Unicode(40), nullable=False)
    intv_cat_seq = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IntvEventStatu(Base):
    __tablename__ = 'intv_event_status'

    intv_event_status = Column(Integer, primary_key=True)
    intv_event_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IntvLibrary(Base):
    __tablename__ = 'intv_library'

    event_typ = Column(ForeignKey(u'event_typ.event_typ'), primary_key=True, nullable=False)
    intv_name = Column(Unicode(100), primary_key=True, nullable=False)
    notification_req = Column(Unicode(1), nullable=False)
    notification_days = Column(Integer)
    rqstn_req = Column(Unicode(1), nullable=False)
    prof_typ = Column(Integer)
    actual_time_req = Column(Unicode(1), nullable=False)
    intv_detail_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    discipline_typ = Column(Integer)
    trans_trf_tstamp = Column(DateTime)

    event_typ1 = relationship(u'EventTyp')


class IntvLibraryBill(Base):
    __tablename__ = 'intv_library_bill'
    __table_args__ = (
        ForeignKeyConstraint(['event_typ', 'intv_name'], [u'intv_library.event_typ', u'intv_library.intv_name']),
    )

    event_typ = Column(Unicode(1), primary_key=True, nullable=False)
    intv_name = Column(Unicode(100), primary_key=True, nullable=False)
    bill_cd = Column(Unicode(30), primary_key=True, nullable=False)
    bill_cd_typ_id = Column(Integer, primary_key=True, nullable=False)
    bill_instance_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    intv_library = relationship(u'IntvLibrary')


class IntvUseTyp(Base):
    __tablename__ = 'intv_use_typ'

    intv_use_typ = Column(Integer, primary_key=True)
    intv_use_typ_desc = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class IsoLangXref(Base):
    __tablename__ = 'iso_lang_xref'

    lang_2_cd = Column(Unicode(2), primary_key=True, nullable=False)
    lang_3_cd = Column(Unicode(3), primary_key=True, nullable=False)
    lang_desc = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IvCat(Base):
    __tablename__ = 'iv_cat'

    iv_cat_id = Column(Integer, primary_key=True)
    iv_cat_desc = Column(Unicode(100), nullable=False)
    iv_cat_dsp_desc = Column(Unicode(100), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IvCatHdr(Base):
    __tablename__ = 'iv_cat_hdr'

    iv_cat_hdr_id = Column(Integer, primary_key=True)
    iv_cat_hdr_desc = Column(Unicode(100), nullable=False)
    iv_cat_hdr_dsp_desc = Column(Unicode(100), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IvCatResp(Base):
    __tablename__ = 'iv_cat_resp'

    iv_cat_resp_id = Column(Integer, primary_key=True)
    iv_cat_resp_desc = Column(Unicode(100), nullable=False)
    iv_cat_resp_dsp_desc = Column(Unicode(100), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IvFluid(Base):
    __tablename__ = 'iv_fluid'

    iv_fluid_name = Column(Unicode(60), nullable=False)
    iv_fluid_cd = Column(Unicode(10), nullable=False)
    gnrc_iv_fluid_name = Column(Unicode(60), primary_key=True)
    display_seq = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IvQstr(Base):
    __tablename__ = 'iv_qstr'

    iv_qstr_id = Column(Integer, primary_key=True)
    iv_qstr_name = Column(Unicode(40), nullable=False)
    iv_qstr_prelim_txt = Column(Unicode(255))
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IvQstrCat(Base):
    __tablename__ = 'iv_qstr_cat'

    iv_qstr_id = Column(ForeignKey(u'iv_qstr.iv_qstr_id'), primary_key=True, nullable=False)
    iv_qstr_cat_id = Column(Integer, primary_key=True, nullable=False)
    iv_cat_hdr_id = Column(Integer)
    iv_cat_id = Column(Integer)
    iv_resp_typ_id = Column(ForeignKey(u'iv_resp_typ.iv_resp_typ'))
    iv_cat_seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    iv_qstr = relationship(u'IvQstr')
    iv_resp_typ = relationship(u'IvRespTyp')


class IvQstrBmp(IvQstrCat):
    __tablename__ = 'iv_qstr_bmp'
    __table_args__ = (
        ForeignKeyConstraint(['iv_qstr_id', 'iv_qstr_cat_id'], [u'iv_qstr_cat.iv_qstr_id', u'iv_qstr_cat.iv_qstr_cat_id']),
    )

    iv_qstr_id = Column(Integer, primary_key=True, nullable=False)
    iv_qstr_cat_id = Column(Integer, primary_key=True, nullable=False)
    bmp_name = Column(Unicode(50), nullable=False)
    bmp_height = Column(Numeric(11, 4), nullable=False)
    bmp_width = Column(Numeric(11, 4), nullable=False)
    bmp_margin = Column(Numeric(11, 4), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class IvQstrResp(Base):
    __tablename__ = 'iv_qstr_resp'
    __table_args__ = (
        ForeignKeyConstraint(['iv_qstr_id', 'iv_qstr_cat_id'], [u'iv_qstr_cat.iv_qstr_id', u'iv_qstr_cat.iv_qstr_cat_id']),
    )

    iv_qstr_id = Column(Integer, primary_key=True, nullable=False)
    iv_qstr_cat_id = Column(Integer, primary_key=True, nullable=False)
    iv_cat_resp_id = Column(ForeignKey(u'iv_cat_resp.iv_cat_resp_id'), primary_key=True, nullable=False)
    iv_resp_seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    iv_cat_resp = relationship(u'IvCatResp')
    iv_qstr = relationship(u'IvQstrCat')


class IvRespTyp(Base):
    __tablename__ = 'iv_resp_typ'

    iv_resp_typ = Column(Integer, primary_key=True)
    iv_resp_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class LangTyp(Base):
    __tablename__ = 'lang_typ'

    lang_typ = Column(Integer, primary_key=True)
    lang_desc = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    web_active_ind = Column(Unicode(1))
    optx_active_ind = Column(Unicode(1))


class LanguageCd(Base):
    __tablename__ = 'language_cd'

    language_cd = Column(Unicode(3), primary_key=True)
    language_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class LateralityTyp(Base):
    __tablename__ = 'laterality_typ'

    laterality_typ = Column(Integer, primary_key=True)
    laterality_desc = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class LblForm(Base):
    __tablename__ = 'lbl_form'

    lbl_form_id = Column(Unicode(20), primary_key=True)
    lbl_form_desc = Column(Unicode(60), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    optx_lbl_tbl_id = Column(Unicode(30))


class LblFormColDet(Base):
    __tablename__ = 'lbl_form_col_det'

    optx_lbl_tbl_id = Column(Unicode(30), primary_key=True, nullable=False)
    column_name = Column(Unicode(40), primary_key=True, nullable=False)
    column_desc = Column(Unicode(50), nullable=False)
    column_typ = Column(Unicode(20), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class LblFormColFormat(Base):
    __tablename__ = 'lbl_form_col_format'

    column_typ = Column(Unicode(20), primary_key=True, nullable=False)
    column_format = Column(Unicode(40), primary_key=True, nullable=False)
    column_format_str = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class LblFormDet(Base):
    __tablename__ = 'lbl_form_det'

    lbl_form_id = Column(ForeignKey(u'lbl_form.lbl_form_id'), primary_key=True, nullable=False)
    seq_no = Column(Integer, primary_key=True, nullable=False)
    line_no = Column(Integer, nullable=False)
    line_point_size = Column(Unicode(2), nullable=False)
    font_typ = Column(Unicode(40))
    barcode_line_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    multi_line_ind = Column(Unicode(1))
    line_remove_ind = Column(Unicode(1))
    align_no = Column(Integer)

    lbl_form = relationship(u'LblForm')


class LblFormDetComp(Base):
    __tablename__ = 'lbl_form_det_comp'
    __table_args__ = (
        ForeignKeyConstraint(['lbl_form_id', 'seq_no'], [u'lbl_form_det.lbl_form_id', u'lbl_form_det.seq_no']),
    )

    lbl_form_id = Column(Unicode(20), primary_key=True, nullable=False)
    seq_no = Column(Integer, primary_key=True, nullable=False)
    comp_seq_no = Column(Integer, primary_key=True, nullable=False)
    sort_order = Column(Integer, nullable=False)
    data_typ = Column(Unicode(2), nullable=False)
    text_data = Column(Unicode(30))
    column_name = Column(Unicode(40))
    column_typ = Column(Unicode(20))
    column_format = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    lbl_form = relationship(u'LblFormDet')


class LblFormInst(Base):
    __tablename__ = 'lbl_form_inst'
    __table_args__ = (
        ForeignKeyConstraint(['fac_inst_id', 'fac_id'], [u'fac.inst_id', u'fac.fac_id']),
    )

    lbl_form_inst_seq = Column(Integer, primary_key=True)
    lbl_form_id = Column(ForeignKey(u'lbl_form.lbl_form_id'), nullable=False)
    inst_id = Column(ForeignKey(u'inst.inst_id'))
    fac_inst_id = Column(Unicode(30))
    fac_id = Column(Integer)
    optx_lbl_id = Column(ForeignKey(u'lbl_form_optx.optx_lbl_id'), nullable=False)
    print_orient = Column(Unicode(1), nullable=False)
    lbl_copies = Column(Integer, nullable=False)
    barcode_typ = Column(Unicode(20))
    barcode_font = Column(Unicode(40))
    lbl_width = Column(Numeric(5, 2), nullable=False)
    lbl_height = Column(Numeric(5, 2), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    lbl_pic_ind = Column(Unicode(1))
    lbl_pic_file = Column(Unicode(255))
    lbl_multi_lbl = Column(Unicode(1))
    lbl_pic_height = Column(Numeric(5, 2))
    lbl_pic_width_ind = Column(Unicode(1))
    num_copies_ind = Column(Unicode(1))

    fac_inst = relationship(u'Fac')
    inst = relationship(u'Inst')
    lbl_form = relationship(u'LblForm')
    optx_lbl = relationship(u'LblFormOptx')


class LblFormOptx(Base):
    __tablename__ = 'lbl_form_optx'

    optx_lbl_id = Column(Unicode(20), primary_key=True)
    optx_lbl_desc = Column(Unicode(60), nullable=False)
    inst_ind = Column(Unicode(1), nullable=False)
    fac_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class LblFormTbl(Base):
    __tablename__ = 'lbl_form_tbl'

    optx_lbl_id = Column(ForeignKey(u'lbl_form_optx.optx_lbl_id'), primary_key=True, nullable=False)
    optx_lbl_tbl_id = Column(Unicode(30), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    optx_lbl = relationship(u'LblFormOptx')


class LinkedEvent(Base):
    __tablename__ = 'linked_event'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no', 'phase_seq_no', 'cycle_day', 'event_seq_no'], [u'cycle_event.tp_name', u'cycle_event.tp_vers_no', u'cycle_event.phase_seq_no', u'cycle_event.cycle_day', u'cycle_event.event_seq_no']),
        ForeignKeyConstraint(['tp_name2', 'tp_vers_no2', 'phase_seq_no2', 'cycle_day2', 'event_seq_no2'], [u'cycle_event.tp_name', u'cycle_event.tp_vers_no', u'cycle_event.phase_seq_no', u'cycle_event.cycle_day', u'cycle_event.event_seq_no'])
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    phase_seq_no = Column(Integer, primary_key=True, nullable=False)
    cycle_day = Column(Integer, primary_key=True, nullable=False)
    event_seq_no = Column(Integer, primary_key=True, nullable=False)
    tp_name2 = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no2 = Column(Unicode(10), primary_key=True, nullable=False)
    phase_seq_no2 = Column(Integer, primary_key=True, nullable=False)
    cycle_day2 = Column(Integer, nullable=False)
    event_seq_no2 = Column(Integer, nullable=False)
    linked_event_typ = Column(Unicode(1), nullable=False)
    interval_time = Column(Integer)
    interval_units = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    cycle_event = relationship(u'CycleEvent', primaryjoin='LinkedEvent.tp_name == CycleEvent.tp_name')
    cycle_event1 = relationship(u'CycleEvent', primaryjoin='LinkedEvent.tp_name2 == CycleEvent.tp_name')


class LocUnavl(Base):
    __tablename__ = 'loc_unavl'
    __table_args__ = (
        Index('nc3_loc_unavl', 'unavl_hdr_inst_id', 'unavl_hdr_id'),
        Index('nc4_loc_unavl', 'unavl_date', 'pt_id', 'inst_id'),
        Index('nc1_loc_unavl', 'inst_id', 'loc_id', 'unavl_date'),
        Index('nc2_loc_unavl', 'pt_id', 'pt_visit_id', 'inst_id', 'loc_id')
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    loc_id = Column(Integer, primary_key=True, nullable=False)
    loc_unavl_id = Column(Integer, primary_key=True, nullable=False)
    unavl_from = Column(DateTime, nullable=False)
    unavl_to = Column(DateTime, nullable=False)
    unavl_date = Column(DateTime, nullable=False)
    pt_id = Column(Unicode(20))
    pt_visit_id = Column(Integer)
    unavl_cmt = Column(Unicode(200))
    event_typ = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    valid_entry_ind = Column(Unicode(1))
    unavl_hdr_inst_id = Column(Unicode(30))
    unavl_hdr_id = Column(Integer)
    partial_usage_qty = Column(Integer)
    unavl_template_id = Column(Integer)


class Loinc(Base):
    __tablename__ = 'loinc'

    loinc_cd = Column(Unicode(10), primary_key=True)
    component = Column(Unicode(255), nullable=False)
    property = Column(Unicode(30))
    time_aspct = Column(Unicode(15))
    system = Column(Unicode(100))
    scale_typ = Column(Unicode(30))
    method_typ = Column(Unicode(50))
    relat_nms = Column(Unicode(255))
    _class = Column('class', Unicode(30))
    chng_typ = Column(Unicode(10))
    status = Column(Unicode(15))
    map_to = Column(Unicode(10))
    submitted_units = Column(Unicode(30))
    relatednames2 = Column(Unicode(255))
    shortname = Column(Unicode(40))
    long_common_name = Column(Unicode(255))
    hl7_v3_datatype = Column(Unicode(10))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class LookupCdCulture(Base):
    __tablename__ = 'lookup_cd_culture'

    table_name = Column(Unicode(30), primary_key=True, nullable=False)
    lookup_cd = Column(Unicode(10), primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    lookup_desc = Column(Unicode(255))
    lookup_desc_en = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    seq_no = Column(Integer)


class LookupTypCulture(Base):
    __tablename__ = 'lookup_typ_culture'

    table_name = Column(Unicode(30), primary_key=True, nullable=False)
    lookup_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    lookup_desc = Column(Unicode(255), nullable=False)
    lookup_desc_en = Column(Unicode(255), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    seq_no = Column(Integer)


class Ltr(Base):
    __tablename__ = 'ltr'

    ltr_id = Column(Integer, primary_key=True)
    ltr_file = Column(Unicode(255))
    ltr_location = Column(Unicode(255))
    resp_req_ind = Column(Unicode(1))
    print_ind = Column(Unicode(1))
    email_ind = Column(Unicode(1))
    fax_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class LtrRcpt(Base):
    __tablename__ = 'ltr_rcpt'

    ltr_id = Column(Integer, primary_key=True, nullable=False)
    ltr_rcpt_stkh_id = Column(Unicode(20), primary_key=True, nullable=False)
    cc_ind = Column(Unicode(1))
    print_ind = Column(Unicode(1))
    email_ind = Column(Unicode(1))
    fax_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    sent_date = Column(DateTime)


class LtrResp(Base):
    __tablename__ = 'ltr_resp'

    ltr_id = Column(Integer, primary_key=True)
    warn_date = Column(DateTime)
    final_date = Column(DateTime)
    resp_rcvd_ind = Column(Unicode(1))
    warn_ltr_id = Column(Integer)
    final_ltr_id = Column(Integer)
    dcmnt_id = Column(Integer)
    submit_cmtee_issue_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    resp_desc = Column(UnicodeText(1073741823))


class LtrTemplate(Base):
    __tablename__ = 'ltr_template'

    ltr_template_id = Column(Integer, primary_key=True)
    ltr_vers_no = Column(Unicode(10))
    ltr_name = Column(Unicode(60))
    ltr_typ = Column(Integer)
    template_file = Column(Unicode(255))
    template_location = Column(Unicode(255))
    cur_entry_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class MaritalStatu(Base):
    __tablename__ = 'marital_status'

    status_cd = Column(Unicode(1), primary_key=True)
    status_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class MaxCumDose(Base):
    __tablename__ = 'max_cum_dose'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    agt_name = Column(Unicode(50), primary_key=True, nullable=False)
    max_cum_dose = Column(Numeric(11, 4))
    uom = Column(Integer)
    max_bsa = Column(Integer)
    min_dose = Column(Numeric(11, 4))
    max_daily_dose = Column(Numeric(11, 4))
    max_bolus = Column(Numeric(11, 4))
    min_therapeutic = Column(Numeric(11, 4))
    dose_limiting_flag = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    active_entry_ind = Column(Unicode(1))


class MaxSyringeVol(Base):
    __tablename__ = 'max_syringe_vol'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    admn_route = Column(ForeignKey(u'admn_route.admn_route'), primary_key=True, nullable=False)
    syringe_vol = Column(Numeric(11, 4))
    syringe_vol_uom = Column(ForeignKey(u'unit_of_meas.uom'))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    admn_route1 = relationship(u'AdmnRoute')
    unit_of_mea = relationship(u'UnitOfMea')


class MedDict(Base):
    __tablename__ = 'med_dict'

    field_id = Column(Unicode(4), primary_key=True)
    field_desc = Column(Unicode(35), nullable=False)
    field_type = Column(Unicode(1))
    field_length = Column(Unicode(3))
    imp_dec_flag = Column(Unicode(1))
    dec_places = Column(Unicode(2))
    field_val_flag = Column(Unicode(1))
    field_abr_flag = Column(Unicode(1))
    reserve = Column(Unicode(7))
    activity_cd = Column(Unicode(1))
    last_chg_date = Column(Unicode(8))
    del_flag = Column(Unicode(1))
    optx_chg_date = Column(DateTime)


class MedName(Base):
    __tablename__ = 'med_name'

    drug_desc_id = Column(Unicode(6), primary_key=True)
    drug_name = Column(Unicode(30), index=True)
    route = Column(Unicode(2))
    form = Column(Unicode(4))
    strength = Column(Unicode(15))
    unit_of_meas = Column(Unicode(10))
    bioeq_code = Column(Unicode(1))
    ctrl_sbst_code = Column(Unicode(1))
    efficacy_code = Column(Unicode(1))
    legend_ind_code = Column(Unicode(1))
    gnrc_code = Column(Unicode(1))
    brand_name_code = Column(Unicode(1))
    name_src_code = Column(Unicode(1))
    gpi = Column(Unicode(14), index=True)
    kdc = Column(Unicode(10))
    new_ddi = Column(Unicode(6))
    screenable_flag = Column(Unicode(1))
    kdc_flag = Column(Unicode(1))
    reserve = Column(Unicode(13))
    activity_cd = Column(Unicode(1))
    last_chg_dt = Column(Unicode(8))
    upper_drug_name = Column(Unicode(30), index=True)
    del_flag = Column(Unicode(1))
    optx_chg_date = Column(DateTime)
    old_ddi = Column(Unicode(8))


class MedNdc(Base):
    __tablename__ = 'med_ndc'

    ndc_upc_hri_cd = Column(Unicode(11), primary_key=True)
    drug_desc_id = Column(Unicode(6), index=True)
    tee_cd = Column(Unicode(2))
    dea_class_cd = Column(Unicode(1))
    desi_cd = Column(Unicode(1))
    rx_otc_cd = Column(Unicode(1))
    gppc = Column(Unicode(8))
    old_key_cd = Column(Unicode(11))
    new_key_cd = Column(Unicode(11))
    repackage_cd = Column(Unicode(1))
    id_no_type_cd = Column(Unicode(1))
    thrd_party_rstr_cd = Column(Unicode(1))
    kdc = Column(Unicode(10))
    kdc_flag = Column(Unicode(1))
    labeler_cd = Column(Unicode(5))
    multi_srce_cd = Column(Unicode(1))
    name_type_cd = Column(Unicode(1))
    reserve = Column(Unicode(46))
    activity_cd = Column(Unicode(1))
    last_chg_dt = Column(Unicode(8))
    del_flag = Column(Unicode(1))
    optx_chg_date = Column(DateTime)
    item_status_flag = Column(Unicode(1))
    innerpack_cd = Column(Unicode(1))
    clinic_pack_cd = Column(Unicode(1))
    reimburse_ind = Column(Unicode(1))
    price_spread_cd = Column(Unicode(1))


class MedPname(Base):
    __tablename__ = 'med_pname'

    par_id = Column(Integer, primary_key=True)
    par_name = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class MedRxnorm(Base):
    __tablename__ = 'med_rxnorm'

    med_rxnorm_id = Column(Integer, primary_key=True)
    drug_desc_id = Column(Unicode(20), nullable=False)
    rxnorm_id = Column(Unicode(30), nullable=False)
    match_typ = Column(Unicode(2), nullable=False)
    umls_concept_id = Column(Unicode(12), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class MedTcGpi(Base):
    __tablename__ = 'med_tc_gpi'

    tcgpi_key = Column(Unicode(14), primary_key=True, nullable=False, index=True)
    rec_type = Column(Unicode(1), primary_key=True, nullable=False, index=True)
    tcgpi_name = Column(Unicode(60))
    reserve = Column(Unicode(12))
    activity_cd = Column(Unicode(1))
    last_chg_date = Column(Unicode(8))
    del_flag = Column(Unicode(1))
    optx_chg_date = Column(DateTime)
    cls_desc = Column(Unicode(40))


class MedVal(Base):
    __tablename__ = 'med_val'

    med_val_id = Column(Integer, primary_key=True)
    field_id = Column(Unicode(4), nullable=False)
    field_value = Column(Unicode(15))
    value_desc = Column(Unicode(40), nullable=False)
    value_abrev = Column(Unicode(15))
    reserve = Column(Unicode(13))
    activity_cd = Column(Unicode(1))
    last_chg_dt = Column(Unicode(8))
    del_flag = Column(Unicode(1))
    optx_chg_date = Column(DateTime)
    language_cd = Column(Unicode(2))


class MergeCat(Base):
    __tablename__ = 'merge_cat'

    merge_cat = Column(Integer, primary_key=True)
    merge_cat_desc = Column(Unicode(100), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class MnfstnCd(Base):
    __tablename__ = 'mnfstn_cd'

    mnfstn_cd = Column(Unicode(1), primary_key=True)
    mnfstn_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class MobileTelProv(Base):
    __tablename__ = 'mobile_tel_prov'

    mobile_tel_prov_id = Column(Integer, primary_key=True)
    mobile_tel_prov_name = Column(Unicode(50), nullable=False)
    sms_domain = Column(Unicode(50), nullable=False)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class MrPtAcces(Base):
    __tablename__ = 'mr_pt_access'

    userid = Column(Unicode(10), primary_key=True, nullable=False)
    user_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_access_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class MrPtAccessExternal(Base):
    __tablename__ = 'mr_pt_access_external'

    userid = Column(Unicode(10), primary_key=True, nullable=False)
    user_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    pt_key_value = Column(Unicode(25), primary_key=True, nullable=False)
    pt_last_name = Column(Unicode(30))
    pt_access_tstamp = Column(DateTime)


class MrTestResult(Base):
    __tablename__ = 'mr_test_result'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    result_use_typ = Column(ForeignKey(u'result_use_typ.result_use_typ'), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer)
    test_id = Column(Integer)
    test_result_group_id = Column(Integer)
    test_result_id = Column(Integer)
    mr_tstamp = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    threshold_ind = Column(Unicode(1))

    result_use_typ1 = relationship(u'ResultUseTyp')


class MrTrAsmt(Base):
    __tablename__ = 'mr_tr_asmt'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    tr_typ = Column(Unicode(30), primary_key=True, nullable=False)
    tr_comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    result_use_typ = Column(ForeignKey(u'result_use_typ.result_use_typ'), primary_key=True, nullable=False)
    pt_tr_asmt_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer)
    mr_tstamp = Column(DateTime)
    tr_sub_comp_name = Column(Unicode(60))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    result_use_typ1 = relationship(u'ResultUseTyp')


class MsgLog(Base):
    __tablename__ = 'msg_log'

    msg_id = Column(Integer, primary_key=True)
    msg_desc = Column(Unicode(255))
    msg_criteria = Column(Unicode(255))
    rem_id = Column(Unicode(30))
    reminder_id = Column(Integer)
    authorized_stkh_id = Column(Unicode(20))
    authorized_dt = Column(DateTime)
    completed_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class MsgSendLog(Base):
    __tablename__ = 'msg_send_log'

    msg_id = Column(Integer, primary_key=True, nullable=False)
    msg_mthd_typ = Column(Integer, primary_key=True, nullable=False)
    process_dt = Column(DateTime)
    num_pts = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class NameCd(Base):
    __tablename__ = 'name_cd'

    name_cd = Column(Unicode(1), primary_key=True, nullable=False)
    stkh_cd = Column(Unicode(1), primary_key=True, nullable=False)
    name_cd_desc = Column(Unicode(40), nullable=False)
    dflt_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class NextOfKin(Base):
    __tablename__ = 'next_of_kin'

    nok_reltn = Column(Integer, primary_key=True)
    reltn_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    fam_mbr_ind = Column(Unicode(1))
    reltn_pos = Column(Integer)


class NonBusinessDay(Base):
    __tablename__ = 'non_business_day'

    non_business_day_id = Column(Integer, primary_key=True)
    non_business_date = Column(DateTime, nullable=False)
    non_business_day_desc = Column(Unicode(255), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class NoteLevel(Base):
    __tablename__ = 'note_level'

    note_level = Column(Integer, primary_key=True)
    note_level_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class NoteTyp(Base):
    __tablename__ = 'note_typ'

    note_typ = Column(Integer, primary_key=True)
    note_typ_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    valid_entry_ind = Column(Unicode(1))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    document_typ_ser = Column(Integer)


class OnlineLog(Base):
    __tablename__ = 'online_log'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    app_name = Column(ForeignKey(u'app.app_cd'), nullable=False)
    login_time = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    user_db_id = Column(Unicode(10))
    user_sp_id = Column(Integer)
    last_h_tstamp = Column(DateTime)
    app_session_id = Column(Unicode(38))

    app = relationship(u'App')


class OptionalDemgr(Base):
    __tablename__ = 'optional_demgr'

    pt_id = Column(Unicode(20), primary_key=True)
    race = Column(Unicode(20))
    ethnic_group = Column(Unicode(20))
    marital_status = Column(Unicode(1))
    occupation = Column(Unicode(30))
    educational_level = Column(Unicode(30))
    present_empr_name = Column(Unicode(30))
    mom_full_name = Column(Unicode(30))
    fathers_full_name = Column(Unicode(30))
    ethnic_group_id = Column(ForeignKey(u'ethnic_groups.ethnic_group_id'))
    religion_id = Column(Integer)
    language = Column(Unicode(30))
    mom_maiden_name = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    hlth_care_dpoa = Column(Unicode(1))
    dnr_status = Column(Unicode(1))
    dnh_status = Column(Unicode(1))
    living_will = Column(Unicode(1))
    autopsy_rqst = Column(Unicode(1))
    feeding_rstr = Column(Unicode(1))
    organ_donor = Column(Unicode(1))
    birth_place = Column(Unicode(30))
    med_rstr = Column(Unicode(1))
    tx_rstr = Column(Unicode(1))
    language_cd = Column(Unicode(3))
    race_typ = Column(Integer)

    ethnic_group1 = relationship(u'EthnicGroup')


class OptxPrinterTag(Base):
    __tablename__ = 'optx_printer_tag'

    internal_printer_name = Column(Unicode(50), primary_key=True)
    optx_printer_tag = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class OrgTyp(Base):
    __tablename__ = 'org_typ'

    org_typ = Column(Integer, primary_key=True)
    org_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class OtherName(Base):
    __tablename__ = 'other_name'

    agt_name = Column(ForeignKey(u'agt_name.agt_name'), primary_key=True, nullable=False)
    other_name = Column(Unicode(50), primary_key=True, nullable=False)
    other_name_typ = Column(ForeignKey(u'other_name_typ.other_name_typ'))
    mfg_name = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    upper_agt_name = Column(Unicode(50), index=True)

    agt_name1 = relationship(u'AgtName')
    other_name_typ1 = relationship(u'OtherNameTyp')


class OtherNameTyp(Base):
    __tablename__ = 'other_name_typ'

    other_name_typ = Column(Integer, primary_key=True)
    other_name_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class OverbookCd(Base):
    __tablename__ = 'overbook_cd'

    overbook_cd = Column(Unicode(1), primary_key=True)
    overbook_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class Password(Base):
    __tablename__ = 'password'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'userid'], [u'userid.inst_id', u'userid.userid']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    password = Column(Unicode(10), nullable=False)
    expiry_date = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))

    inst = relationship(u'Userid')


class PerfTracking(Base):
    __tablename__ = 'perf_tracking'

    perf_tracking_id = Column(Integer, primary_key=True)
    tracking_start_tstamp = Column(DateTime)
    tracking_end_tstamp = Column(DateTime)
    inst_id = Column(Unicode(30))
    pt_id = Column(Unicode(20))
    pk_id_txt = Column(Unicode(256))
    perf_tracking_typ_id = Column(Integer)
    tracking_typ_error_txt = Column(Unicode(256))
    workstation_name = Column(Unicode(256))
    app_cd = Column(Unicode(10))
    app_vers_no = Column(Unicode(10))
    app_build_no = Column(Unicode(10))
    valid_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PerfTrackingTyp(Base):
    __tablename__ = 'perf_tracking_typ'

    perf_tracking_typ_id = Column(Integer, primary_key=True)
    perf_tracking_typ_desc = Column(Unicode(50))
    perf_tracking_typ_txt = Column(Unicode(256))
    display_order = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PharmLib(Base):
    __tablename__ = 'pharm_lib'

    ncpdpid = Column(Unicode(7), primary_key=True)
    store_no = Column(Unicode(35))
    ref_no_1 = Column(Unicode(35))
    ref_no_1_qual = Column(Unicode(3))
    store_name = Column(Unicode(35))
    addr1 = Column(Unicode(35))
    addr2 = Column(Unicode(35))
    city = Column(Unicode(35))
    state = Column(Unicode(2), index=True)
    zip_cd = Column(Unicode(11))
    phone_prmy = Column(Unicode(25))
    fax = Column(Unicode(25))
    email = Column(Unicode(80))
    phone_alt1 = Column(Unicode(25))
    phone_alt1_qual = Column(Unicode(3))
    phone_alt2 = Column(Unicode(25))
    phone_alt2_qual = Column(Unicode(3))
    phone_alt3 = Column(Unicode(25))
    phone_alt3_qual = Column(Unicode(3))
    phone_alt4 = Column(Unicode(25))
    phone_alt4_qual = Column(Unicode(3))
    phone_alt5 = Column(Unicode(25))
    phone_alt5_qual = Column(Unicode(3))
    active_start_dt = Column(DateTime)
    active_end_dt = Column(DateTime)
    srvc_lvl = Column(Integer)
    partner_acct = Column(Unicode(35))
    last_mod_dt = Column(Unicode(22))
    open24hr_cd = Column(Unicode(1))
    cross_st = Column(Unicode(35))
    old_srvc_lvl = Column(Unicode(5))
    srvc_lvl_txt = Column(Unicode(100))
    srvc_lvl_txt_chg = Column(Unicode(100))
    version = Column(Unicode(5))
    npi = Column(Unicode(10))
    active_entry_ind = Column(Unicode(1))
    store_name_upper = Column(Unicode(35))
    addr1_upper = Column(Unicode(35))
    city_upper = Column(Unicode(35))
    pharm_typ = Column(Unicode(1))
    pharm_spec_cd = Column(Integer)


class Phase(Base):
    __tablename__ = 'phase'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no'], [u'tx_pln.tp_name', u'tx_pln.tp_vers_no']),
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    phase_seq_no = Column(Integer, primary_key=True, nullable=False)
    phase_desc = Column(Unicode(100), nullable=False)
    no_of_cycles = Column(Integer, nullable=False)
    allowable_drift = Column(Integer)
    allowable_delay = Column(Integer)
    tperiod_dur = Column(Integer)
    tperiod_dur_unit = Column(Integer)
    length_of_cycle = Column(Integer)
    brief_desc = Column(UnicodeText(1073741823))
    lag_ind = Column(Unicode(1))
    dow_start = Column(Integer)
    prcs_typ = Column(ForeignKey(u'prcs_typ.prcs_typ'))
    tr_cs_req_ind = Column(Unicode(1))
    admit_cls = Column(Integer)
    modality = Column(Integer)
    max_no_cycle = Column(Integer)
    max_dur = Column(Integer)
    max_dur_unit = Column(Integer)
    phase_cls = Column(Unicode(100))
    dur_desc = Column(Unicode(50))
    no_tx_days = Column(Integer)
    no_clinic_visits = Column(Integer)
    phase_sch_typ = Column(Integer)
    start_tperiod = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    expected_accrual_amt = Column(Integer)
    active_ind = Column(Unicode(1))
    display_order = Column(Integer)

    prcs_typ1 = relationship(u'PrcsTyp')
    tx_pln = relationship(u'TxPln')


class PhaseSum(Base):
    __tablename__ = 'phase_sum'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    phase_seq_no = Column(Integer, primary_key=True, nullable=False)
    phase_sum_typ = Column(Integer, primary_key=True, nullable=False)
    phase_sum_desc = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PhaseTrRisk(Base):
    __tablename__ = 'phase_tr_risk'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no', 'phase_seq_no'], [u'phase.tp_name', u'phase.tp_vers_no', u'phase.phase_seq_no']),
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    phase_seq_no = Column(Integer, primary_key=True, nullable=False)
    tr_risk_typ = Column(Integer, primary_key=True, nullable=False)
    tr_risk_score = Column(Numeric(11, 4))
    tr_risk_treat_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    phase = relationship(u'Phase')


class PhoneCd(Base):
    __tablename__ = 'phone_cd'

    phone_cd = Column(Unicode(2), primary_key=True, nullable=False)
    stkh_cd = Column(Unicode(1), primary_key=True, nullable=False)
    phone_cd_desc = Column(Unicode(40), nullable=False)
    dflt_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PlcyGroupTyp(Base):
    __tablename__ = 'plcy_group_typ'

    plcy_group_typ_id = Column(Integer, primary_key=True)
    plcy_group_typ_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PlcyTyp(Base):
    __tablename__ = 'plcy_typ'

    plcy_typ_id = Column(Integer, primary_key=True)
    plcy_typ_desc = Column(Unicode(25), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))


class PlnSumTyp(Base):
    __tablename__ = 'pln_sum_typ'

    pln_sum_typ = Column(Integer, primary_key=True)
    pln_sum_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    pln_sum_typ_seq = Column(Integer)


class PlnTyp(Base):
    __tablename__ = 'pln_typ'

    pln_typ = Column(Integer, primary_key=True)
    pln_desc = Column(Unicode(50), nullable=False)
    product_use_typ = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PmtSystem(Base):
    __tablename__ = 'pmt_system'

    pmt_system_id = Column(Integer, primary_key=True)
    pmt_system_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PnCategoryDesc(Base):
    __tablename__ = 'pn_category_desc'

    pn_cat_code = Column(Unicode(10), primary_key=True)
    pn_cat_desc = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    valid_entry_ind = Column(Unicode(1))
    app_cd = Column(Unicode(10))


class PnCompUseCd(Base):
    __tablename__ = 'pn_comp_use_cd'

    pn_comp_use_cd = Column(Unicode(2), primary_key=True)
    pn_comp_use_desc = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PnDspComp(Base):
    __tablename__ = 'pn_dsp_comp'

    pn_dsp_comp_id = Column(Integer, primary_key=True, nullable=False)
    dsp_comp = Column(Integer, primary_key=True, nullable=False)
    comp_id = Column(Unicode(10), primary_key=True, nullable=False)
    pn_dsp_comp_typ_id = Column(Integer, nullable=False)
    comp_order_no = Column(Integer, nullable=False)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PnDspCompTyp(Base):
    __tablename__ = 'pn_dsp_comp_typ'

    pn_dsp_comp_typ_id = Column(Integer, primary_key=True)
    dsp_comp_name = Column(Unicode(30))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PnDspFormat(Base):
    __tablename__ = 'pn_dsp_format'

    pn_dsp_format_id = Column(Integer, primary_key=True, nullable=False)
    dsp_format = Column(Integer, primary_key=True, nullable=False)
    comp_id = Column(Unicode(10), primary_key=True, nullable=False)
    pn_dsp_format_typ_id = Column(Integer, nullable=False)
    format_order_no = Column(Integer, nullable=False)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PnDspFormatTyp(Base):
    __tablename__ = 'pn_dsp_format_typ'

    pn_dsp_format_typ_id = Column(Integer, primary_key=True)
    dsp_format_name = Column(Unicode(30))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PnHdr(Base):
    __tablename__ = 'pn_hdr'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    pn_corsp_cd = Column(Unicode(1), primary_key=True, nullable=False)
    first_page_ind = Column(Unicode(1), primary_key=True, nullable=False)
    pn_hdr_txt = Column(LargeBinary)
    valid_blob_ind = Column(Unicode(1), nullable=False)
    condensed_hdr_ind = Column(Unicode(1), nullable=False)
    enable_ltrhd_ind = Column(Unicode(1), nullable=False)
    custom_hdr_ind = Column(Unicode(1), nullable=False)
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PnSectionDesc(Base):
    __tablename__ = 'pn_section_desc'

    pn_sec_code = Column(Unicode(10), primary_key=True)
    pn_sec_desc = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    valid_entry_ind = Column(Unicode(1))
    app_cd = Column(Unicode(10))


class PnSystemComp(Base):
    __tablename__ = 'pn_system_comp'

    comp_id = Column(Unicode(10), primary_key=True)
    pn_sec_code = Column(Unicode(10), nullable=False)
    pn_cat_code = Column(Unicode(10), nullable=False)
    comp_code = Column(Unicode(50))
    comp_value = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    comp_based = Column(Unicode(1))
    dsp_format = Column(Integer)
    dsp_comp = Column(Integer)
    item_based = Column(Unicode(1))
    trans_trf_tstamp = Column(DateTime)
    toolbar_ind = Column(Unicode(1))
    pn_toolbar_fcn_typ = Column(Integer)
    pn_comp_use_cd = Column(Unicode(2))
    data_typ = Column(Unicode(10))
    dw_col_name = Column(Unicode(80))
    dw_grp_col_names = Column(Unicode(100))
    dw_sort_order = Column(Unicode(100))
    dw_acc_mthd = Column(Unicode(10))
    dflt_ct_id = Column(Integer)
    app_cd = Column(Unicode(10))
    nav_ind = Column(Unicode(1))


class PnTemplate(Base):
    __tablename__ = 'pn_template'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    template_id = Column(Integer, primary_key=True, nullable=False)
    template_typ = Column(Integer, nullable=False)
    template_name = Column(Unicode(50), nullable=False)
    template_txt = Column(UnicodeText(1073741823), nullable=False)
    author_inst_id = Column(Unicode(30))
    author_userid = Column(Unicode(10))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    personal_template_ind = Column(Unicode(1))
    template_use_cd = Column(Unicode(2))
    comp_id = Column(Unicode(10))
    base_tbl_ind = Column(Unicode(1))
    app_cd = Column(Unicode(10))
    file_path = Column(Unicode(255))
    revision_no = Column(Integer, server_default=text("((1))"))
    default_ct_ind = Column(Unicode(1))


class PnTemplateUser(Base):
    __tablename__ = 'pn_template_user'
    __table_args__ = (
        Index('nc1_pn_template_user', 'user_inst_id', 'userid'),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    template_id = Column(Integer, primary_key=True, nullable=False)
    user_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    favorite_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PnToolbarFcnTyp(Base):
    __tablename__ = 'pn_toolbar_fcn_typ'

    pn_toolbar_fcn_typ = Column(Integer, primary_key=True)
    pn_toolbar_fcn_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    cur_entry_ind = Column(Unicode(1))


class PnUserComp(Base):
    __tablename__ = 'pn_user_comp'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    comp_id = Column(Unicode(10), primary_key=True, nullable=False)
    pn_sec_code = Column(Unicode(10), nullable=False)
    pn_cat_code = Column(Unicode(10), nullable=False)
    comp_code = Column(Unicode(50), nullable=False)
    comp_value = Column(Unicode(255), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PnUserTemplate(Base):
    __tablename__ = 'pn_user_template'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    template_typ = Column(ForeignKey(u'note_typ.note_typ'), primary_key=True, nullable=False)
    template_name = Column(Unicode(50), primary_key=True, nullable=False)
    template_text = Column(UnicodeText(1073741823), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    note_typ = relationship(u'NoteTyp')


class PoTemplate(Base):
    __tablename__ = 'po_template'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    template_id = Column(Integer, primary_key=True, nullable=False)
    template_name = Column(Unicode(50), nullable=False)
    template_txt = Column(UnicodeText(1073741823), nullable=False)
    author_inst_id = Column(Unicode(30))
    author_userid = Column(Unicode(10))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PoTemplateUser(Base):
    __tablename__ = 'po_template_user'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    template_id = Column(Integer, primary_key=True, nullable=False)
    user_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    favorite_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PracticeDcmnt(Base):
    __tablename__ = 'practice_dcmnt'

    practice_dcmnt_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    practice_dcmnt_name = Column(Unicode(50), nullable=False)
    practice_dcmnt_typ = Column(Integer, nullable=False)
    practice_dcmnt_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    file_ext = Column(Unicode(10))


class PrcsTyp(Base):
    __tablename__ = 'prcs_typ'

    prcs_typ = Column(Integer, primary_key=True)
    prcs_desc = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PrintAuditRec(Base):
    __tablename__ = 'print_audit_rec'

    audit_seq_no = Column(Integer, primary_key=True)
    print_datetime = Column(DateTime)
    user_inst_id = Column(Unicode(30))
    userid = Column(Unicode(10))
    audit_desc = Column(Unicode(255))
    pt_id = Column(Unicode(20))
    pt_visit_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PrnReasonTyp(Base):
    __tablename__ = 'prn_reason_typ'

    prn_reason_typ = Column(Integer, primary_key=True)
    prn_reason_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class Product(Base):
    __tablename__ = 'product'

    product_id = Column(Integer, primary_key=True)
    product_name = Column(Unicode(50), nullable=False)
    product_desc = Column(Unicode(255))
    product_typ = Column(Integer)
    product_code = Column(Unicode(50))
    product_status_cd = Column(Unicode(1))
    stock_item_id = Column(Unicode(30))
    agt_name = Column(Unicode(50))
    dosage_form = Column(Integer)
    admn_route = Column(Integer)
    multi_use_prod_ind = Column(Unicode(1))
    product_vol = Column(Numeric(11, 4))
    product_vol_unit = Column(Integer)
    strength = Column(Unicode(15))
    strength_unit = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ProductBillCdXref(Base):
    __tablename__ = 'product_bill_cd_xref'

    product_bill_cd_id = Column(Integer, primary_key=True)
    product_id = Column(ForeignKey(u'product.product_id'), nullable=False)
    inst_id = Column(ForeignKey(u'inst.inst_id'))
    bill_cd = Column(Unicode(30))
    bill_cd_typ_id = Column(Integer)
    bill_qty = Column(Numeric(7, 2))
    unit_amt = Column(Numeric(11, 2))
    unit_uom = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'Inst')
    product = relationship(u'Product')


class ProductDispLocXref(Base):
    __tablename__ = 'product_disp_loc_xref'

    product_id = Column(ForeignKey(u'product.product_id'), primary_key=True, nullable=False)
    disp_loc_id = Column(ForeignKey(u'disp_loc.disp_loc_id'), primary_key=True, nullable=False)
    stock_qty = Column(Integer)
    reorder_threshold = Column(Integer)
    product_disp_loc_cd = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    disp_loc = relationship(u'DispLoc')
    product = relationship(u'Product')


class ProductFormularyAgtXref(Base):
    __tablename__ = 'product_formulary_agt_xref'
    __table_args__ = (
        ForeignKeyConstraint(['agt_formulary_inst_id', 'agt_formulary_id'], [u'agt_formulary.inst_id', u'agt_formulary.agt_formulary_id']),
    )

    product_id = Column(ForeignKey(u'product.product_id'), primary_key=True, nullable=False)
    agt_formulary_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    agt_formulary_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    agt_formulary_inst = relationship(u'AgtFormulary')
    product = relationship(u'Product')


class ProductStatu(Base):
    __tablename__ = 'product_status'

    product_status_cd = Column(Unicode(1), primary_key=True)
    product_status_desc = Column(Unicode(50))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class ProductStorageLocXref(Base):
    __tablename__ = 'product_storage_loc_xref'

    product_id = Column(ForeignKey(u'product.product_id'), primary_key=True, nullable=False)
    storage_loc_id = Column(ForeignKey(u'storage_loc.storage_loc_id'), primary_key=True, nullable=False)
    stock_qty = Column(Integer)
    reorder_threshold = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    product = relationship(u'Product')
    storage_loc = relationship(u'StorageLoc')


class ProfReltn(Base):
    __tablename__ = 'prof_reltn'

    prof_reltn = Column(Integer, primary_key=True)
    prof_reltn_desc = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ProfTaskPref(Base):
    __tablename__ = 'prof_task_pref'

    userid = Column(Unicode(10), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    task_id = Column(Integer, primary_key=True, nullable=False)
    pref_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ProfTyp(Base):
    __tablename__ = 'prof_typ'

    prof_typ = Column(Integer, primary_key=True)
    prof_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    med_prof_ind = Column(Unicode(1))


class ProfUnavl(Base):
    __tablename__ = 'prof_unavl'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'userid_link'], [u'userid.inst_id', u'userid.userid']),
        Index('nc5_prof_unavl', 'unavl_hdr_inst_id', 'unavl_hdr_id'),
        Index('nc2_prof_unavl', 'pt_id', 'pt_visit_id'),
        Index('nc4_prof_unavl', 'inst_id', 'userid_link', 'pt_id', 'pt_visit_id'),
        Index('nc1_prof_unavl', 'inst_id', 'userid_link', 'unavl_date'),
        Index('nc6_prof_unavl', 'inst_id', 'userid_link', 'prof_unavl_from'),
        Index('nc3_prof_unavl', 'unavl_inst_id', 'prof_unavl_from')
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid_link = Column(Unicode(10), primary_key=True, nullable=False)
    prof_unavl_id = Column(Integer, primary_key=True, nullable=False)
    unavl_typ = Column(ForeignKey(u'unavl_typ.unavl_typ'))
    prof_unavl_from = Column(DateTime)
    prof_unavl_to = Column(DateTime)
    prof_unavl_dow = Column(ForeignKey(u'unavl_dow.unavl_dow'))
    from_time = Column(DateTime)
    to_time = Column(DateTime)
    pt_id = Column(Unicode(20))
    pt_visit_id = Column(Integer)
    unavl_cmt = Column(Unicode(200))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime, primary_key=True, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    event_typ = Column(Unicode(1))
    unavl_date = Column(DateTime)
    unavl_inst_id = Column(Unicode(30))
    valid_entry_ind = Column(Unicode(1))
    unavl_hdr_inst_id = Column(Unicode(30))
    unavl_hdr_id = Column(Integer)
    partial_usage_qty = Column(Integer)
    unavl_template_id = Column(Integer)

    inst = relationship(u'Userid')
    unavl_dow = relationship(u'UnavlDow')
    unavl_typ1 = relationship(u'UnavlTyp')


class ProvApprStartDate(Base):
    __tablename__ = 'prov_appr_start_date'

    stkh_id = Column(Unicode(20), primary_key=True, nullable=False)
    prov_appr_item_desc = Column(Unicode(20), primary_key=True, nullable=False)
    prov_appr_start_date = Column(DateTime)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class ProviderMuSum(Base):
    __tablename__ = 'provider_mu_sum'

    stkh_id = Column(Unicode(20), primary_key=True, nullable=False)
    compliance_prd_id = Column(Integer, primary_key=True, nullable=False)
    compliance_item_id = Column(ForeignKey(u'compliance_item.compliance_item_id'), primary_key=True, nullable=False)
    sum_last_updated = Column(DateTime)
    mu_pct = Column(Numeric(4, 3))
    numerator = Column(Numeric(11, 2))
    denominator = Column(Numeric(11, 2))
    total_numerator = Column(Numeric(11, 2))
    total_denominator = Column(Numeric(11, 2))
    manual_numerator = Column(Numeric(11, 2))
    manual_denominator = Column(Numeric(11, 2))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    compliance_item = relationship(u'ComplianceItem')


class ProviderStdOrder(Base):
    __tablename__ = 'provider_std_order'

    userid = Column(Unicode(10), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    provider_std_order_id = Column(Integer, primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), nullable=False)
    tp_vers_no = Column(Unicode(10), nullable=False)
    phase_seq_no = Column(Integer, nullable=False)
    cycle_day = Column(Integer, nullable=False)
    event_seq_no = Column(Integer, nullable=False)
    event_typ = Column(Unicode(1), nullable=False)
    group_desc = Column(Unicode(50))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    intv_id = Column(Integer)
    course_no = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))


class PrtyOfSrv(Base):
    __tablename__ = 'prty_of_srv'

    prty_of_srv = Column(Integer, primary_key=True)
    prty_of_srv_desc = Column(Unicode(40), nullable=False)
    prty_of_srv_cd = Column(Unicode(5))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PrvState(Base):
    __tablename__ = 'prv_state'

    prv_state_id = Column(Integer, primary_key=True)
    prv_state = Column(Unicode(30), nullable=False)
    prv_state_abrv = Column(Unicode(4), nullable=False)
    country_id = Column(ForeignKey(u'country.country_id'), nullable=False)
    pc_zip_lower = Column(Unicode(10))
    pc_zip_upper = Column(Unicode(10))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    country = relationship(u'Country')


class Pt(Base):
    __tablename__ = 'pt'

    pt_id = Column(Unicode(20), primary_key=True)
    pt_last_name = Column(Unicode(30), nullable=False)
    pt_dob = Column(DateTime, nullable=False)
    cur_last_name = Column(Unicode(30))
    pt_first_name = Column(Unicode(30), nullable=False)
    pt_initial = Column(Unicode(2), nullable=False)
    sin_ssn = Column(Unicode(20))
    sex_cd = Column(ForeignKey(u'sex_cd.sex_cd'), nullable=False)
    pt_title = Column(Integer)
    title_typ = Column(ForeignKey(u'title_typ.title_id'))
    pt_tp_amend = Column(Unicode(1), index=True)
    pt_tp_active_ind = Column(Unicode(1))
    inpt_ind = Column(Unicode(1))
    pt_alive_ind = Column(Unicode(1))
    new_order_ind = Column(Unicode(1))
    pt_dod = Column(DateTime)
    cs_of_dth_typ_id = Column(ForeignKey(u'cs_of_dth_typ.cs_of_dth_typ_id'))
    citizenship_id = Column(ForeignKey(u'country.country_id'))
    test_pt_ind = Column(Unicode(1))
    maiden_name = Column(Unicode(30))
    pt_dob_cd = Column(ForeignKey(u'date_cd.date_cd'))
    pt_dod_cd = Column(ForeignKey(u'date_cd.date_cd'))
    upper_last_name = Column(Unicode(30), index=True)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    last_pln_chg_date = Column(DateTime)
    pt_last_name_sdx = Column(Unicode(6), index=True)
    pt_first_name_sdx = Column(Unicode(6))
    pt_middle_name = Column(Unicode(30))
    new_rem_ind = Column(Unicode(1))
    first_rem_tstamp = Column(DateTime, index=True)
    last_rem_tstamp = Column(DateTime, index=True)
    clin_trial_ind = Column(Unicode(1))
    trans_trf_inst_id = Column(Unicode(30))
    pt_age = Column(Integer)
    pt_age_cat = Column(Unicode(15))
    allergy_ind = Column(Unicode(1))
    directives_ind = Column(Unicode(1))
    infection_ind = Column(Unicode(1))
    pt_inpatient_ind = Column(Unicode(1))
    pt_alert_ind = Column(Unicode(1))
    track_ae_ind = Column(Unicode(1))
    primary_pt_key_value = Column(Unicode(20))
    nka_ind = Column(Unicode(1))
    ext_agt_ind = Column(Unicode(1))
    patient_ser = Column(BigInteger, index=True)
    pt_password = Column(Unicode(255))

    citizenship = relationship(u'Country')
    cs_of_dth_typ = relationship(u'CsOfDthTyp')
    date_cd = relationship(u'DateCd', primaryjoin='Pt.pt_dob_cd == DateCd.date_cd')
    date_cd1 = relationship(u'DateCd', primaryjoin='Pt.pt_dod_cd == DateCd.date_cd')
    sex_cd1 = relationship(u'SexCd')
    title_typ1 = relationship(u'TitleTyp')


class Financial(Pt):
    __tablename__ = 'financial'

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True)
    medicare_no = Column(Unicode(30))
    medicade_no = Column(Unicode(30))
    appr_for_billing = Column(Unicode(1))
    pmt_system_id = Column(ForeignKey(u'pmt_system.pmt_system_id'))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    guar_ind = Column(Unicode(1))
    self_pay_ind = Column(Unicode(1))
    threshold_alert_ind = Column(Unicode(1))
    precert_req_ind = Column(Unicode(1))
    pt_bal = Column(Numeric(8, 2))
    pt_last_pay_date = Column(DateTime)
    ins_bal = Column(Numeric(8, 2))
    ins_last_pay_date = Column(DateTime)
    fin_cls_typ = Column(Integer)
    fin_cls_typ_inst_id = Column(Unicode(30))

    pmt_system = relationship(u'PmtSystem')


class PtDemgrAudit(Pt):
    __tablename__ = 'pt_demgr_audit'

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PtActualAcces(Base):
    __tablename__ = 'pt_actual_access'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_actual_id = Column(Integer, primary_key=True, nullable=False)
    event_typ = Column(Unicode(1), primary_key=True, nullable=False)
    userid = Column(Unicode(10), nullable=False)
    user_inst_id = Column(Unicode(30), nullable=False)
    access_tstamp = Column(DateTime, nullable=False)


class PtActualLink(Base):
    __tablename__ = 'pt_actual_link'
    __table_args__ = (
        Index('nc2_pt_actual_link', 'pt_id', 'to_pt_visit_id', 'to_pt_actual_id', 'to_event_typ'),
        Index('nc1_pt_actual_link', 'pt_id', 'from_pt_visit_id', 'from_pt_actual_id', 'from_event_typ')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_actual_link_id = Column(Integer, primary_key=True, nullable=False)
    from_pt_visit_id = Column(Integer, nullable=False)
    from_pt_actual_id = Column(Integer, nullable=False)
    from_event_typ = Column(ForeignKey(u'event_typ.event_typ'), nullable=False)
    to_pt_visit_id = Column(Integer, nullable=False)
    to_pt_actual_id = Column(Integer, nullable=False)
    to_event_typ = Column(ForeignKey(u'event_typ.event_typ'), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    event_typ = relationship(u'EventTyp', primaryjoin='PtActualLink.from_event_typ == EventTyp.event_typ')
    event_typ1 = relationship(u'EventTyp', primaryjoin='PtActualLink.to_event_typ == EventTyp.event_typ')


class PtAddres(Base):
    __tablename__ = 'pt_address'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    address_1 = Column(Unicode(30))
    address_2 = Column(Unicode(30))
    address_3 = Column(Unicode(30))
    city = Column(Unicode(30))
    prv_state = Column(Unicode(30))
    pc_zip = Column(Unicode(10))
    country_id = Column(ForeignKey(u'country.country_id'))
    county = Column(Unicode(30))
    home_tel = Column(Unicode(28))
    bus_tel = Column(Unicode(28))
    bus_tel_ext = Column(Unicode(10))
    fax_tel = Column(Unicode(28))
    cur_entry = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, primary_key=True, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    prv_state_id = Column(ForeignKey(u'prv_state.prv_state_id'))
    email_address = Column(Unicode(255))
    mobile_tel = Column(Unicode(28))
    home_tel_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    bus_tel_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    mobile_tel_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    fax_tel_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    pc_zip_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    mobile_tel_prov_id = Column(Integer)

    bus_tel_fmt = relationship(u'FmtField', primaryjoin='PtAddres.bus_tel_fmt_id == FmtField.fmt_field_id')
    country = relationship(u'Country')
    fax_tel_fmt = relationship(u'FmtField', primaryjoin='PtAddres.fax_tel_fmt_id == FmtField.fmt_field_id')
    home_tel_fmt = relationship(u'FmtField', primaryjoin='PtAddres.home_tel_fmt_id == FmtField.fmt_field_id')
    mobile_tel_fmt = relationship(u'FmtField', primaryjoin='PtAddres.mobile_tel_fmt_id == FmtField.fmt_field_id')
    pc_zip_fmt = relationship(u'FmtField', primaryjoin='PtAddres.pc_zip_fmt_id == FmtField.fmt_field_id')
    prv_state1 = relationship(u'PrvState')


class PtAdt(Base):
    __tablename__ = 'pt_adt'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'care_unit_id', 'bed_id'], [u'inst_care_bed.inst_id', u'inst_care_bed.care_unit_id', u'inst_care_bed.bed_id']),
        ForeignKeyConstraint(['pgm_inst_id', 'pgm_id'], [u'admit_pgm.pgm_inst_id', u'admit_pgm.pgm_id'])
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_adt_id = Column(Integer, primary_key=True, nullable=False)
    pt_adt_tstamp = Column(DateTime)
    admit_cls = Column(ForeignKey(u'admit_cls.admit_cls'))
    inst_id = Column(Unicode(30))
    care_unit_id = Column(Integer)
    bed_id = Column(Integer)
    external_ind = Column(Unicode(1))
    external_desc = Column(Unicode(255))
    ref_inst_id = Column(Unicode(30))
    ref_orgnztn_id = Column(Integer)
    adt_cmt = Column(Unicode(255))
    adt_typ = Column(Unicode(1))
    pgm_inst_id = Column(Unicode(30))
    pgm_id = Column(Integer)
    org_stkh_id = Column(ForeignKey(u'stkh.stkh_id'))
    bed_desc = Column(Unicode(16))
    unit_desc = Column(Unicode(16))
    room_desc = Column(Unicode(16))
    valid_entry_ind = Column(Unicode(1), nullable=False)
    current_entry = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    admit_cl = relationship(u'AdmitCl')
    inst = relationship(u'InstCareBed')
    org_stkh = relationship(u'Stkh')
    pgm_inst = relationship(u'AdmitPgm')


class PtAe(Base):
    __tablename__ = 'pt_ae'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_ae_id = Column(Integer, primary_key=True, nullable=False)
    dx_id = Column(Integer)
    clinically_sig_ind = Column(Unicode(1))
    serious_ind = Column(Unicode(1))
    hospitalized_ind = Column(Unicode(1))
    expected_ind = Column(Unicode(1))
    seq_no = Column(Unicode(10))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    tr_cs_cert_typ = Column(Integer)
    tr_cs_typ = Column(Integer)
    tr_grade = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    pt_ae_cmt = Column(Unicode(255))
    death_ind = Column(Unicode(1))
    reportable_ind = Column(Unicode(1))
    reported_ind = Column(Unicode(1))
    status_typ = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))


class PtAeCustFormXref(Base):
    __tablename__ = 'pt_ae_cust_form_xref'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_ae_id = Column(Integer, primary_key=True, nullable=False)
    cust_form_result_id = Column(Integer, primary_key=True, nullable=False)
    cur_entry_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muser = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtAeMh(Base):
    __tablename__ = 'pt_ae_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_ae_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    dx_id = Column(Integer)
    clinically_sig_ind = Column(Unicode(1))
    serious_ind = Column(Unicode(1))
    hospitalized_ind = Column(Unicode(1))
    expected_ind = Column(Unicode(1))
    seq_no = Column(Unicode(10))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    tr_cs_cert_typ = Column(Integer)
    tr_cs_typ = Column(Integer)
    tr_grade = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    pt_ae_cmt = Column(Unicode(255))
    death_ind = Column(Unicode(1))
    reportable_ind = Column(Unicode(1))
    reported_ind = Column(Unicode(1))
    status_typ = Column(Integer)


class PtAgendum(Base):
    __tablename__ = 'pt_agenda'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_agenda_hdr_id'], [u'pt_agenda_hdr.pt_id', u'pt_agenda_hdr.pt_agenda_hdr_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_agenda_hdr_id = Column(Integer, primary_key=True, nullable=False)
    pt_agenda_task_id = Column(Integer, primary_key=True, nullable=False)
    agenda_task_id = Column(ForeignKey(u'agenda_task.agenda_task_id'), nullable=False)
    agenda_template_task_id = Column(Integer, nullable=False)
    task_description = Column(Unicode(50), nullable=False)
    task_seq_no = Column(Integer, nullable=False)
    group_id = Column(Integer, nullable=False)
    group_description = Column(Unicode(50), nullable=False)
    group_seq_no = Column(Integer, nullable=False)
    customization_xml = Column(Unicode(1024), nullable=False)
    status = Column(Unicode(16), nullable=False)
    req_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    agenda_task = relationship(u'AgendaTask')
    pt = relationship(u'PtAgendaHdr')


class PtAgendaHdr(Base):
    __tablename__ = 'pt_agenda_hdr'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'agenda_template_id'], [u'agenda_template.inst_id', u'agenda_template.agenda_template_id']),
    )

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    pt_agenda_hdr_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    agenda_template_id = Column(Integer, nullable=False)
    template_desc = Column(Unicode(50), nullable=False)
    valid_entry_ind = Column(Unicode(1))
    date_of_service = Column(DateTime)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'AgendaTemplate')
    pt = relationship(u'Pt')


class PtAgendaStatu(Base):
    __tablename__ = 'pt_agenda_status'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id'], [u'pt_visit.pt_id', u'pt_visit.pt_visit_id']),
        Index('nc1_pt_agenda_status', 'pt_id', 'cat_name_typ', 'cat_id')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    cat_name = Column(Unicode(40), primary_key=True, nullable=False)
    cat_id = Column(Integer, primary_key=True, nullable=False)
    cat_typ = Column(Unicode(1), nullable=False)
    cat_status = Column(Integer, nullable=False)
    cat_msg = Column(UnicodeText(1073741823))
    cat_name_typ = Column(Integer)
    cat_seq = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    valid_entry_ind = Column(Unicode(1))
    review_tstamp = Column(DateTime)

    pt = relationship(u'PtVisit')


class PtAgtScreening(Base):
    __tablename__ = 'pt_agt_screening'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    agt_screening_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer)
    rx_id = Column(Integer)
    user_inst_id = Column(Unicode(30), nullable=False)
    userid = Column(Unicode(10), nullable=False)
    screening_date = Column(DateTime, nullable=False)
    num_interactions = Column(Integer, nullable=False)
    interactions_viewed_ind = Column(Unicode(1), nullable=False)
    num_contra = Column(Integer, nullable=False)
    contra_viewed_ind = Column(Unicode(1), nullable=False)
    num_allergies = Column(Integer, nullable=False)
    allergies_viewed_ind = Column(Unicode(1), nullable=False)
    screening_detail_ind = Column(Unicode(1), nullable=False)
    called_from = Column(Unicode(10), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    num_dosages = Column(Integer)
    dosages_viewed_ind = Column(Unicode(1))
    num_routes = Column(Integer)
    routes_viewed_ind = Column(Unicode(1))


class PtAgtScreeningDetail(PtAgtScreening):
    __tablename__ = 'pt_agt_screening_detail'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'agt_screening_id'], [u'pt_agt_screening.pt_id', u'pt_agt_screening.agt_screening_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    agt_screening_id = Column(Integer, primary_key=True, nullable=False)
    interaction_txt = Column(UnicodeText(1073741823))
    contra_txt = Column(UnicodeText(1073741823))
    allergy_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PtAlert(Base):
    __tablename__ = 'pt_alert'
    __table_args__ = (
        Index('nc2_pt_alert', 'alert_stkh_id', 'alert_tstamp'),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    alert_id = Column(Integer, primary_key=True, nullable=False)
    alert_stkh_id = Column(Unicode(20), nullable=False, index=True)
    alert_tstamp = Column(DateTime, nullable=False)
    alert_inst_id = Column(Unicode(30), nullable=False)
    alert_pending_ind = Column(Unicode(1), nullable=False)
    clr_reason_cd = Column(Unicode(1))
    clr_userid = Column(Unicode(10))
    clr_tstamp = Column(DateTime)
    clr_inst_id = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtAllergy(Base):
    __tablename__ = 'pt_allergy'

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    allergy_id = Column(Integer, primary_key=True, nullable=False)
    allergy_typ = Column(ForeignKey(u'allergy_typ.allergy_typ'), nullable=False)
    valid_entry = Column(Unicode(1))
    resp = Column(UnicodeText(1073741823))
    allergy_desc = Column(UnicodeText(1073741823))
    severity_id = Column(ForeignKey(u'allergy_severity.severity_id'))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    drug_desc_id = Column(Unicode(6))
    kdc = Column(Unicode(10))
    date_approx_ind = Column(Unicode(1))
    onset_date = Column(DateTime)
    onset_date_cd = Column(ForeignKey(u'date_cd.date_cd'))
    reaction_cd = Column(Unicode(1))
    pt_visit_id = Column(Integer)
    admn_id = Column(Integer)
    agt_name = Column(Unicode(50))
    par_id = Column(Integer)
    dosage_form = Column(Integer)
    allergy_cmt = Column(Unicode(255))
    revision_no = Column(Integer, server_default=text("((1))"))
    err_rsn_txt = Column(Unicode(255))

    allergy_typ1 = relationship(u'AllergyTyp')
    date_cd = relationship(u'DateCd')
    pt = relationship(u'Pt')
    severity = relationship(u'AllergySeverity')


class PtAllergyMh(Base):
    __tablename__ = 'pt_allergy_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    allergy_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    allergy_typ = Column(Integer, nullable=False)
    valid_entry = Column(Unicode(1))
    resp = Column(UnicodeText(1073741823))
    allergy_desc = Column(UnicodeText(1073741823))
    severity_id = Column(Integer)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    drug_desc_id = Column(Unicode(6))
    kdc = Column(Unicode(10))
    date_approx_ind = Column(Unicode(1))
    onset_date = Column(DateTime)
    onset_date_cd = Column(Integer)
    reaction_cd = Column(Unicode(1))
    pt_visit_id = Column(Integer)
    admn_id = Column(Integer)
    agt_name = Column(Unicode(50))
    par_id = Column(Integer)
    dosage_form = Column(Integer)
    allergy_cmt = Column(Unicode(255))
    err_rsn_txt = Column(Unicode(255))


class PtAllergyResp(Base):
    __tablename__ = 'pt_allergy_resp'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'allergy_id'], [u'pt_allergy.pt_id', u'pt_allergy.allergy_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    allergy_id = Column(Integer, primary_key=True, nullable=False)
    allergy_resp_id = Column(Integer, primary_key=True, nullable=False)
    resp_typ = Column(ForeignKey(u'allergy_resp_typ.resp_typ'), nullable=False)
    resp = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    severity_id = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))
    severity_level = Column(Integer)

    pt = relationship(u'PtAllergy')
    allergy_resp_typ = relationship(u'AllergyRespTyp')


class PtAllergyRespMh(Base):
    __tablename__ = 'pt_allergy_resp_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    allergy_id = Column(Integer, primary_key=True, nullable=False)
    allergy_resp_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    resp_typ = Column(Integer, nullable=False)
    resp = Column(Unicode(255))
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    severity_id = Column(Integer)
    severity_level = Column(Integer)


class PtAltAddres(Base):
    __tablename__ = 'pt_alt_address'

    pt_id = Column(Unicode(20), primary_key=True)
    address_1 = Column(Unicode(30))
    address_2 = Column(Unicode(30))
    address_3 = Column(Unicode(30))
    city = Column(Unicode(30))
    prv_state = Column(Unicode(30))
    pc_zip = Column(Unicode(10))
    country_id = Column(Integer)
    county = Column(Unicode(30))
    home_tel = Column(Unicode(28))
    bus_tel = Column(Unicode(28))
    bus_tel_ext = Column(Unicode(10))
    fax_tel = Column(Unicode(28))
    cur_entry = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    prv_state_id = Column(Integer)
    email_address = Column(Unicode(255))
    mobile_tel = Column(Unicode(28))
    home_tel_fmt_id = Column(Integer)
    bus_tel_fmt_id = Column(Integer)
    mobile_tel_fmt_id = Column(Integer)
    fax_tel_fmt_id = Column(Integer)
    pc_zip_fmt_id = Column(Integer)
    mobile_tel_prov_id = Column(Integer)


class PtAsmt(Base):
    __tablename__ = 'pt_asmt'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_asmt_id = Column(Integer, primary_key=True, nullable=False)
    appr_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtAsmtResult(Base):
    __tablename__ = 'pt_asmt_result'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_asmt_id = Column(Integer, primary_key=True, nullable=False)
    asmt_comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    asmt_group_name = Column(Unicode(30))
    result_meas_typ = Column(Integer, nullable=False)
    asmt_value = Column(Numeric(11, 4))
    uom = Column(Integer)
    uom_desc = Column(Unicode(40))
    min_norm = Column(Numeric(11, 4))
    max_norm = Column(Numeric(11, 4))
    asmt_grade_no = Column(Integer)
    grade_desc = Column(Unicode(100))
    asmt_status = Column(Unicode(1))
    status_desc = Column(Unicode(40))
    asmt_cmt_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    asmt_comp_seq = Column(Integer)
    trans_trf_tstamp = Column(DateTime)


class PtAuth(Base):
    __tablename__ = 'pt_auth'
    __table_args__ = (
        Index('nc1_pt_auth', 'pt_id', 'pt_actual_id'),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_auth_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer)
    pt_actual_id = Column(Integer)
    pt_child_actual_id = Column(Integer)
    auth_event_typ = Column(Integer)
    auth_tstamp = Column(DateTime)
    auth_cd = Column(Unicode(3))
    auth_userid = Column(Unicode(10), nullable=False)
    auth_inst_id = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtCldr(Base):
    __tablename__ = 'pt_cldr'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_cldr_id = Column(Integer, primary_key=True, nullable=False)
    pt_cldr_desc = Column(Unicode(255))
    pt_cldr_date = Column(DateTime, nullable=False)
    pt_interaction_id = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_trf_tstamp = Column(DateTime)
    order_ind = Column(Unicode(1))


class PtClinicalNotification(Base):
    __tablename__ = 'pt_clinical_notification'

    pt_clinical_notification_id = Column(Integer, primary_key=True, nullable=False)
    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    clinical_notification_id = Column(Integer, nullable=False)
    resp_date = Column(DateTime)
    accepted_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


t_pt_cmt = Table(
    'pt_cmt', metadata,
    Column('pt_id', ForeignKey(u'pt.pt_id'), nullable=False),
    Column('pt_cmt_id', Integer, nullable=False),
    Column('pt_cmt', Unicode(255), nullable=False),
    Column('pt_cmt_tstamp', DateTime, nullable=False),
    Column('pt_cmt_prty', Integer, nullable=False),
    Column('valid_entry_ind', Unicode(1), nullable=False),
    Column('active_entry_ind', Unicode(1), nullable=False),
    Column('trans_log_userid', Unicode(10)),
    Column('trans_log_tstamp', DateTime),
    Column('trans_log_inst_id', Unicode(30)),
    Column('trans_log_muserid', Unicode(10)),
    Column('trans_log_mtstamp', DateTime),
    Column('trans_log_minst_id', Unicode(30)),
    Column('trans_trf_tstamp', DateTime),
    Column('pt_cmt_typ', ForeignKey(u'pt_cmt_typ.pt_cmt_typ')),
    Column('revision_no', Integer, nullable=False, server_default=text("((1))"))
)


class PtCmtTyp(Base):
    __tablename__ = 'pt_cmt_typ'

    pt_cmt_typ = Column(Integer, primary_key=True)
    pt_cmt_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PtCncrStatu(Base):
    __tablename__ = 'pt_cncr_status'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_dx_id'], [u'pt_dx_cncr.pt_id', u'pt_dx_cncr.pt_dx_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    cncr_status_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    pt_dx_id = Column(Integer, nullable=False)
    asmt_date = Column(DateTime)
    ds_author = Column(Integer)
    ds_eff_date = Column(DateTime)
    dx_status = Column(Integer)
    appr_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    pt_tx_id = Column(Integer)
    resp_label_typ = Column(Integer)
    asmt_date_cd = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))
    err_rsn_txt = Column(Unicode(255))

    pt = relationship(u'PtDxCncr')


class PtCncrStatusMh(Base):
    __tablename__ = 'pt_cncr_status_mh'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_dx_id'], [u'pt_dx_cncr.pt_id', u'pt_dx_cncr.pt_dx_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    cncr_status_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer)
    pt_dx_id = Column(Integer)
    asmt_date = Column(DateTime)
    ds_author = Column(Integer)
    ds_eff_date = Column(DateTime)
    dx_status = Column(Integer)
    appr_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    pt_tx_id = Column(Integer)
    resp_label_typ = Column(Integer)
    asmt_date_cd = Column(Integer)
    err_rsn_txt = Column(Unicode(255))

    pt = relationship(u'PtDxCncr')


class PtCncrStg(Base):
    __tablename__ = 'pt_cncr_stg'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_stage_id = Column(Integer, primary_key=True, nullable=False)
    cncr_stage = Column(Unicode(20))
    crit_desc = Column(Unicode(40))
    date_staged = Column(DateTime)
    staged_by_init = Column(Unicode(5))
    appr_ind = Column(Unicode(1))
    stage_basis = Column(Unicode(1))
    tp_cls_typ_id = Column(Integer, nullable=False)
    tp_cls_value_id = Column(Integer, nullable=False)
    author_cd = Column(Integer, nullable=False)
    eff_date = Column(DateTime, nullable=False)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    date_staged_cd = Column(Integer)
    app_cd = Column(Unicode(10))
    revision_no = Column(Integer, server_default=text("((1))"))
    stg_timing_typ = Column(Integer)
    err_rsn_txt = Column(Unicode(255))


class PtCncrStgCrit(Base):
    __tablename__ = 'pt_cncr_stg_crit'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_stage_id'], [u'pt_cncr_stg.pt_id', u'pt_cncr_stg.pt_stage_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_stage_id = Column(Integer, primary_key=True, nullable=False)
    hdr_cd = Column(Unicode(10), primary_key=True, nullable=False)
    crit_cd = Column(Unicode(10))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    app_cd = Column(Unicode(10))
    revision_no = Column(Integer, server_default=text("((1))"))

    pt = relationship(u'PtCncrStg')


class PtCncrStgCritMh(Base):
    __tablename__ = 'pt_cncr_stg_crit_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_stage_id = Column(Integer, primary_key=True, nullable=False)
    hdr_cd = Column(Unicode(10), primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    crit_cd = Column(Unicode(10))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    app_cd = Column(Unicode(10))


class PtCncrStgMh(Base):
    __tablename__ = 'pt_cncr_stg_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_stage_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    cncr_stage = Column(Unicode(20))
    crit_desc = Column(Unicode(40))
    date_staged = Column(DateTime)
    staged_by_init = Column(Unicode(5))
    appr_ind = Column(Unicode(1))
    stage_basis = Column(Unicode(1))
    tp_cls_typ_id = Column(Integer, nullable=False)
    tp_cls_value_id = Column(Integer, nullable=False)
    author_cd = Column(Integer, nullable=False)
    eff_date = Column(DateTime, nullable=False)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    date_staged_cd = Column(Integer)
    app_cd = Column(Unicode(10))
    stg_timing_typ = Column(Integer)
    err_rsn_txt = Column(Unicode(255))


class PtCommLog(Base):
    __tablename__ = 'pt_comm_log'

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    pt_comm_log_id = Column(Integer, primary_key=True, nullable=False)
    pt_comm_log_typ = Column(Integer, nullable=False)
    pt_actual_id = Column(Integer)
    visit_note_id = Column(Integer)
    pt_comm_log_date = Column(DateTime)
    pt_comm_log_cmt = Column(Unicode(255))
    delivery_method_typ = Column(Integer, nullable=False)
    destination = Column(Unicode(255))
    content_desc = Column(Unicode)
    status_cd = Column(Unicode(1))
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'Pt')


class PtConsent(Base):
    __tablename__ = 'pt_consent'

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    pt_consent_id = Column(Integer, primary_key=True, nullable=False)
    pt_consent_typ = Column(ForeignKey(u'base_typ.base_typ'), nullable=False)
    pt_consent_start_tstamp = Column(DateTime)
    pt_consent_end_tstamp = Column(DateTime)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    cur_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    pt_consent_cd = Column(Unicode(1), nullable=False)

    base_typ = relationship(u'BaseTyp')
    pt = relationship(u'Pt')


class PtContact(Base):
    __tablename__ = 'pt_contact'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_contact_id = Column(Integer, primary_key=True, nullable=False)
    contact_typ = Column(ForeignKey(u'contact_typ.contact_typ'), nullable=False)
    contact_name = Column(Unicode(50), nullable=False)
    reltn_typ = Column(ForeignKey(u'next_of_kin.nok_reltn'))
    address_1 = Column(Unicode(30))
    address_2 = Column(Unicode(30))
    address_3 = Column(Unicode(30))
    city = Column(Unicode(30))
    prv_state = Column(Unicode(30))
    pc_zip = Column(Unicode(10))
    country_id = Column(ForeignKey(u'country.country_id'))
    county = Column(Unicode(30))
    home_tel = Column(Unicode(28))
    bus_tel = Column(Unicode(28))
    bus_tel_ext = Column(Unicode(13))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    primary_cont = Column(Unicode(1))
    prv_state_id = Column(Integer)
    same_addr_ind = Column(Unicode(1))
    mobile_tel = Column(Unicode(28))
    pc_zip_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    bus_tel_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    home_tel_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    mobile_tel_fmt_id = Column(Integer)
    contact_first_name = Column(Unicode(30))

    bus_tel_fmt = relationship(u'FmtField', primaryjoin='PtContact.bus_tel_fmt_id == FmtField.fmt_field_id')
    contact_typ1 = relationship(u'ContactTyp')
    country = relationship(u'Country')
    home_tel_fmt = relationship(u'FmtField', primaryjoin='PtContact.home_tel_fmt_id == FmtField.fmt_field_id')
    pc_zip_fmt = relationship(u'FmtField', primaryjoin='PtContact.pc_zip_fmt_id == FmtField.fmt_field_id')
    next_of_kin = relationship(u'NextOfKin')


class PtDoseDatum(Base):
    __tablename__ = 'pt_dose_data'

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    dose_data_id = Column(Integer, primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    date_obtained = Column(DateTime)
    comp_value = Column(Numeric(11, 4))
    comp_value_alt = Column(Numeric(11, 4))
    comp_unit = Column(Integer)
    comp_value_typ = Column(ForeignKey(u'value_typ.value_typ'))
    alt_value_typ = Column(ForeignKey(u'value_typ.value_typ'))
    appr_ind = Column(Unicode(1))
    cur_entry_ind = Column(Unicode(1))
    used_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    valid_entry_ind = Column(Unicode(1))

    value_typ = relationship(u'ValueTyp', primaryjoin='PtDoseDatum.alt_value_typ == ValueTyp.value_typ')
    value_typ1 = relationship(u'ValueTyp', primaryjoin='PtDoseDatum.comp_value_typ == ValueTyp.value_typ')
    pt = relationship(u'Pt')


class PtDx(Base):
    __tablename__ = 'pt_dx'
    __table_args__ = (
        ForeignKeyConstraint(['cls_scheme_id', 'icd_cd'], [u'icd_dx.cls_scheme_id', u'icd_dx.icd_cd']),
    )

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    dx_id = Column(Integer, primary_key=True, nullable=False)
    icd_cd = Column(Unicode(16))
    stage_of_disease = Column(Unicode(50))
    onset_date = Column(DateTime)
    dx_typ = Column(Unicode(1))
    confirm_dx = Column(Unicode(1))
    resolution_date = Column(DateTime)
    resolution_typ = Column(ForeignKey(u'resolution_typ.resolution_typ'))
    dx_name = Column(Unicode(250))
    valid_entry = Column(Unicode(1))
    dx_desc = Column(UnicodeText(1073741823))
    mthd_of_dx = Column(UnicodeText(1073741823))
    resolution_desc = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False, index=True)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    date_approx_ind = Column(Unicode(1))
    trans_trf_tstamp = Column(DateTime)
    onset_date_cd = Column(Integer)
    hx_of_ind = Column(Unicode(1))
    dx_mthd_typ = Column(ForeignKey(u'dx_mthd_typ.dx_mthd_typ'))
    resolution_date_cd = Column(Integer)
    external_ind = Column(Unicode(1))
    stg_crit_desc = Column(Unicode(40))
    evlv_pt_dx_id = Column(Integer)
    evlv_tstamp = Column(DateTime)
    cur_entry_ind = Column(Unicode(1))
    cs_of_dth_ind = Column(Unicode(1))
    cls_scheme_id = Column(Integer)
    clinical_desc = Column(Unicode(255))
    ae_ind = Column(Unicode(1))
    source_typ = Column(Integer)
    app_cd = Column(Unicode(10))
    dx_cmt = Column(UnicodeText(1073741823))
    revision_no = Column(Integer)
    diagnosis_ser = Column(BigInteger, index=True)
    vision_diagnosis_id = Column(Unicode(16))
    intf_diagnosis_id = Column(Unicode(50))
    err_rsn_txt = Column(Unicode(255))
    reported_ind = Column(Unicode(1))

    cls_scheme = relationship(u'IcdDx')
    dx_mthd_typ1 = relationship(u'DxMthdTyp')
    pt = relationship(u'Pt')
    resolution_typ1 = relationship(u'ResolutionTyp')


class PtDxCncr(PtDx):
    __tablename__ = 'pt_dx_cncr'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_dx_id'], [u'pt_dx.pt_id', u'pt_dx.dx_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_dx_id = Column(Integer, primary_key=True, nullable=False)
    nodes_examined = Column(Integer)
    nodes_pos = Column(Integer)
    icdo_site_typ = Column(Integer)
    icdo_site_cd = Column(Unicode(3))
    icdo_site_seq = Column(Integer)
    morph_cd_typ = Column(Integer)
    morph_cd = Column(Unicode(4))
    morph_cd_seq = Column(Integer)
    behavior_cd = Column(Unicode(1))
    hst_grade_typ = Column(Integer)
    laterality_typ = Column(Integer)
    cncr_desc = Column(Unicode(250))
    les_order_no = Column(Integer)
    meas_ind = Column(Unicode(1))
    meas_dim = Column(Integer)
    meas_mask = Column(Unicode(11))
    prmy_dx_id = Column(Integer)
    resect_ind = Column(Unicode(1))
    recur_ind = Column(Unicode(1))
    invasive_ind = Column(Unicode(1))
    met_ind = Column(Unicode(1))
    prmy_cncr_id = Column(Integer)
    er_status = Column(Unicode(1))
    pr_status = Column(Unicode(1))
    gleason_prmy = Column(Integer)
    gleason_scndy = Column(Integer)
    gleason_total = Column(Integer)
    cores_taken = Column(Integer)
    cores_pos = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    her2neu_ind = Column(Unicode(1))
    s_phase = Column(Numeric(11, 4))
    cls_scheme_id = Column(Integer)
    prmy_cncr_site_value_id = Column(Integer)
    app_cd = Column(Unicode(10))
    tumor_size = Column(Numeric(11, 4))
    revision_no = Column(Integer, server_default=text("((1))"))
    dx_cncr_cmt = Column(Unicode(255))
    les_desc = Column(Unicode(100))
    les_track_ind = Column(Unicode(1))
    cores_pos_left = Column(Integer)
    cores_pos_right = Column(Integer)
    cores_taken_left = Column(Integer)
    cores_taken_right = Column(Integer)
    dcis_status_typ = Column(Integer)
    disease_pct_pos_apex_left = Column(Numeric(11, 4))
    disease_pct_pos_apex_right = Column(Numeric(11, 4))
    disease_pct_pos_base_left = Column(Numeric(11, 4))
    disease_pct_pos_base_right = Column(Numeric(11, 4))
    disease_pct_pos_mid_left = Column(Numeric(11, 4))
    disease_pct_pos_mid_right = Column(Numeric(11, 4))
    disease_present_apex_ind = Column(Unicode(1))
    disease_present_apex_left_ind = Column(Unicode(1))
    disease_present_apex_right_ind = Column(Unicode(1))
    disease_present_base_ind = Column(Unicode(1))
    disease_present_base_left_ind = Column(Unicode(1))
    disease_present_base_right_ind = Column(Unicode(1))
    disease_present_mid_ind = Column(Unicode(1))
    disease_present_mid_left_ind = Column(Unicode(1))
    disease_present_mid_right_ind = Column(Unicode(1))
    nodes_examined_left = Column(Integer)
    nodes_examined_right = Column(Integer)
    nodes_pos_left = Column(Integer)
    nodes_pos_right = Column(Integer)
    ece_status_typ = Column(Integer)
    gleason_tertiary_typ = Column(Integer)
    her2neu_method_typ = Column(Integer)
    her2neu_status_typ = Column(Integer)
    margin_loc = Column(Unicode(255))
    margin_status_typ = Column(Integer)
    microcalc_status_typ = Column(Integer)
    multifocal_ind = Column(Unicode(1))
    necrosis_status_typ = Column(Integer)
    nodes_assessed_ind = Column(Unicode(1))
    nodes_cytokeratin_pos = Column(Integer)
    nodes_largest_size = Column(Numeric(11, 4))
    oncotypedx_risk_typ = Column(Integer)
    oncotypedx_score = Column(Integer)
    pathology_cmt = Column(Unicode(255))
    pin_status_typ = Column(Integer)
    tumor_meas_typ = Column(Integer)
    in_situ_cncr_ind = Column(Unicode(1))
    ki67_status_typ = Column(Integer)
    ki67_pct = Column(Numeric(11, 4))
    her2neu_method2_typ = Column(Integer)
    her2neu_status2_typ = Column(Integer)
    kras_status_typ = Column(Integer)


class PtDxCncrMh(Base):
    __tablename__ = 'pt_dx_cncr_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_dx_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    nodes_examined = Column(Integer)
    nodes_pos = Column(Integer)
    icdo_site_typ = Column(Integer)
    icdo_site_cd = Column(Unicode(3))
    icdo_site_seq = Column(Integer)
    morph_cd_typ = Column(Integer)
    morph_cd = Column(Unicode(4))
    morph_cd_seq = Column(Integer)
    behavior_cd = Column(Unicode(1))
    hst_grade_typ = Column(Integer)
    laterality_typ = Column(Integer)
    cncr_desc = Column(Unicode(250))
    les_order_no = Column(Integer)
    meas_ind = Column(Unicode(1))
    meas_dim = Column(Integer)
    meas_mask = Column(Unicode(11))
    prmy_dx_id = Column(Integer)
    resect_ind = Column(Unicode(1))
    recur_ind = Column(Unicode(1))
    invasive_ind = Column(Unicode(1))
    met_ind = Column(Unicode(1))
    prmy_cncr_id = Column(Integer)
    er_status = Column(Unicode(1))
    pr_status = Column(Unicode(1))
    gleason_prmy = Column(Integer)
    gleason_scndy = Column(Integer)
    gleason_total = Column(Integer)
    cores_taken = Column(Integer)
    cores_pos = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    her2neu_ind = Column(Unicode(1))
    s_phase = Column(Numeric(11, 4))
    cls_scheme_id = Column(Integer)
    prmy_cncr_site_value_id = Column(Integer)
    app_cd = Column(Unicode(10))
    tumor_size = Column(Numeric(11, 4))
    dx_cncr_cmt = Column(Unicode(255))
    les_desc = Column(Unicode(100))
    les_track_ind = Column(Unicode(1))
    cores_pos_left = Column(Integer)
    cores_pos_right = Column(Integer)
    cores_taken_left = Column(Integer)
    cores_taken_right = Column(Integer)
    dcis_status_typ = Column(Integer)
    disease_pct_pos_apex_left = Column(Numeric(11, 4))
    disease_pct_pos_apex_right = Column(Numeric(11, 4))
    disease_pct_pos_base_left = Column(Numeric(11, 4))
    disease_pct_pos_base_right = Column(Numeric(11, 4))
    disease_pct_pos_mid_left = Column(Numeric(11, 4))
    disease_pct_pos_mid_right = Column(Numeric(11, 4))
    disease_present_apex_ind = Column(Unicode(1))
    disease_present_apex_left_ind = Column(Unicode(1))
    disease_present_apex_right_ind = Column(Unicode(1))
    disease_present_base_ind = Column(Unicode(1))
    disease_present_base_left_ind = Column(Unicode(1))
    disease_present_base_right_ind = Column(Unicode(1))
    disease_present_mid_ind = Column(Unicode(1))
    disease_present_mid_left_ind = Column(Unicode(1))
    disease_present_mid_right_ind = Column(Unicode(1))
    nodes_examined_left = Column(Integer)
    nodes_examined_right = Column(Integer)
    nodes_pos_left = Column(Integer)
    nodes_pos_right = Column(Integer)
    ece_status_typ = Column(Integer)
    gleason_tertiary_typ = Column(Integer)
    her2neu_method_typ = Column(Integer)
    her2neu_status_typ = Column(Integer)
    margin_loc = Column(Unicode(255))
    margin_status_typ = Column(Integer)
    microcalc_status_typ = Column(Integer)
    multifocal_ind = Column(Unicode(1))
    necrosis_status_typ = Column(Integer)
    nodes_assessed_ind = Column(Unicode(1))
    nodes_cytokeratin_pos = Column(Integer)
    nodes_largest_size = Column(Numeric(11, 4))
    oncotypedx_risk_typ = Column(Integer)
    oncotypedx_score = Column(Integer)
    pathology_cmt = Column(Unicode(255))
    pin_status_typ = Column(Integer)
    tumor_meas_typ = Column(Integer)
    in_situ_cncr_ind = Column(Unicode(1))
    ki67_status_typ = Column(Integer)
    ki67_pct = Column(Numeric(11, 4))
    her2neu_method2_typ = Column(Integer)
    her2neu_status2_typ = Column(Integer)
    kras_status_typ = Column(Integer)


class PtDxEvent(Base):
    __tablename__ = 'pt_dx_event'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_dx_event_id = Column(Integer, primary_key=True, nullable=False)
    pt_dx_id = Column(Integer)
    event_typ = Column(Integer)
    event_date = Column(DateTime)
    event_date_cd = Column(Integer)
    event_desc = Column(UnicodeText(1073741823))
    dx_site = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    pt_tx_id = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))
    err_rsn_txt = Column(Unicode(255))


class PtDxEventMh(Base):
    __tablename__ = 'pt_dx_event_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_dx_event_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    pt_dx_id = Column(Integer)
    event_typ = Column(Integer)
    event_date = Column(DateTime)
    event_date_cd = Column(Integer)
    event_desc = Column(UnicodeText(1073741823))
    dx_site = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    pt_tx_id = Column(Integer)
    err_rsn_txt = Column(Unicode(255))


class PtDxInvasiveTyp(Base):
    __tablename__ = 'pt_dx_invasive_typ'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_dx_id'], [u'pt_dx.pt_id', u'pt_dx.dx_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_dx_id = Column(Integer, primary_key=True, nullable=False)
    pt_dx_invasive_typ_id = Column(Integer, primary_key=True, nullable=False)
    invasive_typ = Column(Integer)
    invasive_typ_desc = Column(Unicode(40))
    invasive_present_typ = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    app_cd = Column(Unicode(10))
    revision_no = Column(Integer, server_default=text("((1))"))

    pt = relationship(u'PtDx')


class PtDxInvasiveTypMh(Base):
    __tablename__ = 'pt_dx_invasive_typ_mh'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_dx_id'], [u'pt_dx.pt_id', u'pt_dx.dx_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_dx_id = Column(Integer, primary_key=True, nullable=False)
    pt_dx_invasive_typ_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    invasive_typ = Column(Integer)
    invasive_typ_desc = Column(Unicode(40))
    invasive_present_typ = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    app_cd = Column(Unicode(10))

    pt = relationship(u'PtDx')


class PtDxMh(Base):
    __tablename__ = 'pt_dx_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    dx_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    icd_cd = Column(Unicode(16))
    stage_of_disease = Column(Unicode(50))
    onset_date = Column(DateTime)
    dx_typ = Column(Unicode(1))
    confirm_dx = Column(Unicode(1))
    resolution_date = Column(DateTime)
    resolution_typ = Column(Integer)
    dx_name = Column(Unicode(250))
    valid_entry = Column(Unicode(1))
    dx_desc = Column(UnicodeText(1073741823))
    mthd_of_dx = Column(UnicodeText(1073741823))
    resolution_desc = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    date_approx_ind = Column(Unicode(1))
    trans_trf_tstamp = Column(DateTime)
    onset_date_cd = Column(Integer)
    hx_of_ind = Column(Unicode(1))
    dx_mthd_typ = Column(Integer)
    resolution_date_cd = Column(Integer)
    external_ind = Column(Unicode(1))
    stg_crit_desc = Column(Unicode(40))
    evlv_pt_dx_id = Column(Integer)
    evlv_tstamp = Column(DateTime)
    cur_entry_ind = Column(Unicode(1))
    cs_of_dth_ind = Column(Unicode(1))
    cls_scheme_id = Column(Integer)
    clinical_desc = Column(Unicode(255))
    ae_ind = Column(Unicode(1))
    source_typ = Column(Integer)
    app_cd = Column(Unicode(10))
    dx_cmt = Column(UnicodeText(1073741823))
    diagnosis_ser = Column(BigInteger)
    vision_diagnosis_id = Column(Unicode(16))
    intf_diagnosis_id = Column(Unicode(50))
    err_rsn_txt = Column(Unicode(255))


class PtDxStatu(Base):
    __tablename__ = 'pt_dx_status'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id'], [u'pt_visit.pt_id', u'pt_visit.pt_visit_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    dx_status_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    asmt_date = Column(DateTime)
    ps_author_1 = Column(Integer)
    ps_eff_date_1 = Column(DateTime)
    perf_status_1 = Column(Integer)
    ps_author_2 = Column(Integer)
    ps_eff_date_2 = Column(DateTime)
    perf_status_2 = Column(Integer)
    appr_ind = Column(Unicode(1))
    impr_desc = Column(Unicode(255))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))
    app_cd = Column(Unicode(10))
    err_rsn_txt = Column(Unicode(255))

    pt = relationship(u'PtVisit')


class PtDxStatusHx(Base):
    __tablename__ = 'pt_dx_status_hx'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_dx_id = Column(Integer, primary_key=True, nullable=False)
    pt_dx_status_id = Column(Integer, primary_key=True, nullable=False)
    resolution_typ = Column(Integer)
    resolution_date = Column(DateTime)
    resolution_desc = Column(Unicode(255))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    resolution_date_cd = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))


class PtDxStatusHxMh(Base):
    __tablename__ = 'pt_dx_status_hx_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_dx_id = Column(Integer, primary_key=True, nullable=False)
    pt_dx_status_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    resolution_typ = Column(Integer)
    resolution_date = Column(DateTime)
    resolution_desc = Column(Unicode(255))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    resolution_date_cd = Column(Integer)


class PtDxStatusMh(Base):
    __tablename__ = 'pt_dx_status_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    dx_status_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    asmt_date = Column(DateTime)
    ps_author_1 = Column(Integer)
    ps_eff_date_1 = Column(DateTime)
    perf_status_1 = Column(Integer)
    ps_author_2 = Column(Integer)
    ps_eff_date_2 = Column(DateTime)
    perf_status_2 = Column(Integer)
    appr_ind = Column(Unicode(1))
    impr_desc = Column(Unicode(255))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    app_cd = Column(Unicode(10))
    err_rsn_txt = Column(Unicode(255))


class PtEducTopic(Base):
    __tablename__ = 'pt_educ_topic'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_educ_id = Column(Integer, primary_key=True, nullable=False)
    educ_topic_id = Column(Integer)
    provided_dt = Column(DateTime)
    how_provided_typ = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtEducation(Base):
    __tablename__ = 'pt_education'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_education_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, server_default=text("((1))"))
    time_spent = Column(Integer)
    time_unit = Column(Integer)
    education_tstamp = Column(DateTime)
    education_cmt = Column(Unicode(255))
    valid_entry_ind = Column(Unicode(1))
    education_desc = Column(Unicode(255))
    education_cat_desc = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    err_rsn_txt = Column(Unicode(255))


class PtEducationMh(Base):
    __tablename__ = 'pt_education_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_education_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    time_spent = Column(Integer)
    time_unit = Column(Integer)
    education_tstamp = Column(DateTime)
    education_cmt = Column(Unicode(255))
    valid_entry_ind = Column(Unicode(1))
    education_desc = Column(Unicode(255))
    education_cat_desc = Column(Unicode(255))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    err_rsn_txt = Column(Unicode(255))


class PtErrorTracking(Base):
    __tablename__ = 'pt_error_tracking'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    event_typ = Column(Unicode(1), primary_key=True, nullable=False)
    error_pt_actual_id = Column(Integer, primary_key=True, nullable=False)
    new_pt_actual_id = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PtExam(Base):
    __tablename__ = 'pt_exam'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_id = Column(Integer, primary_key=True, nullable=False)
    exam_cd = Column(Unicode(1))
    inst_id = Column(Unicode(30))
    userid = Column(Unicode(10))
    appr_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    datetime_appr = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    exam_datetime = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))
    app_cd = Column(Unicode(10))
    err_rsn_txt = Column(Unicode(255))


class PtExamAttr(Base):
    __tablename__ = 'pt_exam_attr'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_system_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_comp_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_attr_id = Column(Integer, primary_key=True, nullable=False)
    comp_desc = Column(Unicode(40))
    exam_comp_attr = Column(Unicode(40))
    exam_asmt_desc = Column(Unicode(200))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))
    app_cd = Column(Unicode(10))


class PtExamAttrMh(Base):
    __tablename__ = 'pt_exam_attr_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_system_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_comp_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_attr_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    comp_desc = Column(Unicode(40))
    exam_comp_attr = Column(Unicode(40))
    exam_asmt_desc = Column(Unicode(200))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    app_cd = Column(Unicode(10))


class PtExamComp(Base):
    __tablename__ = 'pt_exam_comp'
    __table_args__ = (
        ForeignKeyConstraint(['cls_scheme_id', 'icd_cd'], [u'icd_dx.cls_scheme_id', u'icd_dx.icd_cd']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_system_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_comp_id = Column(Integer, primary_key=True, nullable=False)
    system_desc = Column(Unicode(30))
    exam_comp_id = Column(Integer)
    comp_desc = Column(Unicode(40))
    comp_asmt_cd = Column(Unicode(1))
    comp_asmt_desc = Column(UnicodeText(1073741823))
    icd_cd = Column(Unicode(16))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    cls_scheme_id = Column(Integer)
    asmt_comp_desc = Column(UnicodeText(1073741823))
    excl_comp_from_desc = Column(Unicode(1))
    revision_no = Column(Integer, server_default=text("((1))"))
    app_cd = Column(Unicode(10))
    neg_desc = Column(Unicode(100))

    cls_scheme = relationship(u'IcdDx')


class PtExamCompMh(Base):
    __tablename__ = 'pt_exam_comp_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_system_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_comp_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    system_desc = Column(Unicode(30))
    exam_comp_id = Column(Integer)
    comp_desc = Column(Unicode(40))
    comp_asmt_cd = Column(Unicode(1))
    comp_asmt_desc = Column(UnicodeText(1073741823))
    icd_cd = Column(Unicode(16))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    cls_scheme_id = Column(Integer)
    asmt_comp_desc = Column(UnicodeText(1073741823))
    excl_comp_from_desc = Column(Unicode(1))
    app_cd = Column(Unicode(10))
    neg_desc = Column(Unicode(100))


class PtExamMh(Base):
    __tablename__ = 'pt_exam_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    exam_cd = Column(Unicode(1))
    inst_id = Column(Unicode(30))
    userid = Column(Unicode(10))
    appr_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    datetime_appr = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    exam_datetime = Column(DateTime)
    app_cd = Column(Unicode(10))
    err_rsn_txt = Column(Unicode(255))


class PtExamSystem(Base):
    __tablename__ = 'pt_exam_system'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_system_id = Column(Integer, primary_key=True, nullable=False)
    system_typ_id = Column(Integer)
    system_desc = Column(Unicode(30))
    system_asmt_cd = Column(Unicode(1))
    system_asmt_desc = Column(UnicodeText(1073741823))
    seq_no = Column(Integer)
    mr_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    custom_asmt_ind = Column(Unicode(1))
    dictated_ind = Column(Unicode(1))
    asmt_system_desc = Column(UnicodeText(1073741823))
    dictation_queue_id = Column(Integer)
    appr_userid = Column(Unicode(10))
    appr_tstamp = Column(DateTime)
    appr_inst_id = Column(Unicode(30))
    revision_no = Column(Integer, server_default=text("((1))"))
    valid_entry_ind = Column(Unicode(1))
    app_cd = Column(Unicode(10))


class PtExamSystemMh(Base):
    __tablename__ = 'pt_exam_system_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_id = Column(Integer, primary_key=True, nullable=False)
    pt_exam_system_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    system_typ_id = Column(Integer)
    system_desc = Column(Unicode(30))
    system_asmt_cd = Column(Unicode(1))
    system_asmt_desc = Column(UnicodeText(1073741823))
    seq_no = Column(Integer)
    mr_ind = Column(Unicode(1))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    custom_asmt_ind = Column(Unicode(1))
    dictated_ind = Column(Unicode(1))
    asmt_system_desc = Column(UnicodeText(1073741823))
    dictation_queue_id = Column(Integer)
    appr_userid = Column(Unicode(10))
    appr_tstamp = Column(DateTime)
    appr_inst_id = Column(Unicode(30))
    valid_entry_ind = Column(Unicode(1))
    app_cd = Column(Unicode(10))


class PtFamHx(Base):
    __tablename__ = 'pt_fam_hx'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    fam_hx_id = Column(Integer, primary_key=True, nullable=False)
    fam_reltn_typ = Column(Integer, nullable=False)
    seq_no = Column(Integer)
    fam_mbr_name = Column(Unicode(50))
    alive_ind = Column(Unicode(1))
    age_at_death = Column(Integer)
    fam_mbr_dob = Column(DateTime)
    fam_mbr_cmt = Column(Unicode(255))
    fam_mbr_prob_desc = Column(UnicodeText(1073741823))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))


class PtFamHxMh(Base):
    __tablename__ = 'pt_fam_hx_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    fam_hx_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    fam_reltn_typ = Column(Integer, nullable=False)
    seq_no = Column(Integer)
    fam_mbr_name = Column(Unicode(50))
    alive_ind = Column(Unicode(1))
    age_at_death = Column(Integer)
    fam_mbr_dob = Column(DateTime)
    fam_mbr_cmt = Column(Unicode(255))
    fam_mbr_prob_desc = Column(UnicodeText(1073741823))
    valid_entry_ind = Column(Unicode(1))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtFamHxProb(Base):
    __tablename__ = 'pt_fam_hx_prob'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    fam_hx_prob_id = Column(Integer, primary_key=True, nullable=False)
    fam_hx_id = Column(Integer, nullable=False)
    prob_id = Column(Integer)
    prob_desc = Column(Unicode(40))
    cancer_typ = Column(Integer)
    cause_of_death_ind = Column(Unicode(1))
    prob_cmt = Column(Unicode(255))
    dx_age = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    duration = Column(Integer)
    time_unit = Column(Integer)
    resolution_typ = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))


class PtFamHxProbMh(Base):
    __tablename__ = 'pt_fam_hx_prob_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    fam_hx_prob_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    fam_hx_id = Column(Integer, nullable=False)
    prob_id = Column(Integer)
    prob_desc = Column(Unicode(40))
    cancer_typ = Column(Integer)
    cause_of_death_ind = Column(Unicode(1))
    prob_cmt = Column(Unicode(255))
    dx_age = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    duration = Column(Integer)
    time_unit = Column(Integer)
    resolution_typ = Column(Integer)


class PtFbmCase(Base):
    __tablename__ = 'pt_fbm_case'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_fbm_case_id = Column(Integer, primary_key=True, nullable=False)
    fbm_pgm_id = Column(Integer, nullable=False)
    pt_dx_id = Column(Integer)
    start_tstamp = Column(DateTime)
    stop_tstamp = Column(DateTime)
    fbm_inst_id = Column(Unicode(30))
    rcpt_cd = Column(Unicode(1), nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    provider_stkh_id = Column(Unicode(20))
    org_stkh_id = Column(Unicode(20))
    pt_contact_id = Column(Integer)
    fbm_pt_fu_typ = Column(Integer)
    fbm_pt_handling_typ = Column(Integer)
    pt_fbm_case_cmt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PtFbmCaseSch(Base):
    __tablename__ = 'pt_fbm_case_sch'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_fbm_case_sch_id = Column(Integer, primary_key=True, nullable=False)
    pt_fbm_case_id = Column(Integer, nullable=False)
    fbm_pgm_sch_month = Column(Integer)
    send_tstamp = Column(DateTime)
    fbm_ltr_id = Column(Integer, nullable=False)
    pt_notification_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    visit_note_id = Column(Integer)
    sent_tstamp = Column(DateTime)
    sent_name = Column(Unicode(255))
    sent_name_2 = Column(Unicode(255))
    sent_address_1 = Column(Unicode(255))
    sent_address_2 = Column(Unicode(255))
    sent_address_3 = Column(Unicode(255))
    sent_city = Column(Unicode(255))
    sent_county = Column(Unicode(255))
    sent_prv_state = Column(Unicode(255))
    sent_pc_zip = Column(Unicode(255))
    sent_country = Column(Unicode(255))
    pt_fbm_case_sch_cmt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PtFbmResp(Base):
    __tablename__ = 'pt_fbm_resp'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_fbm_resp_id = Column(Integer, primary_key=True, nullable=False)
    resp_tstamp = Column(DateTime, nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    pt_fbm_case_sch_id = Column(Integer)
    visit_note_id = Column(Integer)
    fbm_pt_resp_typ = Column(Integer)
    pt_fbm_resp_cmt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PtFsTemplate(Base):
    __tablename__ = 'pt_fs_template'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    fs_cust_view_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtGnrcActual(Base):
    __tablename__ = 'pt_gnrc_actual'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_actual_id = Column(Integer, primary_key=True, nullable=False)
    completed_qty = Column(Integer)
    charted_tstamp = Column(DateTime, nullable=False)
    completed_tstamp = Column(DateTime)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    intv_name = Column(Unicode(255), nullable=False)
    event_typ = Column(Unicode(1), nullable=False)
    appr_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtGuar(Base):
    __tablename__ = 'pt_guar'

    guar_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    guar_last_name = Column(Unicode(30))
    guar_first_name = Column(Unicode(30))
    guar_initial = Column(Unicode(1))
    guar_org_name = Column(Unicode(40))
    address_1 = Column(Unicode(30))
    address_2 = Column(Unicode(30))
    address_3 = Column(Unicode(30))
    city = Column(Unicode(30))
    prv_state_id = Column(Integer)
    pc_zip = Column(Unicode(10))
    country_id = Column(Integer)
    home_tel = Column(Unicode(28))
    bus_tel = Column(Unicode(28))
    bus_tel_ext = Column(Unicode(10))
    guar_typ = Column(Unicode(1))
    guar_reltn = Column(Integer)
    current_ind = Column(Unicode(1))
    guar_eff_date = Column(DateTime)
    guar_term_date = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    guar_sin_ssn = Column(Unicode(20))
    guar_dob = Column(DateTime)
    guar_sex_cd = Column(Unicode(1))
    guar_emp_status_typ = Column(Integer)
    same_addr_ind = Column(Unicode(1))
    county = Column(Unicode(30))
    prv_state = Column(Unicode(30))
    pc_zip_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    bus_tel_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    home_tel_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))

    bus_tel_fmt = relationship(u'FmtField', primaryjoin='PtGuar.bus_tel_fmt_id == FmtField.fmt_field_id')
    home_tel_fmt = relationship(u'FmtField', primaryjoin='PtGuar.home_tel_fmt_id == FmtField.fmt_field_id')
    pc_zip_fmt = relationship(u'FmtField', primaryjoin='PtGuar.pc_zip_fmt_id == FmtField.fmt_field_id')
    pt = relationship(u'Pt')


class PtGyneHx(Base):
    __tablename__ = 'pt_gyne_hx'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    gyne_hx_id = Column(Integer, primary_key=True, nullable=False)
    gravida = Column(Integer)
    para = Column(Integer)
    no_abortions = Column(Integer)
    first_birth_age = Column(Integer)
    menses_start_age = Column(Integer)
    mpause_cd = Column(Unicode(1))
    mpause_age = Column(Integer)
    mpause_reason_typ = Column(Integer)
    mpause_reason_desc = Column(Unicode(255))
    hormone_use_ind = Column(Unicode(1))
    ocp_use_ind = Column(Unicode(1))
    ocp_use_dur = Column(Integer)
    mpause_hormone_ind = Column(Unicode(1))
    mpause_hormone_dur = Column(Integer)
    other_hormone_use_ind = Column(Unicode(1))
    other_hormone_dur = Column(Integer)
    mr_pap_date = Column(DateTime)
    mr_mammogram_date = Column(DateTime)
    gyne_detail_desc = Column(Unicode(255))
    hormone_desc = Column(Unicode(255))
    gyne_hx_desc = Column(UnicodeText(1073741823))
    cur_entry_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    mpause_cycle = Column(Integer)
    lmp_date = Column(DateTime)
    mpause_desc = Column(Unicode(255))
    mr_mammogram_cmt = Column(Unicode(255))
    mr_pap_cmt = Column(Unicode(255))
    revision_no = Column(Integer, server_default=text("((1))"))
    mr_pap_date_cd = Column(Integer)
    mr_mammogram_date_cd = Column(Integer)


class PtGyneHxMh(Base):
    __tablename__ = 'pt_gyne_hx_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    gyne_hx_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    gravida = Column(Integer)
    para = Column(Integer)
    no_abortions = Column(Integer)
    first_birth_age = Column(Integer)
    menses_start_age = Column(Integer)
    mpause_cd = Column(Unicode(1))
    mpause_age = Column(Integer)
    mpause_reason_typ = Column(Integer)
    mpause_reason_desc = Column(Unicode(255))
    hormone_use_ind = Column(Unicode(1))
    ocp_use_ind = Column(Unicode(1))
    ocp_use_dur = Column(Integer)
    mpause_hormone_ind = Column(Unicode(1))
    mpause_hormone_dur = Column(Integer)
    other_hormone_use_ind = Column(Unicode(1))
    other_hormone_dur = Column(Integer)
    mr_pap_date = Column(DateTime)
    mr_mammogram_date = Column(DateTime)
    gyne_detail_desc = Column(Unicode(255))
    hormone_desc = Column(Unicode(255))
    gyne_hx_desc = Column(UnicodeText(1073741823))
    cur_entry_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    mpause_cycle = Column(Integer)
    lmp_date = Column(DateTime)
    mpause_desc = Column(Unicode(255))
    mr_mammogram_cmt = Column(Unicode(255))
    mr_pap_cmt = Column(Unicode(255))
    mr_pap_date_cd = Column(Integer)
    mr_mammogram_date_cd = Column(Integer)


class PtHpi(Base):
    __tablename__ = 'pt_hpi'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    hpi_id = Column(Integer, primary_key=True, nullable=False)
    hpi_datetime = Column(DateTime)
    prov_userid = Column(Unicode(10))
    prov_inst_id = Column(Unicode(30))
    hpi_assessed_count = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    appr_ind = Column(Unicode(1))
    chief_complaint = Column(UnicodeText(1073741823))
    loc_txt = Column(UnicodeText(1073741823))
    quality_txt = Column(UnicodeText(1073741823))
    severity_txt = Column(UnicodeText(1073741823))
    timing_txt = Column(UnicodeText(1073741823))
    duration_txt = Column(UnicodeText(1073741823))
    context_txt = Column(UnicodeText(1073741823))
    modifying_factors_txt = Column(UnicodeText(1073741823))
    assoc_signs_txt = Column(UnicodeText(1073741823))
    hpi_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    detail_ind = Column(Unicode(1))


class PtHxCmt(Base):
    __tablename__ = 'pt_hx_cmt'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_hx_cmt_id = Column(Integer, primary_key=True, nullable=False)
    hx_typ = Column(Integer, nullable=False)
    cur_entry_ind = Column(Unicode(1))
    no_hx_ind = Column(Unicode(1))
    hx_cmt = Column(UnicodeText(1073741823))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtHxResp(Base):
    __tablename__ = 'pt_hx_resp'
    __table_args__ = (
        ForeignKeyConstraint(['hdr_typ', 'question_no'], [u'hx_question.hdr_typ', u'hx_question.question_no']),
    )

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    hdr_typ = Column(Integer, primary_key=True, nullable=False)
    question_no = Column(Integer, primary_key=True, nullable=False)
    resp_ind = Column(Unicode(1), nullable=False)
    resp_date = Column(DateTime)
    resp_no = Column(Integer)
    resp_string = Column(UnicodeText(1073741823))
    resp_boolean = Column(Unicode(1))
    resp_radio = Column(Integer)
    resp_start = Column(Integer)
    resp_end = Column(Integer)
    valid_entry = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, primary_key=True, nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    hx_of_ind = Column(Unicode(1))
    hx_date = Column(DateTime)

    hx_question = relationship(u'HxQuestion')
    pt = relationship(u'Pt')


class PtIndHx(Base):
    __tablename__ = 'pt_ind_hx'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_ind_hx_id = Column(Integer, primary_key=True, nullable=False)
    pt_ind_typ = Column(Integer, nullable=False)
    pt_ind_value = Column(Unicode(1), nullable=False)
    pt_ind_hx_date = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtInfectionCtrl(Base):
    __tablename__ = 'pt_infection_ctrl'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_infection_ctrl_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30))
    infection_ctrl_typ_id = Column(Integer)
    infection_desc = Column(UnicodeText(1073741823))
    isolation_date_to = Column(DateTime)
    isolation_date_from = Column(DateTime)
    active_date = Column(DateTime)
    inactive_date = Column(DateTime)
    isolation_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    active_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))


class PtInfectionCtrlMh(Base):
    __tablename__ = 'pt_infection_ctrl_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_infection_ctrl_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30))
    infection_ctrl_typ_id = Column(Integer)
    infection_desc = Column(UnicodeText(1073741823))
    isolation_date_to = Column(DateTime)
    isolation_date_from = Column(DateTime)
    active_date = Column(DateTime)
    inactive_date = Column(DateTime)
    isolation_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    active_ind = Column(Unicode(1))
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PtInfoRequest(Base):
    __tablename__ = 'pt_info_request'
    __table_args__ = (
        ForeignKeyConstraint(['authorized_inst_id', 'authorized_userid'], [u'userid.inst_id', u'userid.userid']),
        ForeignKeyConstraint(['prov_inst_id', 'prov_userid'], [u'userid.inst_id', u'userid.userid']),
        ForeignKeyConstraint(['pt_id', 'pt_visit_id'], [u'pt_visit.pt_id', u'pt_visit.pt_visit_id'])
    )

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    pt_info_request_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(ForeignKey(u'inst.inst_id'), nullable=False)
    pt_visit_id = Column(Integer)
    request_typ = Column(ForeignKey(u'base_cls_typ.base_cls_typ'), nullable=False)
    request_date = Column(DateTime, nullable=False)
    delivery_method_requested_typ = Column(ForeignKey(u'base_typ.base_typ'), nullable=False)
    delivery_method_actual_typ = Column(ForeignKey(u'base_typ.base_typ'))
    date_completed = Column(DateTime)
    info_request_start_date = Column(DateTime)
    info_request_end_date = Column(DateTime)
    prov_userid = Column(Unicode(10))
    prov_inst_id = Column(Unicode(30))
    request_cmt = Column(Unicode(255))
    status_cd = Column(Unicode(1), nullable=False, server_default=text("('P')"))
    app_cd = Column(ForeignKey(u'app.app_cd'))
    authorized_ind = Column(Unicode(1), nullable=False, server_default=text("('N')"))
    authorized_inst_id = Column(Unicode(30))
    authorized_userid = Column(Unicode(10))
    valid_entry_ind = Column(Unicode(1), nullable=False, server_default=text("('Y')"))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))

    app = relationship(u'App')
    authorized_inst = relationship(u'Userid', primaryjoin='PtInfoRequest.authorized_inst_id == Userid.inst_id')
    base_typ = relationship(u'BaseTyp', primaryjoin='PtInfoRequest.delivery_method_actual_typ == BaseTyp.base_typ')
    base_typ1 = relationship(u'BaseTyp', primaryjoin='PtInfoRequest.delivery_method_requested_typ == BaseTyp.base_typ')
    inst = relationship(u'Inst')
    prov_inst = relationship(u'Userid', primaryjoin='PtInfoRequest.prov_inst_id == Userid.inst_id')
    pt = relationship(u'PtVisit')
    pt1 = relationship(u'Pt')
    base_cls_typ = relationship(u'BaseClsTyp')


class PtInsPrecert(Base):
    __tablename__ = 'pt_ins_precert'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'financial_ins_id'], [u'financial_ins.pt_id', u'financial_ins.financial_ins_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    financial_ins_id = Column(Integer, primary_key=True, nullable=False)
    ins_precert_id = Column(Integer, primary_key=True, nullable=False)
    precert_no = Column(Unicode(20))
    status_ind = Column(Unicode(1))
    contact_first_name = Column(Unicode(30))
    contact_last_name = Column(Unicode(30))
    contact_tel = Column(Unicode(28))
    contact_tel_ext = Column(Unicode(10))
    contact_fax = Column(Unicode(28))
    precert_cmt = Column(UnicodeText(1073741823))
    valid_entry_ind = Column(Unicode(1))
    start_tstamp = Column(DateTime)
    end_tstamp = Column(DateTime)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    contact_tel_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    active_entry_ind = Column(Unicode(1))
    contact_fax_fmt_id = Column(Integer)

    contact_tel_fmt = relationship(u'FmtField')
    pt = relationship(u'FinancialIn')


class PtInsPrecertDet(Base):
    __tablename__ = 'pt_ins_precert_det'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'financial_ins_id', 'ins_precert_id'], [u'pt_ins_precert.pt_id', u'pt_ins_precert.financial_ins_id', u'pt_ins_precert.ins_precert_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    financial_ins_id = Column(Integer, primary_key=True, nullable=False)
    ins_precert_id = Column(Integer, primary_key=True, nullable=False)
    ins_precert_det_id = Column(Integer, primary_key=True, nullable=False)
    ins_precert_typ = Column(ForeignKey(u'ins_precert_typ.ins_precert_typ'), nullable=False)
    precert_req_ind = Column(Unicode(1), nullable=False)
    precert_rcv_ind = Column(Unicode(1), nullable=False)
    covered_amt = Column(Integer)
    precert_det_cmt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    remn_amt = Column(Integer)
    used_amt = Column(Integer)
    auto_adjust_ind = Column(Unicode(1))
    active_entry_ind = Column(Unicode(1))

    ins_precert_typ1 = relationship(u'InsPrecertTyp')
    pt = relationship(u'PtInsPrecert')


class PtInsPrecertDetHx(Base):
    __tablename__ = 'pt_ins_precert_det_hx'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    financial_ins_id = Column(Integer, primary_key=True, nullable=False)
    ins_precert_id = Column(Integer, primary_key=True, nullable=False)
    ins_precert_det_id = Column(Integer, primary_key=True, nullable=False)
    ins_precert_det_hx_id = Column(Integer, primary_key=True, nullable=False)
    visit_date = Column(DateTime)
    auto_adjust_ind = Column(Unicode(1))
    active_entry_ind = Column(Unicode(1))
    new_covered_amt = Column(Integer)
    new_used_amt = Column(Integer)
    covered_amt_chg = Column(Integer)
    used_amt_chg = Column(Integer)
    precert_det_chg_cmt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtInsPrecertHx(Base):
    __tablename__ = 'pt_ins_precert_hx'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    financial_ins_id = Column(Integer, primary_key=True, nullable=False)
    ins_precert_id = Column(Integer, primary_key=True, nullable=False)
    ins_precert_hx_id = Column(Integer, primary_key=True, nullable=False)
    precert_no = Column(Unicode(20))
    active_entry_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    start_tstamp = Column(DateTime)
    end_tstamp = Column(DateTime)
    precert_chg_cmt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtInstAcces(Base):
    __tablename__ = 'pt_inst_access'
    __table_args__ = (
        Index('nc1_pt_inst_access', 'inst_id', 'first_visit_date'),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False, index=True)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    active_visit_ind = Column(Unicode(1))
    first_visit_date = Column(DateTime)
    last_visit_date = Column(DateTime)
    restrict_access_ind = Column(Unicode(1))


class PtInstKey(Base):
    __tablename__ = 'pt_inst_key'
    __table_args__ = (
        Index('nc2_pt_inst_key', 'inst_id', 'pt_key_cd', 'pt_key_value', 'pt_id'),
        Index('nc3_pt_inst_key', 'inst_id', 'pt_key_cd', 'upper_pt_key_value'),
        Index('nc4_pt_inst_key', 'pt_id', 'inst_id', 'pt_key_cd', 'cur_value_ind', 'pt_key_value')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_inst_key_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    pt_key_cd = Column(ForeignKey(u'pt_key_cd.pt_key_cd'), nullable=False)
    pt_key_value = Column(Unicode(25), nullable=False)
    eff_date = Column(DateTime, nullable=False)
    expiry_date = Column(DateTime, nullable=False)
    cur_value_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    upper_pt_key_value = Column(Unicode(25), index=True)
    valid_entry_ind = Column(Unicode(1))
    pt_unfmt_key_value = Column(Unicode(25))

    pt_key_cd1 = relationship(u'PtKeyCd')


class PtInteraction(Base):
    __tablename__ = 'pt_interaction'

    pt_interaction_id = Column(Integer, primary_key=True)
    pt_interaction_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtIv(Base):
    __tablename__ = 'pt_iv'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id'], [u'pt_visit.pt_id', u'pt_visit.pt_visit_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_iv_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    iv_qstr_id = Column(ForeignKey(u'iv_qstr.iv_qstr_id'), nullable=False)
    iv_date = Column(DateTime, nullable=False)
    iv_start_date = Column(DateTime)
    iv_end_date = Column(DateTime)
    appr_userid = Column(Unicode(10))
    appr_inst_id = Column(Unicode(30))
    appr_tstamp = Column(DateTime)
    valid_entry_ind = Column(Unicode(1))
    status = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    iv_qstr = relationship(u'IvQstr')
    pt = relationship(u'PtVisit')


class PtIvAbsorption(Base):
    __tablename__ = 'pt_iv_absorption'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id', 'pt_iv_therapy_id'], [u'pt_iv_therapy.pt_id', u'pt_iv_therapy.pt_visit_id', u'pt_iv_therapy.pt_iv_therapy_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_iv_therapy_id = Column(Integer, primary_key=True, nullable=False)
    pt_iv_absorb_id = Column(Integer, primary_key=True, nullable=False)
    establish_tstamp = Column(DateTime, nullable=False)
    establish_seq = Column(Integer, nullable=False)
    establish_amount = Column(Integer, nullable=False)
    absorb_tstamp = Column(DateTime)
    absorb_amount = Column(Integer)
    appr_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtIvTherapy')


class PtIvResp(Base):
    __tablename__ = 'pt_iv_resp'
    __table_args__ = (
        ForeignKeyConstraint(['iv_qstr_id', 'iv_qstr_cat_id'], [u'iv_qstr_cat.iv_qstr_id', u'iv_qstr_cat.iv_qstr_cat_id']),
        ForeignKeyConstraint(['pt_id', 'pt_iv_id'], [u'pt_iv.pt_id', u'pt_iv.pt_iv_id'])
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_iv_id = Column(Integer, primary_key=True, nullable=False)
    iv_qstr_cat_id = Column(Integer, primary_key=True, nullable=False)
    iv_qstr_id = Column(Integer, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    resp = Column(Unicode(255))
    resp_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    iv_qstr = relationship(u'IvQstrCat')
    pt = relationship(u'PtIv')


class PtIvRespItem(Base):
    __tablename__ = 'pt_iv_resp_item'
    __table_args__ = (
        ForeignKeyConstraint(['iv_qstr_id', 'iv_qstr_cat_id', 'iv_cat_resp_id'], [u'iv_qstr_resp.iv_qstr_id', u'iv_qstr_resp.iv_qstr_cat_id', u'iv_qstr_resp.iv_cat_resp_id']),
        ForeignKeyConstraint(['pt_id', 'pt_iv_id', 'iv_qstr_cat_id'], [u'pt_iv_resp.pt_id', u'pt_iv_resp.pt_iv_id', u'pt_iv_resp.iv_qstr_cat_id'])
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_iv_id = Column(Integer, primary_key=True, nullable=False)
    iv_qstr_cat_id = Column(Integer, primary_key=True, nullable=False)
    iv_cat_resp_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    iv_qstr_id = Column(Integer, nullable=False)
    resp = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    iv_qstr = relationship(u'IvQstrResp')
    pt = relationship(u'PtIvResp')


class PtIvTherapy(Base):
    __tablename__ = 'pt_iv_therapy'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_iv_therapy_id = Column(Integer, primary_key=True, nullable=False)
    iv_fluid_name = Column(Unicode(60), nullable=False)
    iv_fluid_cd = Column(Unicode(10))
    gnrc_iv_fluid_name = Column(Unicode(60))
    iv_rate = Column(Integer)
    iv_rate_unit = Column(ForeignKey(u'unit_of_meas.uom'))
    infusion_typ = Column(ForeignKey(u'infusion_typ.infusion_typ'))
    special_instr = Column(UnicodeText(1073741823))
    agt_name = Column(Unicode(50))
    agt_dose = Column(Numeric(11, 4))
    agt_dose_unit = Column(ForeignKey(u'unit_of_meas.uom'))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    unit_of_mea = relationship(u'UnitOfMea', primaryjoin='PtIvTherapy.agt_dose_unit == UnitOfMea.uom')
    infusion_typ1 = relationship(u'InfusionTyp')
    unit_of_mea1 = relationship(u'UnitOfMea', primaryjoin='PtIvTherapy.iv_rate_unit == UnitOfMea.uom')


class PtKeyCd(Base):
    __tablename__ = 'pt_key_cd'

    pt_key_cd = Column(Integer, primary_key=True)
    pt_key_desc = Column(Unicode(40), nullable=False)
    pt_key_scope_typ = Column(ForeignKey(u'pt_key_scope_typ.pt_key_scope_typ'), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    pt_key_scope_typ1 = relationship(u'PtKeyScopeTyp')


t_pt_key_cd_culture = Table(
    'pt_key_cd_culture', metadata,
    Column('lookup_typ', Integer, nullable=False),
    Column('pt_key_desc', Unicode(40)),
    Column('culture_cd', Unicode(10), nullable=False)
)


class PtKeyScopeTyp(Base):
    __tablename__ = 'pt_key_scope_typ'

    pt_key_scope_typ = Column(Integer, primary_key=True)
    scope_typ_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


t_pt_key_scope_typ_culture = Table(
    'pt_key_scope_typ_culture', metadata,
    Column('lookup_typ', Integer, nullable=False),
    Column('scope_typ_desc', Unicode(30)),
    Column('culture_cd', Unicode(10), nullable=False)
)


t_pt_lab_asc = Table(
    'pt_lab_asc', metadata,
    Column('pt_id', Unicode(20), nullable=False),
    Column('pt_visit_id', Integer),
    Column('test_id', Integer),
    Column('pt_lab_asc_seq_no', Unicode(15), nullable=False),
    Column('asc_no', Unicode(15), nullable=False),
    Column('asc_datetime', DateTime, nullable=False),
    Column('pt_lab_asc_cmt', UnicodeText(1073741823)),
    Column('inst_id', Unicode(30), nullable=False),
    Column('trans_log_userid', Unicode(10), nullable=False),
    Column('trans_log_tstamp', DateTime, nullable=False),
    Column('trans_log_inst_id', Unicode(30), nullable=False),
    Column('trans_log_muserid', Unicode(10), nullable=False),
    Column('trans_log_mtstamp', DateTime, nullable=False),
    Column('trans_log_minst_id', Unicode(30), nullable=False),
    Column('trans_trf_tstamp', DateTime),
    Column('audtr_flag', Unicode(1)),
    Index('nc1_pt_lab_asc', 'pt_id', 'pt_visit_id', 'test_id'),
    Index('nc2_pt_lab_asc', 'asc_no', 'asc_datetime')
)


class PtLe(Base):
    __tablename__ = 'pt_les'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_dx_id'], [u'pt_dx_cncr.pt_id', u'pt_dx_cncr.pt_dx_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_les_id = Column(Integer, primary_key=True, nullable=False)
    pt_dx_id = Column(Integer)
    icdo_site_typ = Column(Integer)
    icdo_site_cd = Column(Unicode(3))
    icdo_site_seq = Column(Integer)
    cls_scheme_id = Column(Integer)
    les_desc = Column(Unicode(100))
    les_date = Column(DateTime)
    les_date_cd = Column(Integer)
    les_order_no = Column(Integer)
    meas_ind = Column(Unicode(1))
    track_ind = Column(Unicode(1))
    meas_dim = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))
    err_rsn_txt = Column(Unicode(255))

    pt = relationship(u'PtDxCncr')


class PtLesAsmt(Base):
    __tablename__ = 'pt_les_asmt'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'cncr_status_id'], [u'pt_cncr_status.pt_id', u'pt_cncr_status.cncr_status_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    les_asmt_id = Column(Integer, primary_key=True, nullable=False)
    pt_les_id = Column(Integer, nullable=False)
    asmt_date = Column(DateTime)
    size_x = Column(Numeric(4, 1))
    size_y = Column(Numeric(4, 1))
    size_z = Column(Numeric(4, 1))
    size_asmt = Column(Unicode(14))
    appr_ind = Column(Unicode(1))
    seq_no = Column(Integer)
    asmt_source = Column(Integer)
    cncr_status_id = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))
    err_rsn_txt = Column(Unicode(255))

    pt = relationship(u'PtCncrStatu')


class PtLesAsmtMh(Base):
    __tablename__ = 'pt_les_asmt_mh'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'cncr_status_id'], [u'pt_cncr_status.pt_id', u'pt_cncr_status.cncr_status_id']),
        ForeignKeyConstraint(['pt_id', 'pt_les_id'], [u'pt_les.pt_id', u'pt_les.pt_les_id'])
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    les_asmt_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    pt_les_id = Column(Integer, nullable=False)
    asmt_date = Column(DateTime)
    size_x = Column(Numeric(4, 1))
    size_y = Column(Numeric(4, 1))
    size_z = Column(Numeric(4, 1))
    size_asmt = Column(Unicode(14))
    appr_ind = Column(Unicode(1))
    seq_no = Column(Integer)
    asmt_source = Column(Integer)
    cncr_status_id = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    err_rsn_txt = Column(Unicode(255))

    pt = relationship(u'PtCncrStatu')
    pt1 = relationship(u'PtLe')


class PtLesMh(Base):
    __tablename__ = 'pt_les_mh'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_dx_id'], [u'pt_dx_cncr.pt_id', u'pt_dx_cncr.pt_dx_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_les_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    pt_dx_id = Column(Integer)
    icdo_site_typ = Column(Integer)
    icdo_site_cd = Column(Unicode(3))
    icdo_site_seq = Column(Integer)
    cls_scheme_id = Column(Integer)
    les_desc = Column(Unicode(100))
    les_date = Column(DateTime)
    les_date_cd = Column(Integer)
    les_order_no = Column(Integer)
    meas_ind = Column(Unicode(1))
    track_ind = Column(Unicode(1))
    meas_dim = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    err_rsn_txt = Column(Unicode(255))

    pt = relationship(u'PtDxCncr')


class PtListQuery(Base):
    __tablename__ = 'pt_list_query'

    pt_list_query_id = Column(Integer, primary_key=True)
    pt_list_query_desc = Column(Unicode(250), nullable=False)
    pt_list_query_typ = Column(Integer, nullable=False)
    include_deceased_ind = Column(Unicode(1), nullable=False)
    last_run_date = Column(DateTime)
    last_run_userid = Column(Unicode(10))
    last_run_inst_id = Column(Unicode(30))
    last_run_elapsed_time = Column(Integer)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtListQueryCriterion(Base):
    __tablename__ = 'pt_list_query_criteria'

    pt_list_query_criteria_id = Column(Integer, primary_key=True)
    pt_list_query_id = Column(ForeignKey(u'pt_list_query.pt_list_query_id'), nullable=False)
    criteria_typ = Column(Integer, nullable=False)
    criteria_comparison_operator = Column(Unicode(7), nullable=False)
    criteria_logical_operator = Column(Unicode(3), nullable=False)
    criteria_priority = Column(Integer, nullable=False)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt_list_query = relationship(u'PtListQuery')


class PtListQueryCriteriaValue(Base):
    __tablename__ = 'pt_list_query_criteria_value'

    pt_list_query_criteria_id = Column(ForeignKey(u'pt_list_query_criteria.pt_list_query_criteria_id'), primary_key=True, nullable=False)
    criteria_value_typ = Column(Integer, primary_key=True, nullable=False)
    criteria_value = Column(Unicode(150), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt_list_query_criteria = relationship(u'PtListQueryCriterion')


class PtMedHx(Base):
    __tablename__ = 'pt_med_hx'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_med_id = Column(Integer, primary_key=True, nullable=False)
    prob_desc = Column(Unicode(60))
    prob_id = Column(Integer)
    prob_details = Column(UnicodeText(1073741823))
    dx_date = Column(DateTime)
    active_dx_ind = Column(Unicode(1))
    tx_ind = Column(Unicode(1))
    tx_desc = Column(Unicode(100))
    icd_cd = Column(Unicode(16))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    pt_dx_id = Column(Integer)
    cls_scheme_id = Column(Integer)
    med_date_cd = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))
    procedure_age = Column(Integer)


class PtMedHxMh(Base):
    __tablename__ = 'pt_med_hx_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_med_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    prob_desc = Column(Unicode(60))
    prob_id = Column(Integer)
    prob_details = Column(UnicodeText(1073741823))
    dx_date = Column(DateTime)
    active_dx_ind = Column(Unicode(1))
    tx_ind = Column(Unicode(1))
    tx_desc = Column(Unicode(100))
    icd_cd = Column(Unicode(16))
    valid_entry_ind = Column(Unicode(1))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    pt_dx_id = Column(Integer)
    cls_scheme_id = Column(Integer)
    med_date_cd = Column(Integer)
    procedure_age = Column(Integer)


class PtMerge(Base):
    __tablename__ = 'pt_merge'

    pt_id_merged = Column(Unicode(20), primary_key=True)
    pt_id_master = Column(Unicode(20), nullable=False)
    pt_id_duplicate = Column(Unicode(20), nullable=False)
    date_merged = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtMuScore(Base):
    __tablename__ = 'pt_mu_score'

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    compliance_prd_id = Column(Integer, primary_key=True, nullable=False)
    elig_ind = Column(Unicode(1))
    demographics_ind = Column(Unicode(1))
    gender_ind = Column(Unicode(1))
    race_ind = Column(Unicode(1))
    ethnicity_ind = Column(Unicode(1))
    dob_ind = Column(Unicode(1))
    dob = Column(DateTime)
    dod_ind = Column(Unicode(1))
    lang_ind = Column(Unicode(1))
    prob_ind = Column(Unicode(1))
    med_ind = Column(Unicode(1))
    actual_med_ind = Column(Unicode(1))
    allergy_ind = Column(Unicode(1))
    smoking_info_req_ind = Column(Unicode(1))
    smoking_ind = Column(Unicode(1))
    vitals_info_req_ind = Column(Unicode(1))
    vitals_ind = Column(Unicode(1))
    ht_ind = Column(Unicode(1))
    wt_ind = Column(Unicode(1))
    systolic_ind = Column(Unicode(1))
    diastolic_ind = Column(Unicode(1))
    bmi_ind = Column(Unicode(1))
    portal_acct_ind = Column(Unicode(1))
    portal_send_ind = Column(Unicode(1))
    education_ind = Column(Unicode(1))
    med_recon_ind = Column(Unicode(1))
    rem_info_req_ind = Column(Unicode(1))
    rem_sent_ind = Column(Unicode(1))
    score_last_updated = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'Pt')


class PtName(Base):
    __tablename__ = 'pt_name'
    __table_args__ = (
        ForeignKeyConstraint(['name_cd', 'stkh_cd'], [u'name_cd.name_cd', u'name_cd.stkh_cd']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_name_id = Column(Integer, primary_key=True, nullable=False)
    first_name = Column(Unicode(30), nullable=False)
    middle_name = Column(Unicode(30))
    last_name = Column(Unicode(30), nullable=False)
    name_cd = Column(Unicode(1), nullable=False)
    stkh_cd = Column(Unicode(1))
    cur_entry_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    upper_last_name = Column(Unicode(30), index=True)
    pt_last_name_sdx = Column(Unicode(6), index=True)
    pt_first_name_sdx = Column(Unicode(6))

    name_cd1 = relationship(u'NameCd')


class PtOption(Base):
    __tablename__ = 'pt_option'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id'], [u'pt_visit.pt_id', u'pt_visit.pt_visit_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_option_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer)
    tp_name = Column(Unicode(20))
    tp_vers_no = Column(Unicode(10))
    phase_seq_no = Column(Integer)
    date_tp_init = Column(DateTime)
    rule_cls = Column(Integer, nullable=False)
    option_author = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    option_status = Column(Integer)
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtVisit')


class PtOptionComp(Base):
    __tablename__ = 'pt_option_comp'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_option_id'], [u'pt_option.pt_id', u'pt_option.pt_option_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_option_id = Column(Integer, primary_key=True, nullable=False)
    option_seq_no = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer)
    inst_id = Column(Unicode(30), nullable=False)
    rule_id = Column(Integer, nullable=False)
    rule_id_desc = Column(Unicode(40), nullable=False)
    comp_typ = Column(Unicode(1), nullable=False)
    comp_seq_no = Column(Integer, nullable=False)
    comp_status = Column(Integer)
    conflict_pref = Column(Unicode(1))
    error_status = Column(Integer)
    priority = Column(Numeric(5, 2))
    obj_typ = Column(Integer)
    obj_attr_typ = Column(Integer)
    obj_id = Column(Integer)
    comp_obj = Column(Unicode(50))
    comp_obj_id_1 = Column(Integer)
    comp_obj_id_2 = Column(Integer)
    comp_obj_desc = Column(Unicode(100))
    comp_attr = Column(Unicode(50))
    action = Column(Unicode(20))
    comp_oper = Column(Integer)
    comp_value = Column(Unicode(100))
    comp_value_typ = Column(Integer)
    uom = Column(Integer)
    which_value = Column(Integer)
    how_occurs = Column(Integer)
    cnt_inst_1 = Column(Integer)
    cnt_inst_2 = Column(Integer)
    ref_prd = Column(Integer)
    ref_prd_unit = Column(Integer)
    ref_prd_1 = Column(Integer)
    ref_prd_2 = Column(Numeric(11, 4))
    dur_amt = Column(Numeric(11, 4))
    dur_unit = Column(Integer)
    ref_rgm = Column(Unicode(30))
    ref_rgm_no = Column(Integer)
    comp_desc = Column(UnicodeText(1073741823))
    rx_dose = Column(Numeric(11, 4))
    short_desc = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    ref_prd_day = Column(Integer)
    dur_day = Column(Integer)
    pln_dose = Column(Numeric(11, 4))
    baseline_dose = Column(Numeric(11, 4))
    date_tp_init = Column(DateTime)

    pt = relationship(u'PtOption')


class PtOptionTest(Base):
    __tablename__ = 'pt_option_test'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_option_id = Column(Integer, primary_key=True, nullable=False)
    pt_result_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer)
    test_id = Column(Integer)
    test_result_group_id = Column(Integer)
    test_result_id = Column(Integer)
    typ_of_test = Column(Unicode(20))
    comp_name = Column(Unicode(30))
    next_inf_ind = Column(Unicode(1))
    result_typ_expect = Column(Unicode(1))
    result_typ_actual = Column(Unicode(1))
    was_inf_ind = Column(Unicode(1))
    result_present_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtOptionTrAsmt(Base):
    __tablename__ = 'pt_option_tr_asmt'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_option_id = Column(Integer, primary_key=True, nullable=False)
    pt_result_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer)
    pt_tr_asmt_id = Column(Integer)
    tr_typ = Column(Unicode(30))
    tr_comp_name = Column(Unicode(30))
    next_inf_ind = Column(Unicode(1))
    result_typ_expect = Column(Unicode(1))
    result_typ_actual = Column(Unicode(1))
    was_inf_ind = Column(Unicode(1))
    result_present_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    tr_sub_comp_name = Column(Unicode(60))


class PtOverride(Base):
    __tablename__ = 'pt_override'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_override_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer)
    pt_actual_id = Column(Integer)
    override_typ = Column(Integer)
    rsn_id = Column(Integer)
    rsn_inst_id = Column(Unicode(30))
    rsn_desc = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtPharm(Base):
    __tablename__ = 'pt_pharm'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pharm_id = Column(Unicode(7), primary_key=True, nullable=False)
    use_desc = Column(Unicode(100))
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    primary_ind = Column(Unicode(1), nullable=False, server_default=text("('N')"))


class PtPic(Base):
    __tablename__ = 'pt_pic'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pic_id = Column(Integer, primary_key=True, nullable=False)
    pic = Column(LargeBinary)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    cur_entry_ind = Column(Unicode(1))
    pic_tstamp = Column(DateTime)


class PtPnComp(Base):
    __tablename__ = 'pt_pn_comps'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    visit_note_id = Column(Integer, primary_key=True, nullable=False)
    comp_seq_no = Column(Integer, primary_key=True, nullable=False)
    tag_name = Column(Unicode(50), nullable=False)
    tag_comp_name = Column(Unicode(50), nullable=False)
    tag_comp_seq_no = Column(Integer)
    tag_text_len = Column(Integer, nullable=False)
    valid_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PtPrefer(Base):
    __tablename__ = 'pt_prefer'

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    pt_prefer_typ = Column(ForeignKey(u'base_cls_typ.base_cls_typ'), primary_key=True, nullable=False)
    pt_prefer_value_typ = Column(ForeignKey(u'base_typ.base_typ'))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))

    pt = relationship(u'Pt')
    base_cls_typ = relationship(u'BaseClsTyp')
    base_typ = relationship(u'BaseTyp')


class PtProcedure(Base):
    __tablename__ = 'pt_procedure'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    procedure_id = Column(Integer, primary_key=True, nullable=False)
    icd_cd = Column(Unicode(16))
    procedure_date = Column(DateTime)
    procedure_name = Column(Unicode(250))
    valid_entry = Column(Unicode(1))
    procedure_desc = Column(UnicodeText(1073741823))
    procedure_outcome = Column(UnicodeText(1073741823))
    date_approx_ind = Column(Unicode(1))
    procedure_date_cd = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    proc_id = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))
    procedure_age = Column(Integer)


class PtProcedureMh(Base):
    __tablename__ = 'pt_procedure_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    procedure_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    icd_cd = Column(Unicode(16))
    procedure_date = Column(DateTime)
    procedure_name = Column(Unicode(250))
    valid_entry = Column(Unicode(1))
    procedure_desc = Column(UnicodeText(1073741823))
    procedure_outcome = Column(UnicodeText(1073741823))
    date_approx_ind = Column(Unicode(1))
    procedure_date_cd = Column(Integer)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    proc_id = Column(Integer)
    procedure_age = Column(Integer)


class PtProf(Base):
    __tablename__ = 'pt_prof'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'userid_link'], [u'userid.inst_id', u'userid.userid']),
        Index('nc1_pt_prof', 'inst_id', 'userid_link')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid_link = Column(Unicode(10), primary_key=True, nullable=False)
    prof_reltn = Column(ForeignKey(u'prof_reltn.prof_reltn'), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    stkh_conv_flag = Column(Unicode(1))

    inst = relationship(u'Userid')
    prof_reltn1 = relationship(u'ProfReltn')


class PtProfExternal(Base):
    __tablename__ = 'pt_prof_external'

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    pt_prof_external_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    ref_orgnztn_id = Column(Integer, nullable=False)
    ref_contact_id = Column(Integer)
    prof_reltn = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    stkh_conv_flag = Column(Unicode(1))

    pt = relationship(u'Pt')


class PtProvider(Base):
    __tablename__ = 'pt_provider'
    __table_args__ = (
        Index('nc2_pt_provider', 'org_stkh_id', 'org_role_typ'),
        Index('nc1_pt_provider', 'provider_stkh_id', 'provider_role_typ')
    )

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    pt_provider_id = Column(Integer, primary_key=True, nullable=False)
    provider_stkh_id = Column(ForeignKey(u'stkh.stkh_id'))
    provider_role_typ = Column(Integer)
    org_stkh_id = Column(ForeignKey(u'stkh.stkh_id'))
    org_role_typ = Column(Integer)
    prof_reltn_typ = Column(Integer)
    ref_cd = Column(Unicode(1), nullable=False)
    internal_ind = Column(Unicode(1), nullable=False)
    ref_date = Column(DateTime)
    eff_date = Column(DateTime, nullable=False)
    end_date = Column(DateTime)
    end_reason_cd = Column(Unicode(3))
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    send_corsp_ind = Column(Unicode(1))
    ref_note = Column(Unicode(255))
    ref_internal_stkh_id = Column(Unicode(20))
    valid_entry_ind = Column(Unicode(1))

    org_stkh = relationship(u'Stkh', primaryjoin='PtProvider.org_stkh_id == Stkh.stkh_id')
    provider_stkh = relationship(u'Stkh', primaryjoin='PtProvider.provider_stkh_id == Stkh.stkh_id')
    pt = relationship(u'Pt')


class PtProviderMu(Base):
    __tablename__ = 'pt_provider_mu'

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    stkh_id = Column(ForeignKey(u'stkh.stkh_id'), primary_key=True, nullable=False)
    compliance_prd_id = Column(ForeignKey(u'compliance_prd.compliance_prd_id'), primary_key=True, nullable=False)
    no_visits = Column(Integer)
    elig_pt_ind = Column(Unicode(1))
    care_trans_in_ind = Column(Unicode(1))
    care_trans_out_ind = Column(Unicode(1))
    cpoe_ind = Column(Unicode(1))
    lab_ind = Column(Unicode(1))
    no_lab_ord = Column(Integer)
    no_lab_result = Column(Integer)
    erx_ind = Column(Unicode(1))
    no_erx_ord = Column(Integer)
    no_erx_sent = Column(Integer)
    visit_sum_ind = Column(Unicode(1))
    no_visit_sum_rqst = Column(Integer)
    no_visit_sum_provided = Column(Integer)
    info_rqst_ind = Column(Unicode(1))
    no_info_rqst = Column(Integer)
    no_info_rqst_provided = Column(Integer)
    care_sum_ind = Column(Unicode(1))
    no_care_sum_rqst = Column(Integer)
    no_care_sum_provided = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    compliance_prd = relationship(u'CompliancePrd')
    pt = relationship(u'Pt')
    stkh = relationship(u'Stkh')


class PtQm(Base):
    __tablename__ = 'pt_qm'

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    qmi_id = Column(ForeignKey(u'qm_instance.qmi_id'), primary_key=True, nullable=False)
    qmcp_id = Column(ForeignKey(u'qm_criteria_part.qmcp_id'), primary_key=True, nullable=False)
    met_ind = Column(Unicode(1))
    override_tstamp = Column(DateTime)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'Pt')
    qmcp = relationship(u'QmCriteriaPart')
    qmi = relationship(u'QmInstance')


class PtRadFieldDesc(Base):
    __tablename__ = 'pt_rad_field_desc'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_rad_order_id = Column(Integer, primary_key=True, nullable=False)
    rad_field_no = Column(Integer, primary_key=True, nullable=False)
    rad_field_desc = Column(Unicode(55), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtRadFieldResult(Base):
    __tablename__ = 'pt_rad_field_result'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_rad_rec_id'], [u'pt_rad_rec.pt_id', u'pt_rad_rec.pt_rad_rec_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_rad_field_result_id = Column(Integer, primary_key=True, nullable=False)
    pt_rad_order_id = Column(Integer, nullable=False)
    pt_rad_rec_id = Column(Integer, nullable=False)
    fraction_no = Column(Integer, nullable=False)
    field_no = Column(Integer, nullable=False)
    appr_ind = Column(Unicode(1), nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    appr_tstamp = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtRadRec')


class PtRadItem(Base):
    __tablename__ = 'pt_rad_item'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id', 'pt_rad_order_id'], [u'pt_rad_order.pt_id', u'pt_rad_order.pt_visit_id', u'pt_rad_order.pt_rad_order_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_rad_order_id = Column(Integer, primary_key=True, nullable=False)
    pt_rad_item_id = Column(Integer, primary_key=True, nullable=False)
    rad_comp = Column(Unicode(50), nullable=False)
    rad_comp_typ = Column(Integer, nullable=False)
    rad_rec_typ = Column(ForeignKey(u'rad_rec_typ.rad_rec_typ'), nullable=False)
    uom = Column(Integer)
    uom_desc = Column(Unicode(40))
    rad_order_section = Column(Unicode(50))
    total_ind = Column(Unicode(1))
    field_total_string = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtRadOrder')
    rad_rec_typ1 = relationship(u'RadRecTyp')


class PtRadItemDetail(Base):
    __tablename__ = 'pt_rad_item_detail'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id', 'pt_rad_order_id', 'pt_rad_item_id'], [u'pt_rad_item.pt_id', u'pt_rad_item.pt_visit_id', u'pt_rad_item.pt_rad_order_id', u'pt_rad_item.pt_rad_item_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_rad_order_id = Column(Integer, primary_key=True, nullable=False)
    pt_rad_item_detail_id = Column(Integer, primary_key=True, nullable=False)
    pt_rad_item_id = Column(Integer, nullable=False)
    instance_desc = Column(Unicode(25))
    field_total_string = Column(Unicode(255))
    field_total = Column(Numeric(11, 4))
    active_entry_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtRadItem')


class PtRadOrder(Base):
    __tablename__ = 'pt_rad_order'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_rad_order_id = Column(Integer, primary_key=True, nullable=False)
    rad_recs_per_day = Column(Integer, nullable=False)
    rad_fields = Column(Integer, nullable=False)
    rad_recs = Column(Integer, nullable=False)
    rad_order_name = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    rad_order_date = Column(DateTime)
    rad_res_appr_ind = Column(Unicode(1))
    rad_order_appr_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    setup_instr = Column(UnicodeText(1073741823))
    order_on_mon_ind = Column(Unicode(1))
    order_on_tue_ind = Column(Unicode(1))
    order_on_wed_ind = Column(Unicode(1))
    order_on_thu_ind = Column(Unicode(1))
    order_on_fri_ind = Column(Unicode(1))
    order_on_sat_ind = Column(Unicode(1))
    order_on_sun_ind = Column(Unicode(1))
    rad_order_desc = Column(Unicode(25))
    placer_order_no = Column(Unicode(20))
    rad_source_cd = Column(Unicode(1))
    course_no = Column(Integer)
    fraction_mode_cd = Column(Unicode(1))
    discontinue_cmt = Column(Unicode(255))
    course_desc = Column(Unicode(30))


class PtRadRec(Base):
    __tablename__ = 'pt_rad_rec'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id', 'pt_rad_order_id'], [u'pt_rad_order.pt_id', u'pt_rad_order.pt_visit_id', u'pt_rad_order.pt_rad_order_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_rad_rec_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    pt_rad_order_id = Column(Integer, nullable=False)
    pt_rad_rec_no = Column(Integer, nullable=False)
    appr_ind = Column(Unicode(1), nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    rad_rec_cmt = Column(UnicodeText(1073741823))
    rad_rec_date = Column(DateTime)
    rad_perf_tstamp = Column(DateTime)
    rad_appr_tstamp = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    fraction_no = Column(Integer)

    pt = relationship(u'PtRadOrder')


class PtRadResult(Base):
    __tablename__ = 'pt_rad_result'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_rad_rec_id'], [u'pt_rad_rec.pt_id', u'pt_rad_rec.pt_rad_rec_id']),
        ForeignKeyConstraint(['pt_id', 'pt_visit_id', 'pt_rad_order_id', 'pt_rad_item_id'], [u'pt_rad_item.pt_id', u'pt_rad_item.pt_visit_id', u'pt_rad_item.pt_rad_order_id', u'pt_rad_item.pt_rad_item_id']),
        Index('nc1_pt_rad_result', 'pt_id', 'pt_visit_id')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_rad_result_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    pt_rad_order_id = Column(Integer, nullable=False)
    pt_rad_item_id = Column(Integer, nullable=False)
    pt_rad_rec_id = Column(Integer, nullable=False)
    rad_field_no = Column(Integer, nullable=False)
    rad_comp_typ = Column(Integer, nullable=False)
    rad_result = Column(Unicode(25))
    rad_result_text = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtRadRec')
    pt1 = relationship(u'PtRadItem')


class PtRadService(Base):
    __tablename__ = 'pt_rad_service'
    __table_args__ = (
        ForeignKeyConstraint(['pt_rad_hcp_inst_id', 'pt_rad_hcp_id'], [u'hcp_name.hcp_inst_id', u'hcp_name.hcp_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_rad_service_id = Column(Integer, primary_key=True, nullable=False)
    pt_rad_hcp_inst_id = Column(Unicode(30), nullable=False)
    pt_rad_hcp_id = Column(Integer, nullable=False)
    pt_rad_order_id = Column(Integer, nullable=False)
    field_mode_ind = Column(Unicode(1), nullable=False)
    fraction_no = Column(Integer)
    field_no = Column(Integer)
    service_date = Column(DateTime)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt_rad_hcp_inst = relationship(u'HcpName')


class PtRef(Base):
    __tablename__ = 'pt_ref'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_ref_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    ref_date = Column(DateTime, nullable=False)
    ref_orgnztn_id = Column(Integer, nullable=False)
    ref_contact_id = Column(Integer)
    ref_from_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    stkh_conv_flag = Column(Unicode(1))


class PtResp(Base):
    __tablename__ = 'pt_resp'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id', 'qstr_name', 'qstr_id'], [u'pt_resp_hdr.pt_id', u'pt_resp_hdr.pt_visit_id', u'pt_resp_hdr.qstr_name', u'pt_resp_hdr.qstr_id']),
        Index('nc2_pt_resp', 'qstr_name', 'question_id')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    qstr_name = Column(Unicode(20), primary_key=True, nullable=False)
    qstr_id = Column(Integer, primary_key=True, nullable=False)
    question_id = Column(Integer, primary_key=True, nullable=False)
    resp = Column(Unicode(255))
    resp_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    resp_list_txt = Column(Unicode(255))
    resp_pick_1_ind = Column(Unicode(1))
    resp_pick_2_ind = Column(Unicode(1))
    resp_pick_3_ind = Column(Unicode(1))
    resp_pick_4_ind = Column(Unicode(1))
    resp_pick_5_ind = Column(Unicode(1))
    resp_pick_6_ind = Column(Unicode(1))
    resp_pick_7_ind = Column(Unicode(1))
    resp_pick_8_ind = Column(Unicode(1))
    resp_pick_9_ind = Column(Unicode(1))
    resp_pick_10_ind = Column(Unicode(1))
    resp_pick_11_ind = Column(Unicode(1))
    resp_pick_12_ind = Column(Unicode(1))
    resp_pick_13_ind = Column(Unicode(1))
    resp_pick_14_ind = Column(Unicode(1))
    resp_pick_15_ind = Column(Unicode(1))
    resp_datetime = Column(DateTime, index=True)
    corrected_entry_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    question_no = Column(Unicode(5))
    app_cd = Column(Unicode(10))
    revision_no = Column(Integer, server_default=text("((1))"))

    pt = relationship(u'PtRespHdr')


class PtRespHdr(Base):
    __tablename__ = 'pt_resp_hdr'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id'], [u'pt_visit.pt_id', u'pt_visit.pt_visit_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    qstr_name = Column(Unicode(20), primary_key=True, nullable=False)
    qstr_id = Column(Integer, primary_key=True, nullable=False)
    appr_flag = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    hx_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    appr_tstamp = Column(DateTime)
    appr_userid = Column(Unicode(10))
    appr_inst_id = Column(Unicode(30))
    qstr_tstamp = Column(DateTime)
    author_stkh_id = Column(Unicode(20))
    pt_entered_ind = Column(Unicode(1))
    app_cd = Column(Unicode(10))
    revision_no = Column(Integer, server_default=text("((1))"))
    err_rsn_txt = Column(Unicode(255))

    pt = relationship(u'PtVisit')


class PtRespHdrMh(Base):
    __tablename__ = 'pt_resp_hdr_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    qstr_name = Column(Unicode(20), primary_key=True, nullable=False)
    qstr_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    appr_flag = Column(Unicode(1), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    hx_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    appr_tstamp = Column(DateTime)
    appr_userid = Column(Unicode(10))
    appr_inst_id = Column(Unicode(30))
    qstr_tstamp = Column(DateTime)
    author_stkh_id = Column(Unicode(20))
    pt_entered_ind = Column(Unicode(1))
    app_cd = Column(Unicode(10))
    err_rsn_txt = Column(Unicode(255))


class PtRespMh(Base):
    __tablename__ = 'pt_resp_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    qstr_name = Column(Unicode(20), primary_key=True, nullable=False)
    qstr_id = Column(Integer, primary_key=True, nullable=False)
    question_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    resp = Column(Unicode(255))
    resp_txt = Column(UnicodeText(1073741823))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    resp_list_txt = Column(Unicode(255))
    resp_pick_1_ind = Column(Unicode(1))
    resp_pick_2_ind = Column(Unicode(1))
    resp_pick_3_ind = Column(Unicode(1))
    resp_pick_4_ind = Column(Unicode(1))
    resp_pick_5_ind = Column(Unicode(1))
    resp_pick_6_ind = Column(Unicode(1))
    resp_pick_7_ind = Column(Unicode(1))
    resp_pick_8_ind = Column(Unicode(1))
    resp_pick_9_ind = Column(Unicode(1))
    resp_pick_10_ind = Column(Unicode(1))
    resp_pick_11_ind = Column(Unicode(1))
    resp_pick_12_ind = Column(Unicode(1))
    resp_pick_13_ind = Column(Unicode(1))
    resp_pick_14_ind = Column(Unicode(1))
    resp_pick_15_ind = Column(Unicode(1))
    resp_datetime = Column(DateTime)
    corrected_entry_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    question_no = Column(Unicode(5))
    app_cd = Column(Unicode(10))


class PtSelectConfig(Base):
    __tablename__ = 'pt_select_config'

    pt_select_config_id = Column(Integer, primary_key=True)
    collapse_hl7_row_ind = Column(Unicode(1), nullable=False)
    pt_submit_all_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PtSeq(Base):
    __tablename__ = 'pt_seq'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    seq_typ = Column(Unicode(20), primary_key=True, nullable=False)
    seq_no = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtSocHx(Base):
    __tablename__ = 'pt_soc_hx'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_soc_hx_id = Column(Integer, primary_key=True, nullable=False)
    smoking_use_cd = Column(Unicode(1))
    smoking_yrs = Column(Integer)
    smoking_packs_per_day = Column(Numeric(3, 1))
    smoking_yrs_quit = Column(Integer)
    alcohol_use_cd = Column(Unicode(1))
    alcohol_days_per_week = Column(Integer)
    alcohol_use_per_day = Column(Integer)
    alcohol_yrs_quit = Column(Integer)
    hazard_mat_contact_ind = Column(Unicode(1))
    pt_soc_hx_cmt = Column(Unicode(255))
    haz_material_desc = Column(Unicode(255))
    prod_use_desc = Column(Unicode(255))
    support_desc = Column(Unicode(255))
    diet_desc = Column(Unicode(255))
    activity_desc = Column(Unicode(255))
    smoking_desc = Column(Unicode(100))
    alcohol_desc = Column(Unicode(100))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))


class PtSocHxDetail(Base):
    __tablename__ = 'pt_soc_hx_detail'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    soc_hx_detail_id = Column(Integer, primary_key=True, nullable=False)
    base_cls_typ = Column(Integer, nullable=False)
    soc_hx_detail = Column(Unicode(100))
    soc_hx_detail_cmt = Column(UnicodeText(1073741823))
    active_entry_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    duration = Column(Integer)
    duration_unit = Column(Integer)
    time_unit = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))


class PtSocHxDetailMh(Base):
    __tablename__ = 'pt_soc_hx_detail_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    soc_hx_detail_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    base_cls_typ = Column(Integer, nullable=False)
    soc_hx_detail = Column(Unicode(100))
    soc_hx_detail_cmt = Column(UnicodeText(1073741823))
    active_entry_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    duration = Column(Integer)
    duration_unit = Column(Integer)
    time_unit = Column(Integer)


class PtSocHxMh(Base):
    __tablename__ = 'pt_soc_hx_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_soc_hx_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    smoking_use_cd = Column(Unicode(1))
    smoking_yrs = Column(Integer)
    smoking_packs_per_day = Column(Numeric(3, 1))
    smoking_yrs_quit = Column(Integer)
    alcohol_use_cd = Column(Unicode(1))
    alcohol_days_per_week = Column(Integer)
    alcohol_use_per_day = Column(Integer)
    alcohol_yrs_quit = Column(Integer)
    hazard_mat_contact_ind = Column(Unicode(1))
    pt_soc_hx_cmt = Column(Unicode(255))
    haz_material_desc = Column(Unicode(255))
    prod_use_desc = Column(Unicode(255))
    support_desc = Column(Unicode(255))
    diet_desc = Column(Unicode(255))
    activity_desc = Column(Unicode(255))
    smoking_desc = Column(Unicode(100))
    alcohol_desc = Column(Unicode(100))
    valid_entry_ind = Column(Unicode(1))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtStatu(Base):
    __tablename__ = 'pt_status'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_status_id = Column(Integer, primary_key=True, nullable=False)
    pt_status_typ_id = Column(ForeignKey(u'pt_status_typ.pt_status_typ_id'), nullable=False)
    status_date = Column(DateTime, nullable=False)
    status_note = Column(UnicodeText(1073741823))
    cur_value_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt_status_typ = relationship(u'PtStatusTyp')


class PtStatusTyp(Base):
    __tablename__ = 'pt_status_typ'

    pt_status_typ_id = Column(Integer, primary_key=True)
    pt_status_typ_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtTp(Base):
    __tablename__ = 'pt_tp'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'userid_link'], [u'userid.inst_id', u'userid.userid']),
    )

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    tp_name = Column(Unicode(20))
    tp_vers_no = Column(Unicode(10))
    time_tp_init = Column(DateTime, nullable=False)
    clinic_trial_flag = Column(Unicode(1))
    date_tp_ended = Column(DateTime)
    rights_ack = Column(Unicode(1))
    organ_donor = Column(Unicode(1))
    rls_of_info_date = Column(DateTime)
    consent_date = Column(DateTime)
    inst_id = Column(Unicode(30), nullable=False)
    userid_link = Column(Unicode(10), nullable=False)
    protocol_id = Column(Unicode(20))
    consent_req = Column(Unicode(1))
    pln_typ = Column(Integer)
    site = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    pt_study_no = Column(Unicode(20))
    dt_reg = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)
    valid_entry_ind = Column(Unicode(1))
    pt_study_no_key_id = Column(Integer)

    inst = relationship(u'Userid')
    pt = relationship(u'Pt')


class PtTpActionActual(Base):
    __tablename__ = 'pt_tp_action_actual'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_event_id'], [u'pt_tp_cycle_action.pt_id', u'pt_tp_cycle_action.pt_event_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_event_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_actual_id = Column(Integer, primary_key=True, nullable=False)
    event_typ = Column(Unicode(1), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtTpCycleAction')


class PtTpActionAgt(Base):
    __tablename__ = 'pt_tp_action_agt'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'admn_id'], [u'therapy_item_admn.pt_id', u'therapy_item_admn.admn_id']),
        ForeignKeyConstraint(['pt_id', 'pt_event_id'], [u'pt_tp_cycle_action.pt_id', u'pt_tp_cycle_action.pt_event_id']),
        Index('nc1_pt_tp_action_agt', 'pt_id', 'pt_visit_id', 'rx_id', 'item_no')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_action_id = Column(Integer, primary_key=True, nullable=False)
    pt_event_id = Column(Integer, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    rx_id = Column(Integer, nullable=False)
    item_no = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    admn_id = Column(Integer)

    pt = relationship(u'TherapyItemAdmn')
    pt1 = relationship(u'PtTpCycleAction')


class PtTpAgtCourse(Base):
    __tablename__ = 'pt_tp_agt_course'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'date_tp_init', 'intv_id'], [u'pt_tp_agt.pt_id', u'pt_tp_agt.date_tp_init', u'pt_tp_agt.intv_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    course_no = Column(Integer, primary_key=True, nullable=False)
    admn_dose = Column(Numeric(11, 4))
    admn_frq_cd = Column(Integer)
    admn_frq_x = Column(Integer)
    admn_frq_unit = Column(Integer)
    admn_dur = Column(Integer)
    admn_dur_unit = Column(Integer)
    prn_ind = Column(Unicode(1))
    prn_repeat_ind = Column(Unicode(1))
    dow_frq_unit = Column(Integer)
    week_frq_unit = Column(Integer)
    course_desc = Column(Unicode(255))
    dispense_qty = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    dispense_vol = Column(Numeric(11, 4))
    dispense_unit = Column(Integer)
    admn_frq_upper_x = Column(Integer)
    prn_reason_typ = Column(Integer)

    pt = relationship(u'PtTpAgt')


class PtTpCycleAction(Base):
    __tablename__ = 'pt_tp_cycle_action'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'date_tp_init', 'order_id'], [u'pt_tp_order.pt_id', u'pt_tp_order.date_tp_init', u'pt_tp_order.order_id']),
        ForeignKeyConstraint(['pt_id', 'date_tp_init', 'phase_seq_no', 'cycle_no', 'cycle_day', 'repeat_no'], [u'pt_tp_tperiod.pt_id', u'pt_tp_tperiod.date_tp_init', u'pt_tp_tperiod.phase_seq_no', u'pt_tp_tperiod.cycle_no', u'pt_tp_tperiod.tperiod_id', u'pt_tp_tperiod.repeat_no']),
        Index('nc1_pt_tp_cycle_action', 'pt_id', 'date_tp_init', 'intv_id'),
        Index('nc4_pt_tp_cycle_action', 'pt_id', 'date_tp_init', 'phase_seq_no', 'cycle_no', 'cycle_day', 'repeat_no'),
        Index('nc3_pt_tp_cycle_action', 'pt_id', 'pt_vrtn_source_id'),
        Index('nc2_pt_tp_cycle_action', 'pt_id', 'date_tp_init', 'order_id')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_event_id = Column(Integer, primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), nullable=False)
    tp_vers_no = Column(Unicode(10))
    phase_seq_no = Column(Integer, nullable=False)
    date_tp_init = Column(DateTime)
    cycle_no = Column(Integer, nullable=False)
    cycle_day = Column(Integer, nullable=False)
    event_typ = Column(Unicode(1), nullable=False)
    repeat_no = Column(Integer)
    intv_id = Column(Integer)
    event_status = Column(Integer)
    charted_tstamp = Column(DateTime)
    completed_tstamp = Column(DateTime)
    notified_ind = Column(Unicode(1))
    rqstn_ind = Column(Unicode(1))
    note_ind = Column(Unicode(1))
    above_norm_ind = Column(Unicode(1))
    below_norm_ind = Column(Unicode(1))
    completed_qty = Column(Integer)
    notified_tstamp = Column(DateTime)
    order_id = Column(Integer)
    sch_tstamp = Column(DateTime)
    charted_shift_id = Column(Integer)
    pt_vrtn_source_id = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    abnormal_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    pt_cldr_id = Column(Integer)
    cldr_ind = Column(Unicode(1))
    completed_time_ind = Column(Unicode(1))

    pt = relationship(u'PtTpOrder')
    pt1 = relationship(u'PtTpTperiod')


class PtTpActionTest(PtTpCycleAction):
    __tablename__ = 'pt_tp_action_test'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_event_id'], [u'pt_tp_cycle_action.pt_id', u'pt_tp_cycle_action.pt_event_id']),
        Index('nc1_pt_tp_action_test', 'pt_id', 'pt_visit_id', 'test_id')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_event_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    test_id = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtTpActionTr(PtTpCycleAction):
    __tablename__ = 'pt_tp_action_tr'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_event_id'], [u'pt_tp_cycle_action.pt_id', u'pt_tp_cycle_action.pt_event_id']),
        Index('nc1_pt_tp_action_tr', 'pt_id', 'pt_visit_id', 'pt_tr_asmt_id')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_event_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    pt_tr_asmt_id = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtTpActionAsmt(PtTpCycleAction):
    __tablename__ = 'pt_tp_action_asmt'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_event_id'], [u'pt_tp_cycle_action.pt_id', u'pt_tp_cycle_action.pt_event_id']),
        Index('nc1_pt_tp_action_asmt', 'pt_id', 'pt_visit_id', 'pt_asmt_id')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_event_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    pt_asmt_id = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtTpActionQstr(PtTpCycleAction):
    __tablename__ = 'pt_tp_action_qstr'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_event_id'], [u'pt_tp_cycle_action.pt_id', u'pt_tp_cycle_action.pt_event_id']),
        ForeignKeyConstraint(['pt_id', 'pt_visit_id', 'qstr_name', 'qstr_id'], [u'pt_resp_hdr.pt_id', u'pt_resp_hdr.pt_visit_id', u'pt_resp_hdr.qstr_name', u'pt_resp_hdr.qstr_id']),
        Index('nc1_pt_tp_action_qstr', 'pt_id', 'pt_visit_id', 'qstr_name', 'qstr_id')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_event_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    qstr_name = Column(Unicode(20), nullable=False)
    qstr_id = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtRespHdr')


class PtTpActionIv(PtTpCycleAction):
    __tablename__ = 'pt_tp_action_iv'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_event_id'], [u'pt_tp_cycle_action.pt_id', u'pt_tp_cycle_action.pt_event_id']),
        ForeignKeyConstraint(['pt_id', 'pt_visit_id', 'pt_iv_therapy_id'], [u'pt_iv_therapy.pt_id', u'pt_iv_therapy.pt_visit_id', u'pt_iv_therapy.pt_iv_therapy_id']),
        Index('nc1_pt_tp_action_iv', 'pt_id', 'pt_visit_id', 'pt_iv_therapy_id')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_event_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    pt_iv_therapy_id = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtIvTherapy')


class PtTpDecParm(Base):
    __tablename__ = 'pt_tp_dec_parm'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    rx_id = Column(Integer, primary_key=True, nullable=False)
    date_tp_init = Column(DateTime)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    comp_value = Column(Numeric(11, 4), nullable=False)
    comp_unit = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtTpEval(Base):
    __tablename__ = 'pt_tp_eval'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'tp_name', 'date_tp_init', 'outcome_id'], [u'pt_tp_outcome.pt_id', u'pt_tp_outcome.tp_name', u'pt_tp_outcome.date_tp_init', u'pt_tp_outcome.outcome_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_eval_id = Column(Integer, primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), nullable=False)
    tp_vers_no = Column(Unicode(10), nullable=False)
    date_tp_init = Column(DateTime, nullable=False)
    outcome_id = Column(Integer, nullable=False)
    phase_seq_no = Column(Integer, nullable=False)
    tperiod_id = Column(Integer, nullable=False)
    offset_hhmm = Column(Unicode(4))
    offset_desc = Column(Unicode(40))
    cycle_no = Column(Integer)
    individualized_ind = Column(Unicode(1), nullable=False)
    eval_ind = Column(Unicode(1), nullable=False)
    achieved_level = Column(Integer)
    charted_tstamp = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    applicable_ind = Column(Unicode(1))
    event_status = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtTpOutcome')


class PtTpFocu(Base):
    __tablename__ = 'pt_tp_focus'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), nullable=False)
    tp_vers_no = Column(Unicode(10), nullable=False)
    date_tp_init = Column(DateTime, nullable=False)
    pt_focus_id = Column(Integer, primary_key=True, nullable=False)
    focus_desc = Column(Unicode(255), nullable=False)
    focus_seq = Column(Integer)
    individualized_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtTpFocusStatu(Base):
    __tablename__ = 'pt_tp_focus_status'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_focus_id'], [u'pt_tp_focus.pt_id', u'pt_tp_focus.pt_focus_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_focus_id = Column(Integer, primary_key=True, nullable=False)
    pt_focus_status_id = Column(Integer, primary_key=True, nullable=False)
    focus_status_typ = Column(ForeignKey(u'focus_status_typ.focus_status_typ'), nullable=False)
    eff_date = Column(DateTime, nullable=False)
    cur_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    focus_status_typ1 = relationship(u'FocusStatusTyp')
    pt = relationship(u'PtTpFocu')


class PtTpIntv(Base):
    __tablename__ = 'pt_tp_intv'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'date_tp_init'], [u'pt_tp.pt_id', u'pt_tp.date_tp_init']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), nullable=False, index=True)
    tp_vers_no = Column(Unicode(10), nullable=False)
    phase_avl = Column(Integer)
    event_typ = Column(ForeignKey(u'event_typ.event_typ'), nullable=False)
    intv_cat_id = Column(Integer, nullable=False)
    intv_name = Column(Unicode(255), nullable=False)
    notification_req = Column(Unicode(1), nullable=False)
    notification_days = Column(Integer)
    rqstn_req = Column(Unicode(1), nullable=False)
    prof_typ = Column(Integer)
    actual_time_req = Column(Unicode(1), nullable=False)
    chart_summary_ind = Column(Unicode(1), nullable=False)
    intv_req = Column(Unicode(1), nullable=False)
    intv_detail_txt = Column(UnicodeText(1073741823))
    discipline_typ = Column(Integer)
    individualized_ind = Column(Unicode(1), nullable=False)
    sch_ind = Column(Unicode(1))
    group_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    rule_ind = Column(Unicode(1))
    this_visit_req_ind = Column(Unicode(1))
    trans_trf_tstamp = Column(DateTime)
    dose_calc_ind = Column(Unicode(1))
    active_entry_ind = Column(Unicode(1))
    lib_intv_id = Column(Integer)

    event_typ1 = relationship(u'EventTyp')
    pt = relationship(u'PtTp')


class PtTpAgt(PtTpIntv):
    __tablename__ = 'pt_tp_agt'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'date_tp_init', 'intv_id'], [u'pt_tp_intv.pt_id', u'pt_tp_intv.date_tp_init', u'pt_tp_intv.intv_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    agt_name = Column(Unicode(50), nullable=False)
    dose_level = Column(Integer, nullable=False)
    dosage_form = Column(Integer, nullable=False)
    subs = Column(Unicode(1), nullable=False)
    brand = Column(Unicode(50))
    admn_dosage = Column(Numeric(11, 4))
    admn_dosage_unit = Column(ForeignKey(u'unit_of_meas.uom'), nullable=False)
    admn_route = Column(ForeignKey(u'admn_route.admn_route'))
    infusion_typ = Column(ForeignKey(u'infusion_typ.infusion_typ'))
    infusion_duration = Column(Integer)
    infusion_timescale = Column(Integer)
    special_instr = Column(UnicodeText(1073741823))
    round_mthd = Column(Integer)
    round_factor = Column(Numeric(11, 4))
    max_bsa_dose = Column(Numeric(11, 4))
    abs_max_dose = Column(Numeric(11, 4))
    ideal_wt = Column(Unicode(1))
    above_actual_wt = Column(Numeric(11, 4))
    cost_per_course = Column(Numeric(11, 4))
    currency = Column(Integer)
    rx_typ = Column(ForeignKey(u'rx_typ.rx_typ'))
    mod = Column(Unicode(1))
    vrtn_amount = Column(Numeric(11, 4))
    drug_desc_id = Column(Unicode(6))
    admn_dosage_range = Column(Numeric(11, 4))
    strength = Column(Numeric(11, 4))
    strength_unit = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    medi_active_ind = Column(Unicode(1))
    active_chg_date = Column(DateTime)
    agt_seq_no = Column(Integer)
    refill_ind = Column(Unicode(1))
    refill_qty = Column(Integer)
    dose_strength = Column(Unicode(15))
    hydra_fluid_id = Column(ForeignKey(u'hydra_fluid.hydra_fluid_id'))
    hydra_vol = Column(Numeric(11, 4))
    hydra_vol_uom = Column(Integer)
    hydra_seq = Column(Integer)
    tx_tframe_typ = Column(Integer)
    intv_use_typ = Column(Integer)
    take_as_directed_ind = Column(Unicode(1))
    infusion_line = Column(Integer)

    unit_of_mea = relationship(u'UnitOfMea')
    admn_route1 = relationship(u'AdmnRoute')
    hydra_fluid = relationship(u'HydraFluid')
    infusion_typ1 = relationship(u'InfusionTyp')
    rx_typ1 = relationship(u'RxTyp')


class PtTpTr(PtTpIntv):
    __tablename__ = 'pt_tp_tr'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'date_tp_init', 'intv_id'], [u'pt_tp_intv.pt_id', u'pt_tp_intv.date_tp_init', u'pt_tp_intv.intv_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    gs_author = Column(Integer, nullable=False)
    eff_date = Column(DateTime, nullable=False)
    tr_typ = Column(Unicode(30), nullable=False)
    tr_comp_name = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    tr_sub_comp_name = Column(Unicode(60))


class PtTpTest(PtTpIntv):
    __tablename__ = 'pt_tp_test'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'date_tp_init', 'intv_id'], [u'pt_tp_intv.pt_id', u'pt_tp_intv.date_tp_init', u'pt_tp_intv.intv_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20), nullable=False)
    comp_name = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtTpIvTherapy(PtTpIntv):
    __tablename__ = 'pt_tp_iv_therapy'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'date_tp_init', 'intv_id'], [u'pt_tp_intv.pt_id', u'pt_tp_intv.date_tp_init', u'pt_tp_intv.intv_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    iv_fluid_name = Column(Unicode(60), nullable=False)
    iv_fluid_cd = Column(Unicode(10))
    gnrc_iv_fluid_name = Column(Unicode(60))
    iv_rate = Column(Integer, nullable=False)
    iv_rate_unit = Column(ForeignKey(u'unit_of_meas.uom'))
    infusion_typ = Column(ForeignKey(u'infusion_typ.infusion_typ'))
    special_instr = Column(UnicodeText(1073741823))
    agt_name = Column(Unicode(50))
    agt_dose = Column(Numeric(11, 4))
    agt_dose_unit = Column(ForeignKey(u'unit_of_meas.uom'))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    unit_of_mea = relationship(u'UnitOfMea', primaryjoin='PtTpIvTherapy.agt_dose_unit == UnitOfMea.uom')
    infusion_typ1 = relationship(u'InfusionTyp')
    unit_of_mea1 = relationship(u'UnitOfMea', primaryjoin='PtTpIvTherapy.iv_rate_unit == UnitOfMea.uom')


class PtTpQstr(PtTpIntv):
    __tablename__ = 'pt_tp_qstr'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'date_tp_init', 'intv_id'], [u'pt_tp_intv.pt_id', u'pt_tp_intv.date_tp_init', u'pt_tp_intv.intv_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    qstr_name = Column(Unicode(20), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtTpRad(PtTpIntv):
    __tablename__ = 'pt_tp_rad'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'date_tp_init', 'intv_id'], [u'pt_tp_intv.pt_id', u'pt_tp_intv.date_tp_init', u'pt_tp_intv.intv_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    rad_order_name = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtTpAsmt(PtTpIntv):
    __tablename__ = 'pt_tp_asmt'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'date_tp_init', 'intv_id'], [u'pt_tp_intv.pt_id', u'pt_tp_intv.date_tp_init', u'pt_tp_intv.intv_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    asmt_comp_name = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtTpIntvCat(Base):
    __tablename__ = 'pt_tp_intv_cat'

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    intv_cat_id = Column(Integer, primary_key=True, nullable=False)
    event_typ = Column(Unicode(1), nullable=False)
    intv_cat_desc = Column(Unicode(40), nullable=False)
    intv_cat_seq = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'Pt')


class PtTpIntvFocu(Base):
    __tablename__ = 'pt_tp_intv_focus'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    order_id = Column(Integer, primary_key=True, nullable=False)
    focus_id = Column(Integer, primary_key=True, nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    explc_link_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtTpIntvStatu(Base):
    __tablename__ = 'pt_tp_intv_status'
    __table_args__ = (
        ForeignKeyConstraint(['status_cat_id', 'status_value_id'], [u'status_cat_value.status_cat_id', u'status_cat_value.status_value_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    status_id = Column(Integer, primary_key=True, nullable=False)
    status_cat_id = Column(Integer, nullable=False)
    status_value_id = Column(Integer, nullable=False)
    status_duration = Column(Integer)
    start_tstamp = Column(DateTime)
    end_tstamp = Column(DateTime)
    current_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    status_cat = relationship(u'StatusCatValue')


class PtTpOrder(Base):
    __tablename__ = 'pt_tp_order'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'date_tp_init'], [u'pt_tp.pt_id', u'pt_tp.date_tp_init']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    order_id = Column(Integer, primary_key=True, nullable=False)
    intv_id = Column(Integer, nullable=False)
    tp_name = Column(Unicode(20), nullable=False)
    tp_vers_no = Column(Unicode(10), nullable=False)
    event_typ = Column(Unicode(1), nullable=False)
    prn_ind = Column(Unicode(1), nullable=False)
    admn_frq_cd = Column(Integer)
    admn_frq_x = Column(Integer)
    admn_frq_unit = Column(Integer)
    admn_dur = Column(Integer)
    admn_dur_unit = Column(Integer)
    individualized_ind = Column(Unicode(1), nullable=False)
    prn_repeat_ind = Column(Unicode(1))
    start_vrbl_id = Column(Integer)
    stop_vrbl_id = Column(Integer)
    phase_seq_no = Column(Integer)
    cycle_no = Column(Integer)
    tperiod_id = Column(Integer)
    repeat_no = Column(Integer)
    offset_hhmm = Column(Unicode(4))
    offset_desc = Column(Unicode(255))
    charted_ind = Column(Unicode(1))
    cyclical_ind = Column(Unicode(1))
    baseline_dose = Column(Numeric(11, 4))
    pln_dose = Column(Numeric(11, 4))
    dow_frq_unit = Column(Integer)
    week_frq_unit = Column(Integer)
    course_desc = Column(Unicode(255))
    chart_summary_ind = Column(Unicode(1), nullable=False)
    time_suppress_ind = Column(Unicode(1))
    renewable_ind = Column(Unicode(1))
    start_order_tstamp = Column(DateTime)
    end_order_tstamp = Column(DateTime)
    valid_entry_ind = Column(Unicode(1))
    active_ind = Column(Unicode(1))
    chart_req_ind = Column(Unicode(1))
    renew_dur = Column(Integer)
    pt_cldr_id = Column(Integer)
    cldr_ind = Column(Unicode(1))
    med_mntr_asmt_ind = Column(Unicode(1))
    dispense_qty = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    dispense_vol = Column(Numeric(11, 4))
    dispense_unit = Column(Integer)
    admn_frq_upper_x = Column(Integer)

    pt = relationship(u'PtTp')


class PtTpOrderRenew(Base):
    __tablename__ = 'pt_tp_order_renew'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'date_tp_init', 'order_id'], [u'pt_tp_order.pt_id', u'pt_tp_order.date_tp_init', u'pt_tp_order.order_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    order_id = Column(Integer, primary_key=True, nullable=False)
    renew_order_tstamp = Column(DateTime, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    vrbl_id = Column(Integer)

    pt = relationship(u'PtTpOrder')


class PtTpOutcome(Base):
    __tablename__ = 'pt_tp_outcome'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_focus_id'], [u'pt_tp_focus.pt_id', u'pt_tp_focus.pt_focus_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    outcome_id = Column(Integer, primary_key=True, nullable=False)
    outcome_desc = Column(Unicode(255), nullable=False)
    pt_focus_id = Column(Integer)
    intv_cat_id = Column(Integer)
    prof_typ = Column(Integer)
    outcome_seq = Column(Integer)
    individualized_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    discipline_typ = Column(Integer)
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtTpFocu')


class PtTpPhase(Base):
    __tablename__ = 'pt_tp_phase'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'date_tp_init'], [u'pt_tp.pt_id', u'pt_tp.date_tp_init']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), nullable=False)
    tp_vers_no = Column(Unicode(10), nullable=False)
    phase_seq_no = Column(Integer, primary_key=True, nullable=False)
    phase_desc = Column(Unicode(100), nullable=False)
    brief_desc = Column(UnicodeText(1073741823))
    no_of_tperiods = Column(Integer, nullable=False)
    no_of_cycles = Column(Integer, nullable=False)
    tperiod_dur = Column(Integer)
    tperiod_dur_unit = Column(Integer)
    allowable_drift = Column(Integer)
    allowable_delay = Column(Integer)
    individualized_ind = Column(Unicode(1))
    applicable_ind = Column(Unicode(1))
    lag_ind = Column(Unicode(1))
    phase_start_tstamp = Column(DateTime)
    phase_stop_tstamp = Column(DateTime)
    vrbl_id = Column(Integer)
    stop_vrbl_id = Column(Integer)
    init_ht = Column(Numeric(11, 4))
    ht_unit = Column(Integer)
    init_wt = Column(Numeric(11, 4))
    wt_unit = Column(Integer)
    init_bsa = Column(Numeric(11, 4))
    cur_cycle = Column(Integer)
    pln_violated_flag = Column(Unicode(1))
    cur_cycle_day = Column(Integer)
    next_cycle = Column(Integer)
    next_cycle_day = Column(Integer)
    consent_req = Column(Unicode(1))
    updt_amended_tp = Column(Unicode(1))
    tp_setup_ind = Column(Unicode(1))
    mgmt_support_ind = Column(Unicode(1))
    start_cycle = Column(Integer)
    start_day = Column(Integer)
    mid_pln_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    prcs_typ = Column(ForeignKey(u'prcs_typ.prcs_typ'))
    tr_cs_req_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    prcs_typ1 = relationship(u'PrcsTyp')
    pt = relationship(u'PtTp')


class PtTpRem(Base):
    __tablename__ = 'pt_tp_rem'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    rem_short_desc = Column(Unicode(50))
    rem_desc = Column(UnicodeText(1073741823))
    rem_seq_no = Column(Integer)
    rcpnt_discipline_typ = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtTpSchGroup(Base):
    __tablename__ = 'pt_tp_sch_group'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'date_tp_init', 'comp_intv_id'], [u'pt_tp_intv.pt_id', u'pt_tp_intv.date_tp_init', u'pt_tp_intv.intv_id']),
        ForeignKeyConstraint(['pt_id', 'date_tp_init', 'group_intv_id'], [u'pt_tp_intv.pt_id', u'pt_tp_intv.date_tp_init', u'pt_tp_intv.intv_id'])
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    group_intv_id = Column(Integer, primary_key=True, nullable=False)
    comp_intv_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    comp_seq_no = Column(Integer)
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtTpIntv', primaryjoin='PtTpSchGroup.pt_id == PtTpIntv.pt_id')
    pt1 = relationship(u'PtTpIntv', primaryjoin='PtTpSchGroup.pt_id == PtTpIntv.pt_id')


class PtTpTperiod(Base):
    __tablename__ = 'pt_tp_tperiod'
    __table_args__ = (
        Index('nc1_pt_tp_tperiod', 'pt_id', 'pt_visit_id'),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), nullable=False)
    tp_vers_no = Column(Unicode(10), nullable=False)
    phase_seq_no = Column(Integer, primary_key=True, nullable=False)
    cycle_no = Column(Integer, primary_key=True, nullable=False)
    tperiod_id = Column(Integer, primary_key=True, nullable=False)
    repeat_no = Column(Integer, primary_key=True, nullable=False)
    tperiod_desc = Column(Unicode(255))
    pln_action_date = Column(DateTime, index=True)
    date_action_taken = Column(DateTime)
    pt_visit_id = Column(Integer)
    applicable_ind = Column(Unicode(1))
    individualized_ind = Column(Unicode(1))
    pt_interaction_id = Column(ForeignKey(u'pt_interaction.pt_interaction_id'))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    active_ind = Column(Unicode(1))
    std_cycle_no = Column(Integer)
    dose_rec_ind = Column(Unicode(1))

    pt_interaction = relationship(u'PtInteraction')


class PtTpVrtnSource(Base):
    __tablename__ = 'pt_tp_vrtn_source'
    __table_args__ = (
        ForeignKeyConstraint(['vrtn_source_cls', 'vrtn_source_typ'], [u'vrtn_source_typ.vrtn_source_cls', u'vrtn_source_typ.vrtn_source_typ']),
        Index('nc1_pt_tp_vrtn_source', 'pt_id', 'pt_vrtn_source_id', 'date_tp_init')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_vrtn_source_id = Column(Integer, primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), nullable=False)
    tp_vers_no = Column(Unicode(10), nullable=False)
    date_tp_init = Column(DateTime, nullable=False)
    vrtn_source_cls = Column(Integer, nullable=False)
    vrtn_source_typ = Column(Integer, nullable=False)
    vrtn_source_desc = Column(UnicodeText(1073741823))
    vrtn_source_tstamp = Column(DateTime)
    action_taken = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    vrtn_source_typ1 = relationship(u'VrtnSourceTyp')


class PtTumClsValue(Base):
    __tablename__ = 'pt_tum_cls_values'

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    author_cd = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    crit_cd = Column(Unicode(10), primary_key=True, nullable=False)
    tum_cls_date = Column(DateTime, nullable=False)
    chronology = Column(Unicode(1))
    pt_tum_stg_id = Column(Integer, primary_key=True, nullable=False)
    appr_flag = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'Pt')


class PtTx(Base):
    __tablename__ = 'pt_tx'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_tx_id = Column(Integer, primary_key=True, nullable=False)
    tp_name = Column(Unicode(20))
    phase_seq_no = Column(Integer)
    date_tp_init = Column(DateTime)
    pln_typ = Column(Integer)
    tx_desc = Column(Unicode(255))
    tx_modality = Column(Integer)
    tx_start_date = Column(DateTime, nullable=False)
    tx_end_date = Column(DateTime)
    internal_ind = Column(Unicode(1))
    ct_ind = Column(Unicode(1))
    no_cycles = Column(Integer)
    cycle_length = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    tp_vers_no = Column(Unicode(10))
    start_cycle = Column(Integer)
    start_day = Column(Integer)
    ack_tp_vers_no = Column(Unicode(10))
    tx_line = Column(Integer)
    tx_intent = Column(Integer)
    no_cycles_complete = Column(Integer)
    tx_start_date_cd = Column(Integer)
    tx_end_date_cd = Column(Integer)
    total_dose = Column(Numeric(11, 4))
    total_dose_unit = Column(Integer)
    tx_cmt = Column(UnicodeText(1073741823))
    valid_entry_ind = Column(Unicode(1))
    tx_use = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))
    auto_end_ind = Column(Unicode(1))
    auto_end_by_userid = Column(Unicode(10))
    auto_end_by_user_inst_id = Column(Unicode(30))
    auto_end_tstamp = Column(DateTime)
    allergies_req_ind = Column(Unicode(1))
    allergies_doc_ind = Column(Unicode(1))
    meds_req_ind = Column(Unicode(1))
    meds_doc_ind = Column(Unicode(1))
    main_typ_cls_value_id = Column(Integer)
    sub_typ_cls_value_id = Column(Integer)
    evidence_lvl_pln_typ = Column(Integer)
    pathway_exists_ind = Column(Unicode(1))


class PtTxCt(Base):
    __tablename__ = 'pt_tx_ct'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_tx_ct_id = Column(Integer, primary_key=True, nullable=False)
    study_no = Column(Unicode(30))
    ord_by_stkh_id = Column(Unicode(20))
    internal_ind = Column(Unicode(1))
    prov_name = Column(Unicode(80))
    inst_name = Column(Unicode(50))
    pt_tx_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))


class PtTxCtMh(Base):
    __tablename__ = 'pt_tx_ct_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_tx_ct_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    study_no = Column(Unicode(30))
    ord_by_stkh_id = Column(Unicode(20))
    internal_ind = Column(Unicode(1))
    prov_name = Column(Unicode(80))
    inst_name = Column(Unicode(50))
    pt_tx_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtTxDec(Base):
    __tablename__ = 'pt_tx_dec'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_tx_dec_id = Column(Integer, primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, nullable=False)
    tp_name = Column(Unicode(20), nullable=False)
    dec_typ = Column(Integer, nullable=False)
    dec_date = Column(DateTime)
    cycle_no = Column(Integer)
    cycle_day = Column(Integer)
    dec_userid = Column(Unicode(10))
    dec_inst_id = Column(Unicode(30))
    tx_dec_rsn_id = Column(Integer)
    dec_rsn_desc = Column(Unicode(255))
    dec_qty = Column(Integer)
    dec_qty_unit = Column(Integer)
    vrtn_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    dec_rsn_typ = Column(Integer)
    vrbl_id = Column(Integer)
    pt_tx_id = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))


class PtTxDecMh(Base):
    __tablename__ = 'pt_tx_dec_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_tx_dec_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, nullable=False)
    tp_name = Column(Unicode(20), nullable=False)
    dec_typ = Column(Integer, nullable=False)
    dec_date = Column(DateTime)
    cycle_no = Column(Integer)
    cycle_day = Column(Integer)
    dec_userid = Column(Unicode(10))
    dec_inst_id = Column(Unicode(30))
    tx_dec_rsn_id = Column(Integer)
    dec_rsn_desc = Column(Unicode(255))
    dec_qty = Column(Integer)
    dec_qty_unit = Column(Integer)
    vrtn_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    dec_rsn_typ = Column(Integer)
    vrbl_id = Column(Integer)
    pt_tx_id = Column(Integer)


class PtTxMh(Base):
    __tablename__ = 'pt_tx_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_tx_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    tp_name = Column(Unicode(20))
    phase_seq_no = Column(Integer)
    date_tp_init = Column(DateTime)
    pln_typ = Column(Integer)
    tx_desc = Column(Unicode(255))
    tx_modality = Column(Integer)
    tx_start_date = Column(DateTime, nullable=False)
    tx_end_date = Column(DateTime)
    internal_ind = Column(Unicode(1))
    ct_ind = Column(Unicode(1))
    no_cycles = Column(Integer)
    cycle_length = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    tp_vers_no = Column(Unicode(10))
    start_cycle = Column(Integer)
    start_day = Column(Integer)
    ack_tp_vers_no = Column(Unicode(10))
    tx_line = Column(Integer)
    tx_intent = Column(Integer)
    no_cycles_complete = Column(Integer)
    tx_start_date_cd = Column(Integer)
    tx_end_date_cd = Column(Integer)
    total_dose = Column(Numeric(11, 4))
    total_dose_unit = Column(Integer)
    tx_cmt = Column(UnicodeText(1073741823))
    valid_entry_ind = Column(Unicode(1))
    tx_use = Column(Integer)
    auto_end_ind = Column(Unicode(1))
    auto_end_by_userid = Column(Unicode(10))
    auto_end_by_user_inst_id = Column(Unicode(30))
    auto_end_tstamp = Column(DateTime)
    allergies_req_ind = Column(Unicode(1))
    allergies_doc_ind = Column(Unicode(1))
    meds_req_ind = Column(Unicode(1))
    meds_doc_ind = Column(Unicode(1))
    main_typ_cls_value_id = Column(Integer)
    sub_typ_cls_value_id = Column(Integer)
    evidence_lvl_pln_typ = Column(Integer)
    pathway_exists_ind = Column(Unicode(1))


class PtUnavl(Base):
    __tablename__ = 'pt_unavl'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id'], [u'pt_visit.pt_id', u'pt_visit.pt_visit_id']),
        Index('nc1_pt_unavl', 'pt_id', 'unavl_date'),
        Index('nc2_pt_unavl', 'pt_id', 'pt_visit_id'),
        Index('nc3_pt_unavl', 'unavl_hdr_inst_id', 'unavl_hdr_id')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_unavl_id = Column(Integer, primary_key=True, nullable=False)
    unavl_typ = Column(Integer, nullable=False)
    pt_visit_id = Column(Integer)
    pt_unavl_dow = Column(ForeignKey(u'unavl_dow.unavl_dow'))
    pt_unavl_from = Column(DateTime, nullable=False, index=True)
    pt_unavl_to = Column(DateTime, nullable=False)
    unavl_cmt = Column(Unicode(200))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    event_typ = Column(Unicode(1))
    unavl_date = Column(DateTime)
    valid_entry_ind = Column(Unicode(1))
    unavl_hdr_inst_id = Column(Unicode(30))
    unavl_hdr_id = Column(Integer)

    pt = relationship(u'PtVisit')
    unavl_dow = relationship(u'UnavlDow')


class PtUserAccessLog(Base):
    __tablename__ = 'pt_user_access_log'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_access_log_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    userid = Column(Unicode(10), nullable=False)
    pt_visit_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    open_tstamp = Column(DateTime, index=True)
    close_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    access_inst_id = Column(Unicode(30))


class PtUserDefined(Base):
    __tablename__ = 'pt_user_defined'

    pt_id = Column(Unicode(20), primary_key=True)
    user_defined_1 = Column(Unicode(16))
    user_defined_2 = Column(Unicode(16))
    user_defined_3 = Column(Unicode(16))
    user_defined_4 = Column(Unicode(16))
    user_defined_5 = Column(Unicode(16))
    user_defined_6 = Column(Unicode(16))
    user_defined_7 = Column(Unicode(16))
    user_defined_8 = Column(Unicode(16))
    user_defined_9 = Column(Unicode(16))
    user_defined_10 = Column(Unicode(16))
    user_defined_11 = Column(Unicode(16))
    user_defined_12 = Column(Unicode(16))
    user_defined_13 = Column(Unicode(16))
    user_defined_14 = Column(Unicode(16))
    user_defined_15 = Column(Unicode(16))
    user_defined_16 = Column(Unicode(16))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PtUserDefinedLabel(Base):
    __tablename__ = 'pt_user_defined_label'

    inst_id = Column(Unicode(30), primary_key=True)
    user_define_label_1 = Column(Unicode(50))
    user_defined_visible_1_ind = Column(Unicode(1))
    user_define_label_2 = Column(Unicode(50))
    user_defined_visible_2_ind = Column(Unicode(1))
    user_define_label_3 = Column(Unicode(50))
    user_defined_visible_3_ind = Column(Unicode(1))
    user_define_label_4 = Column(Unicode(50))
    user_defined_visible_4_ind = Column(Unicode(1))
    user_define_label_5 = Column(Unicode(50))
    user_defined_visible_5_ind = Column(Unicode(1))
    user_define_label_6 = Column(Unicode(50))
    user_defined_visible_6_ind = Column(Unicode(1))
    user_define_label_7 = Column(Unicode(50))
    user_defined_visible_7_ind = Column(Unicode(1))
    user_define_label_8 = Column(Unicode(50))
    user_defined_visible_8_ind = Column(Unicode(1))
    user_define_label_9 = Column(Unicode(50))
    user_defined_visible_9_ind = Column(Unicode(1))
    user_define_label_10 = Column(Unicode(50))
    user_defined_visible_10_ind = Column(Unicode(1))
    user_define_label_11 = Column(Unicode(50))
    user_defined_visible_11_ind = Column(Unicode(1))
    user_define_label_12 = Column(Unicode(50))
    user_defined_visible_12_ind = Column(Unicode(1))
    user_define_label_13 = Column(Unicode(50))
    user_defined_visible_13_ind = Column(Unicode(1))
    user_define_label_14 = Column(Unicode(50))
    user_defined_visible_14_ind = Column(Unicode(1))
    user_define_label_15 = Column(Unicode(50))
    user_defined_visible_15_ind = Column(Unicode(1))
    user_define_label_16 = Column(Unicode(50))
    user_defined_visible_16_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PtVisit(Base):
    __tablename__ = 'pt_visit'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'userid_link'], [u'userid.inst_id', u'userid.userid']),
        ForeignKeyConstraint(['pt_id', 'vrbl_id'], [u'vrbl_order.pt_id', u'vrbl_order.vrbl_id']),
        Index('nc3_pt_visit', 'pt_id', 'date_tp_init', 'phase_seq_no', 'cycle_no', 'cycle_day', 'repeat_no'),
        Index('nc7_pt_visit', 'pt_id', 'pt_visit_id', 'date_time_sch', 'tp_name', 'tp_vers_no', 'date_tp_init'),
        Index('nc4_pt_visit', 'visit_inst_id', 'visit_start_tstamp', 'pt_id', 'pt_visit_id', 'visit_typ', 'visit_end_tstamp'),
        Index('nc5_pt_visit', 'visit_inst_id', 'visit_start_tstamp', 'pt_id', 'pt_visit_id', 'visit_typ', 'visit_end_tstamp')
    )

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    date_time_sch = Column(DateTime, index=True)
    visit_typ = Column(Integer)
    visit_complete = Column(Unicode(1))
    rx_sent = Column(DateTime)
    inst_id = Column(Unicode(30), nullable=False)
    userid_link = Column(Unicode(10))
    vrbl_id = Column(Integer)
    visit_imp_ind = Column(Unicode(1))
    tp_name = Column(Unicode(20))
    tp_vers_no = Column(Unicode(10))
    date_tp_init = Column(DateTime)
    phase_seq_no = Column(Integer)
    cycle_no = Column(Integer)
    cycle_day = Column(Integer)
    repeat_no = Column(Integer)
    sch_end_tstamp = Column(DateTime)
    visit_inst_id = Column(Unicode(30))
    sch_cmt = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    hl7_visit_id = Column(Unicode(30))
    visit_start_tstamp = Column(DateTime, index=True)
    visit_end_tstamp = Column(DateTime)
    visit_clinic_id = Column(Integer)
    new_provider_ind = Column(Unicode(1))
    new_inst_ind = Column(Unicode(1))
    cancel_reason_typ = Column(Integer)
    pt_arrive_ind = Column(Unicode(1))
    pt_cldr_id = Column(Integer)
    pt_attend_ind = Column(Unicode(1))
    pt_visit_grp_id = Column(Integer)
    external_org_stkh_id = Column(Unicode(20))
    tentative_ind = Column(Unicode(1))
    pt_instr_cmt = Column(Unicode(255))
    visit_financial_status_typ = Column(Integer)
    visit_financial_status_cmt = Column(Unicode(255))
    new_dept_ind = Column(Unicode(1))
    visit_tracking_abrv = Column(Unicode(2))

    inst = relationship(u'Userid')
    pt = relationship(u'VrblOrder')
    pt1 = relationship(u'Pt')


class PtVisitDetail(Base):
    __tablename__ = 'pt_visit_detail'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    visit_detail_id = Column(Integer, primary_key=True, nullable=False)
    visit_detail_typ = Column(Integer, nullable=False)
    detail_userid = Column(Unicode(10))
    detail_inst_id = Column(Unicode(30))
    component_count = Column(Integer)
    visit_detail_desc = Column(UnicodeText(1073741823))
    appr_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    dictation_queue_id = Column(Integer)
    appr_userid = Column(Unicode(10))
    appr_tstamp = Column(DateTime)
    appr_inst_id = Column(Unicode(30))
    visit_detail_grp_id = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))
    visit_detail_tstamp = Column(DateTime)
    app_cd = Column(Unicode(10))


class PtVisitDetailMh(Base):
    __tablename__ = 'pt_visit_detail_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    visit_detail_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    visit_detail_typ = Column(Integer, nullable=False)
    visit_detail_grp_id = Column(Integer)
    detail_userid = Column(Unicode(10))
    detail_inst_id = Column(Unicode(30))
    component_count = Column(Integer)
    visit_detail_desc = Column(UnicodeText(1073741823))
    appr_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    dictation_queue_id = Column(Integer)
    appr_userid = Column(Unicode(10))
    appr_tstamp = Column(DateTime)
    appr_inst_id = Column(Unicode(30))
    visit_detail_tstamp = Column(DateTime)
    app_cd = Column(Unicode(10))


class PtVisitDictation(Base):
    __tablename__ = 'pt_visit_dictation'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    dictation_complete_ind = Column(Unicode(1))
    dictation_priority = Column(Integer)
    visit_note_id = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtVisitHx(Base):
    __tablename__ = 'pt_visit_hx'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    hx_comp_typ = Column(Integer, primary_key=True, nullable=False)
    hx_changed_ind = Column(Unicode(1))
    hx_reviewed_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), primary_key=True, nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtVisitProvider(Base):
    __tablename__ = 'pt_visit_provider'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    user_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    primary_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtVisitReason(Base):
    __tablename__ = 'pt_visit_reason'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    visit_reason_id = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class PtVisitResch(Base):
    __tablename__ = 'pt_visit_resch'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    cancel_pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    resch_pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class PtVisitToday(Base):
    __tablename__ = 'pt_visit_today'
    __table_args__ = (
        Index('nc1_pt_visit_today', 'visit_inst_id', 'visit_start_tstamp'),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    visit_inst_id = Column(Unicode(30))
    date_time_sch = Column(DateTime)
    visit_start_tstamp = Column(DateTime)
    visit_typ = Column(Integer)
    inst_id = Column(Unicode(30))
    userid_link = Column(Unicode(10))
    tp_name = Column(Unicode(20))
    tp_vers_no = Column(Unicode(10))
    date_tp_init = Column(DateTime)
    visit_clinic_id = Column(Integer)
    new_provider_ind = Column(Unicode(1))
    new_inst_ind = Column(Unicode(1))
    pt_arrive_ind = Column(Unicode(1))
    pt_attend_ind = Column(Unicode(1))
    tentative_ind = Column(Unicode(1))
    pt_tp_amend = Column(Unicode(1))
    sch_cmt = Column(Unicode(255))
    pt_instr_cmt = Column(Unicode(255))
    visit_financial_status_typ = Column(Integer)
    visit_financial_status_cmt = Column(Unicode(255))
    pt_last_name = Column(Unicode(30))
    pt_first_name = Column(Unicode(30))
    pt_initial = Column(Unicode(2))
    pt_dob = Column(DateTime)
    pt_dob_cd = Column(Integer)
    pt_key_value = Column(Unicode(25))
    sin_ssn = Column(Unicode(20))
    citizenship_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    new_dept_ind = Column(Unicode(1))
    visit_tracking_abrv = Column(Unicode(2))
    allergy_ind = Column(Unicode(1))
    infection_ind = Column(Unicode(1))
    directives_ind = Column(Unicode(1))
    copay_amt = Column(Numeric(8, 2))
    pt_inpatient_ind = Column(Unicode(1))
    pt_alert_ind = Column(Unicode(1))
    clin_trial_ind = Column(Unicode(1))


class PtVisitTracking(Base):
    __tablename__ = 'pt_visit_tracking'
    __table_args__ = (
        ForeignKeyConstraint(['visit_tracking_inst_id', 'visit_tracking_typ'], [u'visit_tracking_typ.inst_id', u'visit_tracking_typ.visit_tracking_typ']),
    )

    pt_id = Column(Unicode(30), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_tracking_id = Column(Integer, primary_key=True, nullable=False)
    visit_tracking_typ = Column(Integer, nullable=False)
    visit_tracking_inst_id = Column(Unicode(30), nullable=False)
    tracking_tstamp = Column(DateTime, nullable=False)
    cur_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    valid_entry_ind = Column(Unicode(1))

    visit_tracking_inst = relationship(u'VisitTrackingTyp')


class PtWinAcces(Base):
    __tablename__ = 'pt_win_access'
    __table_args__ = (
        Index('nc1_pt_win_access', 'trans_log_userid', 'trans_log_tstamp'),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    window_label = Column(Unicode(30), primary_key=True, nullable=False)
    trans_log_tstamp = Column(DateTime, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class Qm(Base):
    __tablename__ = 'qm'

    qm_id = Column(Integer, primary_key=True)
    qm_reference = Column(Unicode(10), nullable=False)
    qm_name = Column(Unicode(150), nullable=False)
    qm_desc = Column(Unicode, nullable=False)
    rationale = Column(Unicode, nullable=False)
    clinical_recommendation = Column(Unicode, nullable=False)
    definitions_xml_name = Column(Unicode(50))
    active_ind = Column(Unicode(1), nullable=False)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class QmCriterion(Base):
    __tablename__ = 'qm_criteria'

    qmc_id = Column(Integer, primary_key=True)
    qm_id = Column(ForeignKey(u'qm.qm_id'), nullable=False)
    qmc_unique_desc = Column(Unicode, nullable=False)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    qmcp_id_population = Column(ForeignKey(u'qm_criteria_part.qmcp_id'))
    qmcp_id_exclusion = Column(ForeignKey(u'qm_criteria_part.qmcp_id'))
    qmcp_id_denominator = Column(ForeignKey(u'qm_criteria_part.qmcp_id'))
    qmcp_id_numerator = Column(ForeignKey(u'qm_criteria_part.qmcp_id'))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    qm = relationship(u'Qm')
    qm_criteria_part = relationship(u'QmCriteriaPart', primaryjoin='QmCriterion.qmcp_id_denominator == QmCriteriaPart.qmcp_id')
    qm_criteria_part1 = relationship(u'QmCriteriaPart', primaryjoin='QmCriterion.qmcp_id_exclusion == QmCriteriaPart.qmcp_id')
    qm_criteria_part2 = relationship(u'QmCriteriaPart', primaryjoin='QmCriterion.qmcp_id_numerator == QmCriteriaPart.qmcp_id')
    qm_criteria_part3 = relationship(u'QmCriteriaPart', primaryjoin='QmCriterion.qmcp_id_population == QmCriteriaPart.qmcp_id')


class QmCriteriaCulture(Base):
    __tablename__ = 'qm_criteria_culture'

    qmc_id = Column(ForeignKey(u'qm_criteria.qmc_id'), primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    qmc_unique_desc = Column(Unicode, nullable=False)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    qmc = relationship(u'QmCriterion')


class QmCriteriaInstance(Base):
    __tablename__ = 'qm_criteria_instance'
    __table_args__ = (
        Index('nc1_qm_criteria_instance', 'qmi_id', 'qmc_id', unique=True),
    )

    qmci_id = Column(Integer, primary_key=True)
    qmi_id = Column(ForeignKey(u'qm_instance.qmi_id'), nullable=False)
    qmc_id = Column(ForeignKey(u'qm_criteria.qmc_id'), nullable=False)
    last_updated_tstamp = Column(DateTime)
    last_updated_userid = Column(Unicode(10))
    last_updated_inst_id = Column(Unicode(30))
    last_updated_elapsed_time = Column(Integer)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    total_population = Column(Integer)
    total_qualify = Column(Integer)
    total_met = Column(Integer)
    total_manual = Column(Integer)

    qmc = relationship(u'QmCriterion')
    qmi = relationship(u'QmInstance')


class QmCriteriaPart(Base):
    __tablename__ = 'qm_criteria_part'

    qmcp_id = Column(Integer, primary_key=True)
    qmcp_typ = Column(Unicode(20), nullable=False)
    qmcp_xml_name = Column(Unicode(50))
    qmcp_desc = Column(Unicode)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class QmCriteriaPartCulture(Base):
    __tablename__ = 'qm_criteria_part_culture'

    qmcp_id = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    qmcp_desc = Column(Unicode)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class QmCulture(Base):
    __tablename__ = 'qm_culture'

    qm_id = Column(ForeignKey(u'qm.qm_id'), primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    qm_name = Column(Unicode(150), nullable=False)
    qm_desc = Column(Unicode, nullable=False)
    rationale = Column(Unicode, nullable=False)
    clinical_recommendation = Column(Unicode, nullable=False)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    qm = relationship(u'Qm')


class QmInstance(Base):
    __tablename__ = 'qm_instance'
    __table_args__ = (
        Index('nc1_qm_instance', 'qm_id', 'compliance_prd_id', unique=True),
    )

    qmi_id = Column(Integer, primary_key=True)
    qm_id = Column(ForeignKey(u'qm.qm_id'), nullable=False)
    compliance_prd_id = Column(ForeignKey(u'compliance_prd.compliance_prd_id'), nullable=False)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    compliance_prd = relationship(u'CompliancePrd')
    qm = relationship(u'Qm')


class QmInstanceSubscription(Base):
    __tablename__ = 'qm_instance_subscription'

    qmi_id = Column(ForeignKey(u'qm_instance.qmi_id'), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    active_ind = Column(Unicode(1), nullable=False)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    qmi = relationship(u'QmInstance')


class Qstr(Base):
    __tablename__ = 'qstr'

    qstr_name = Column(Unicode(20), primary_key=True)
    qstr_typ = Column(ForeignKey(u'qstr_typ.qstr_typ'), nullable=False)
    title = Column(Unicode(50), nullable=False)
    appr_flag = Column(Unicode(1), nullable=False)
    instr = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    active_entry_ind = Column(Unicode(1))
    pt_enter_ind = Column(Unicode(1))
    pt_enter_seq_no = Column(Integer)
    pn_qstr_id = Column(Integer)

    qstr_typ1 = relationship(u'QstrTyp')


class QstrBill(Base):
    __tablename__ = 'qstr_bill'

    qstr_name = Column(ForeignKey(u'qstr.qstr_name'), primary_key=True, nullable=False)
    bill_cd = Column(Unicode(30), primary_key=True, nullable=False)
    bill_cd_typ_id = Column(Integer, primary_key=True, nullable=False)
    bill_instance_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    qstr = relationship(u'Qstr')


class QstrClsGroup(Base):
    __tablename__ = 'qstr_cls_group'

    qstr_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class QstrTyp(Base):
    __tablename__ = 'qstr_typ'

    qstr_typ = Column(Integer, primary_key=True)
    qstr_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class QstrUser(Base):
    __tablename__ = 'qstr_user'

    qstr_name = Column(Unicode(20), primary_key=True, nullable=False)
    user_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class Question(Base):
    __tablename__ = 'question'

    qstr_name = Column(ForeignKey(u'qstr.qstr_name'), primary_key=True, nullable=False)
    question_id = Column(Integer, primary_key=True, nullable=False)
    question_no = Column(Unicode(5))
    question_typ = Column(ForeignKey(u'question_typ.question_typ'))
    no_attr_1 = Column(Numeric(11, 4))
    no_attr_2 = Column(Numeric(11, 4))
    no_attr_3 = Column(Numeric(11, 4))
    string_attr_1 = Column(Unicode(20))
    string_attr_2 = Column(Unicode(20))
    string_attr_3 = Column(UnicodeText(1073741823))
    question_txt = Column(UnicodeText(1073741823))
    ind_attr_1 = Column(Unicode(1))
    ind_attr_2 = Column(Unicode(1))
    ind_attr_3 = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    question_share_ind = Column(Unicode(1))
    question_tag = Column(Unicode(40))
    question_tag_tstamp = Column(DateTime)
    score_values = Column(Unicode(200))
    req_ind = Column(Unicode(1))
    seq_no = Column(Integer)

    qstr = relationship(u'Qstr')
    question_typ1 = relationship(u'QuestionTyp')


class QuestionTyp(Base):
    __tablename__ = 'question_typ'

    question_typ = Column(Integer, primary_key=True)
    question_desc = Column(Unicode(40), nullable=False)
    question_max_no_1 = Column(Integer)
    question_max_no_2 = Column(Integer)
    question_max_no_3 = Column(Integer)
    question_min_no_1 = Column(Integer)
    question_min_no_2 = Column(Integer)
    question_min_no_3 = Column(Integer)
    display_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    question_typ_seq = Column(Integer)


class QuickNote(Base):
    __tablename__ = 'quick_note'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    quick_note_id = Column(Integer, primary_key=True, nullable=False)
    appr_flag = Column(Unicode(1), nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    author_userid = Column(Unicode(10), nullable=False)
    author_inst_id = Column(Unicode(30), nullable=False)
    revision_no = Column(Integer, server_default=text("((1))"))
    note_tstamp = Column(DateTime)
    quick_note_text = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_trf_tstamp = Column(DateTime)
    err_rsn_txt = Column(Unicode(255))
    quick_note_typ = Column(ForeignKey(u'quick_note_typ.quick_note_typ'))

    quick_note_typ1 = relationship(u'QuickNoteTyp')


class QuickNoteMh(Base):
    __tablename__ = 'quick_note_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    quick_note_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    appr_flag = Column(Unicode(1), nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    author_userid = Column(Unicode(10), nullable=False)
    author_inst_id = Column(Unicode(30), nullable=False)
    note_tstamp = Column(DateTime)
    quick_note_text = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_trf_tstamp = Column(DateTime)
    err_rsn_txt = Column(Unicode(255))
    quick_note_typ = Column(Integer)


class QuickNoteTyp(Base):
    __tablename__ = 'quick_note_typ'

    quick_note_typ = Column(Integer, primary_key=True)
    quick_note_desc = Column(Unicode(255), nullable=False)
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class RaceTyp(Base):
    __tablename__ = 'race_typ'

    race_typ = Column(Integer, primary_key=True)
    race_desc = Column(Unicode(40), nullable=False)
    race_group_cd = Column(Unicode(5))
    base_race_typ = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RadComp(Base):
    __tablename__ = 'rad_comp'

    rad_comp = Column(Unicode(50), primary_key=True, nullable=False)
    rad_comp_typ = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    rad_comp_group_id = Column(ForeignKey(u'rad_comp_group.rad_comp_group_id'), nullable=False)
    comp_items = Column(Integer)
    uom = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    active_entry_ind = Column(Unicode(1))

    rad_comp_group = relationship(u'RadCompGroup')


class RadCompGroup(Base):
    __tablename__ = 'rad_comp_group'

    rad_comp_group_id = Column(Integer, primary_key=True)
    rad_comp_group_name = Column(Unicode(255), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RadCompItem(Base):
    __tablename__ = 'rad_comp_items'

    rad_comp = Column(Unicode(50), primary_key=True, nullable=False)
    item_no = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    item_display = Column(Unicode(25), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RadCompTyp(Base):
    __tablename__ = 'rad_comp_typ'

    rad_comp_typ = Column(Integer, primary_key=True)
    rad_comp_typ_desc = Column(Unicode(25), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RadItemField(Base):
    __tablename__ = 'rad_item_field'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    rad_order_name = Column(Unicode(50), primary_key=True, nullable=False)
    rad_item_id = Column(Integer, primary_key=True, nullable=False)
    rad_field_no = Column(Integer, primary_key=True, nullable=False)
    init_value = Column(Unicode(25))
    init_text_value = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RadMode(Base):
    __tablename__ = 'rad_mode'

    rad_mode_typ = Column(Integer, primary_key=True)
    rad_mode_desc = Column(Unicode(125))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RadModeSubtyp(Base):
    __tablename__ = 'rad_mode_subtyp'

    rad_mode_typ = Column(Integer, primary_key=True, nullable=False)
    mode_sub_typ = Column(Integer, primary_key=True, nullable=False)
    mode_sub_typ_desc = Column(Unicode(125), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RadOrder(Base):
    __tablename__ = 'rad_order'

    rad_order_no = Column(Unicode(20), primary_key=True)
    rad_order_name = Column(Unicode(50), nullable=False)
    mode_typ = Column(Integer, nullable=False)
    mode_sub_typ = Column(Integer, nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    order_appr_ind = Column(Unicode(1))
    tp_cls_typ_id = Column(Integer)
    tp_cls_value_id = Column(Integer)
    rad_order_typ = Column(Integer, nullable=False)
    rad_fields = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RadOrderItem(Base):
    __tablename__ = 'rad_order_item'

    rad_order_name = Column(Unicode(50), primary_key=True, nullable=False)
    mode_typ = Column(Integer, primary_key=True, nullable=False)
    mode_sub_typ = Column(Integer, primary_key=True, nullable=False)
    rad_item_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    rad_item_no = Column(Integer, nullable=False)
    rad_comp = Column(Unicode(50))
    rad_indent_level = Column(Integer)
    rad_comp_typ = Column(Integer)
    init_value = Column(Unicode(25))
    uom = Column(Integer)
    min_val = Column(Unicode(25))
    max_val = Column(Unicode(25))
    edit_cmt = Column(Unicode(50))
    rad_rec_typ = Column(Integer)
    rad_order_section = Column(Unicode(50))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    init_text_value = Column(UnicodeText(1073741823))
    total_ind = Column(Unicode(1))
    rad_order_no = Column(ForeignKey(u'rad_order.rad_order_no'))

    rad_order = relationship(u'RadOrder')


class RadRecTyp(Base):
    __tablename__ = 'rad_rec_typ'

    rad_rec_typ = Column(Integer, primary_key=True)
    rad_rec_typ_desc = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RbObj(Base):
    __tablename__ = 'rb_obj'

    obj_typ = Column(Integer, primary_key=True)
    obj_desc = Column(Unicode(40), nullable=False)
    obj_subcls_typ = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class RbObjAttr(Base):
    __tablename__ = 'rb_obj_attr'

    obj_typ = Column(ForeignKey(u'rb_obj.obj_typ'), primary_key=True, nullable=False)
    obj_attr_typ = Column(Integer, primary_key=True, nullable=False)
    obj_attr_desc = Column(Unicode(40), nullable=False)
    attr_val_typ = Column(Integer, nullable=False)
    rb_use = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    attr_short_desc = Column(Unicode(30))
    pt_search_ind = Column(Unicode(1))

    rb_obj = relationship(u'RbObj')


class RbObjAttrCl(Base):
    __tablename__ = 'rb_obj_attr_cls'
    __table_args__ = (
        ForeignKeyConstraint(['obj_typ', 'obj_attr_typ'], [u'rb_obj_attr.obj_typ', u'rb_obj_attr.obj_attr_typ']),
    )

    obj_typ = Column(Integer, primary_key=True, nullable=False)
    obj_attr_typ = Column(Integer, primary_key=True, nullable=False)
    rule_cls_typ = Column(ForeignKey(u'rule_cls.rule_cls_typ'), primary_key=True, nullable=False)
    rb_use = Column(Unicode(1), primary_key=True, nullable=False)
    oper_grp = Column(Integer, nullable=False)
    unit_grp = Column(Unicode(10), nullable=False)
    which_value_grp = Column(Integer, nullable=False)
    how_occur_grp = Column(Integer, nullable=False)
    ref_prd_grp = Column(Integer, nullable=False)
    ref_rgm_grp = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    rb_obj_attr = relationship(u'RbObjAttr')
    rule_cl = relationship(u'RuleCl')


class ReactionTyp(Base):
    __tablename__ = 'reaction_typ'

    reaction_typ = Column(Integer, primary_key=True)
    reaction_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RecCount(Base):
    __tablename__ = 'rec_count'

    table_name = Column(Unicode(30), primary_key=True)
    rec_count = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RefCl(Base):
    __tablename__ = 'ref_cls'

    ref_cls_id = Column(Integer, primary_key=True)
    ref_cls_desc = Column(Unicode(35), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))


class RefDef(Base):
    __tablename__ = 'ref_def'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    ref_id = Column(Unicode(15), primary_key=True, nullable=False)
    ref_desc = Column(Unicode(255))
    tbl_typ = Column(Unicode(1), nullable=False)
    actual_tbl_name = Column(Unicode(30))
    key1_col_name = Column(Unicode(64))
    key1_col_desc = Column(Unicode(30))
    key2_col_name = Column(Unicode(64))
    key2_col_desc = Column(Unicode(30))
    key3_col_name = Column(Unicode(64))
    key3_col_desc = Column(Unicode(30))
    key4_col_name = Column(Unicode(64))
    key4_col_desc = Column(Unicode(30))
    key5_col_name = Column(Unicode(64))
    key5_col_desc = Column(Unicode(30))
    desc1_col_name = Column(Unicode(64))
    desc1_col_desc = Column(Unicode(30))
    desc2_col_name = Column(Unicode(64))
    desc2_col_desc = Column(Unicode(30))
    upper_case_ind = Column(Unicode(1))
    allow_del_cd_val = Column(Unicode(1))
    allow_mod_cd_val = Column(Unicode(1))
    cd_val_min_len = Column(Integer)
    cd_val_max_len = Column(Integer)
    cd_val_desc_min_len = Column(Integer)
    cd_val_desc_max_len = Column(Integer)
    sql_where_clause = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RefXref(Base):
    __tablename__ = 'ref_xref'
    __table_args__ = (
        ForeignKeyConstraint(['a_inst_id', 'a_ref_id'], [u'ref_def.inst_id', u'ref_def.ref_id']),
        ForeignKeyConstraint(['b_inst_id', 'b_ref_id'], [u'ref_def.inst_id', u'ref_def.ref_id'])
    )

    a_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    a_ref_id = Column(Unicode(15), primary_key=True, nullable=False)
    b_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    b_ref_id = Column(Unicode(15), primary_key=True, nullable=False)
    single_multi = Column(Unicode(1))
    reltn_typ = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    xref_purpose = Column(Unicode(255))

    a_inst = relationship(u'RefDef', primaryjoin='RefXref.a_inst_id == RefDef.inst_id')
    b_inst = relationship(u'RefDef', primaryjoin='RefXref.b_inst_id == RefDef.inst_id')


class RegTaskStatu(Base):
    __tablename__ = 'reg_task_status'

    reg_track_id = Column(Integer, primary_key=True, nullable=False)
    reg_task_typ = Column(Integer, primary_key=True, nullable=False)
    task_status_typ = Column(Integer)
    task_status_date = Column(DateTime)
    cur_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RegTaskTyp(Base):
    __tablename__ = 'reg_task_typ'

    reg_task_id = Column(Integer, primary_key=True)
    inst_id = Column(Unicode(30), nullable=False)
    reg_track_typ = Column(Integer, nullable=False)
    reg_task_typ = Column(Integer, nullable=False)
    reg_task_req_ind = Column(Unicode(1))
    req_task_seq_no = Column(Integer)
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RegTrack(Base):
    __tablename__ = 'reg_track'

    reg_track_id = Column(Integer, primary_key=True)
    reg_track_typ = Column(Integer, nullable=False)
    tp_name = Column(Unicode(20))
    inst_id = Column(Unicode(30))
    pt_id = Column(Unicode(20))
    pt_ae_id = Column(Integer)
    dx_id = Column(Integer)
    task_init_date = Column(DateTime)
    appr_ready_date = Column(DateTime)
    pi_ready_sign_ind = Column(Unicode(1))
    pi_sign_ind = Column(Unicode(1))
    pi_sign_date = Column(DateTime)
    track_cmt = Column(UnicodeText(1073741823))
    report_ind = Column(Unicode(1))
    on_site_ind = Column(Unicode(1))
    cust_form_result_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RegTrackCorsp(Base):
    __tablename__ = 'reg_track_corsp'

    reg_track_corsp_id = Column(Integer, primary_key=True)
    reg_track_id = Column(Integer, nullable=False)
    cmtee_id = Column(Integer, nullable=False)
    corsp_desc = Column(Unicode(255))
    corsp_date = Column(DateTime)
    dcmnt_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RegTrackTask(Base):
    __tablename__ = 'reg_track_task'

    reg_track_task_id = Column(Integer, primary_key=True)
    reg_track_id = Column(Integer, nullable=False)
    reg_task_typ = Column(Integer, nullable=False)
    task_status_typ = Column(Integer)
    task_status_date = Column(DateTime)
    task_req_ind = Column(Unicode(1))
    dcmnt_exist_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class Religion(Base):
    __tablename__ = 'religions'

    religion_id = Column(Integer, primary_key=True)
    religion_desc = Column(Unicode(50), nullable=False)
    religion_cd = Column(Unicode(5))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class Rem(Base):
    __tablename__ = 'rem'
    __table_args__ = (
        Index('nc2_rem', 'rcpnt_userid', 'rcpnt_user_inst_id', 'date_req'),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    rem_seq_no = Column(Integer, primary_key=True, nullable=False)
    rem_name = Column(Unicode(30), nullable=False)
    rem_cls = Column(Integer, nullable=False)
    rem_typ = Column(Unicode(1), nullable=False)
    rem_status = Column(Unicode(1), nullable=False)
    rem_desc = Column(UnicodeText(1073741823))
    date_req = Column(DateTime, index=True)
    date_completed = Column(DateTime)
    req = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    date_init = Column(DateTime)
    rcpnt_userid = Column(Unicode(10))
    rcpnt_user_inst_id = Column(Unicode(30))
    rcpnt_discipline_typ = Column(Integer)
    completed_ind = Column(Unicode(1))
    rcpnt_inst_id = Column(Unicode(30))
    send_appr_ind = Column(Unicode(1))
    rem_attach_ind = Column(Unicode(1))
    rem_prcs_ind = Column(Unicode(1))
    pln_generated_ind = Column(Unicode(1))


class RemAttach(Base):
    __tablename__ = 'rem_attach'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id', 'rem_seq_no'], [u'rem.pt_id', u'rem.pt_visit_id', u'rem.rem_seq_no']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    rem_attach_id = Column(Integer, primary_key=True, nullable=False)
    rem_seq_no = Column(Integer, primary_key=True, nullable=False)
    pt_actual_id = Column(Unicode(255), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'Rem')


class RemRcpnt(Base):
    __tablename__ = 'rem_rcpnt'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id', 'rem_seq_no'], [u'rem.pt_id', u'rem.pt_visit_id', u'rem.rem_seq_no']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    rem_seq_no = Column(Integer, primary_key=True, nullable=False)
    rem_rcpnt_id = Column(Integer, primary_key=True, nullable=False)
    rcpnt_userid = Column(Unicode(10))
    rcpnt_user_inst_id = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'Rem')


class Reminder(Base):
    __tablename__ = 'reminder'

    reminder_id = Column(Integer, primary_key=True)
    reminder_name = Column(Unicode(40), nullable=False)
    reminder_msg = Column(Unicode(255), nullable=False)
    appr_userid = Column(Unicode(10))
    appr_inst_id = Column(Unicode(30))
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    active_ind = Column(Unicode(1), nullable=False)
    max_freq = Column(Integer)
    max_freq_unit = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ReminderPtListQueryXref(Base):
    __tablename__ = 'reminder_pt_list_query_xref'

    reminder_id = Column(Integer, primary_key=True, nullable=False)
    pt_list_query_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ResolutionTyp(Base):
    __tablename__ = 'resolution_typ'

    resolution_typ = Column(Integer, primary_key=True)
    resolution_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ResultMeasTyp(Base):
    __tablename__ = 'result_meas_typ'

    result_meas_typ = Column(Integer, primary_key=True)
    result_meas_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ResultMeasUnit(Base):
    __tablename__ = 'result_meas_unit'

    result_meas_unit = Column(Integer, primary_key=True)
    result_meas_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ResultUseTyp(Base):
    __tablename__ = 'result_use_typ'

    result_use_typ = Column(Integer, primary_key=True)
    result_use_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RgmSiteSeq(Base):
    __tablename__ = 'rgm_site_seq'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no'], [u'tx_pln.tp_name', u'tx_pln.tp_vers_no']),
    )

    rgm_site_seq_id = Column(Integer, primary_key=True)
    tp_cls_value_id = Column(Integer, nullable=False)
    tp_name = Column(Unicode(20), nullable=False)
    tp_vers_no = Column(Unicode(10), nullable=False)
    tp_cls_typ_id = Column(ForeignKey(u'tp_cls_typ.tp_cls_typ_id'), nullable=False)
    tp_cls_value_from = Column(Integer)
    evidence_lvl_pln_typ = Column(ForeignKey(u'pln_typ.pln_typ'))
    seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer)

    pln_typ = relationship(u'PlnTyp')
    tp_cls_typ = relationship(u'TpClsTyp')
    tx_pln = relationship(u'TxPln')


class RgmSiteSeqMh(Base):
    __tablename__ = 'rgm_site_seq_mh'

    rgm_site_seq_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, nullable=False)
    tp_name = Column(Unicode(20), nullable=False)
    tp_vers_no = Column(Unicode(10), nullable=False)
    tp_cls_typ_id = Column(Integer, nullable=False)
    tp_cls_value_from = Column(Integer)
    evidence_lvl_pln_typ = Column(Integer)
    seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RgnGrp(Base):
    __tablename__ = 'rgn_grp'

    rgn_grp_id = Column(Integer, primary_key=True)
    rgn_grp_cat_typ = Column(Integer, nullable=False)
    rgn_desc = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RgnPcZip(Base):
    __tablename__ = 'rgn_pc_zip'

    rgn_grp_id = Column(Integer, primary_key=True, nullable=False)
    pc_zip = Column(Unicode(10), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RoomTyp(Base):
    __tablename__ = 'room_typ'

    room_typ = Column(Integer, primary_key=True)
    room_desc = Column(Unicode(20), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class RuleBody(Base):
    __tablename__ = 'rule_body'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    rule_id = Column(Integer, primary_key=True, nullable=False)
    rule_id_desc = Column(Unicode(40), primary_key=True, nullable=False)
    appr = Column(Unicode(1), nullable=False)
    orig_rule_id = Column(Integer)
    orig_inst_id = Column(Unicode(30))
    rule_expl = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class RuleCl(Base):
    __tablename__ = 'rule_cls'

    rule_cls_typ = Column(Integer, primary_key=True)
    rule_cls_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class RuleComp(Base):
    __tablename__ = 'rule_comp'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'rule_id', 'rule_id_desc'], [u'rule_body.inst_id', u'rule_body.rule_id', u'rule_body.rule_id_desc']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    rule_id = Column(Integer, primary_key=True, nullable=False)
    rule_id_desc = Column(Unicode(40), primary_key=True, nullable=False)
    comp_typ = Column(Unicode(1), primary_key=True, nullable=False)
    comp_seq_no = Column(Integer, primary_key=True, nullable=False)
    comp_proc_order = Column(Integer)
    conj = Column(Unicode(3))
    and_or_order = Column(Integer)
    cf = Column(Numeric(5, 2))
    obj_typ = Column(Integer)
    obj_attr_typ = Column(Integer)
    obj_id = Column(Integer)
    comp_obj = Column(Unicode(50))
    comp_obj_id_1 = Column(Integer)
    comp_obj_id_2 = Column(Integer)
    comp_obj_desc = Column(Unicode(100))
    comp_attr = Column(Unicode(50))
    action = Column(Unicode(20))
    comp_oper = Column(Integer)
    comp_value = Column(Unicode(100))
    comp_value_typ = Column(Integer)
    uom = Column(Integer)
    which_value = Column(Integer)
    how_occurs = Column(Integer)
    cnt_inst_1 = Column(Integer)
    cnt_inst_2 = Column(Integer)
    ref_prd = Column(Integer)
    ref_prd_unit = Column(Integer)
    ref_prd_1 = Column(Integer)
    ref_prd_2 = Column(Numeric(11, 4))
    dur_amt = Column(Numeric(11, 4))
    dur_unit = Column(Integer)
    ref_rgm = Column(Unicode(30))
    ref_rgm_no = Column(Integer)
    comp_desc = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    ref_prd_day = Column(Integer)
    dur_day = Column(Integer)

    inst = relationship(u'RuleBody')


class Rx(Base):
    __tablename__ = 'rx'
    __table_args__ = (
        Index('nc2_rx', 'ord_by_inst_id', 'ord_by_userid', 'status'),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    rx_id = Column(Integer, primary_key=True, nullable=False)
    status = Column(Unicode(1), nullable=False)
    date_time_sent = Column(DateTime, index=True)
    pharmacy_id = Column(Integer)
    rx_typ = Column(ForeignKey(u'rx_typ.rx_typ'), nullable=False)
    copies_printed = Column(Integer)
    rx_cmt = Column(UnicodeText(1073741823))
    vrbl_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    ord_by_userid = Column(Unicode(10))
    ord_by_inst_id = Column(Unicode(30))
    valid_entry_ind = Column(Unicode(1))
    int_prints = Column(Integer)
    pp_int_prints = Column(Integer)
    pp_ext_prints = Column(Integer)
    appr_tstamp = Column(DateTime)
    tp_name = Column(Unicode(20))
    tp_vers_no = Column(Unicode(10))
    phase_seq_no = Column(Integer)
    cycle_no = Column(Integer)
    cycle_day = Column(Integer)
    interact_chk_ind = Column(Unicode(1))
    placer_order_no = Column(Unicode(20))
    completed_ind = Column(Unicode(1))
    bill_acct_id = Column(Integer)
    dispensed_ind = Column(Unicode(1))
    appr_userid = Column(Unicode(10))
    appr_inst_id = Column(Unicode(30))
    tx_start_date = Column(DateTime)
    not_dispensed_ind = Column(Unicode(1))
    reorder_cmt_ind = Column(Unicode(1))
    reorder_review_ind = Column(Unicode(1))
    prompt_tx_start_date_ind = Column(Unicode(1))
    app_cd = Column(Unicode(10))
    revision_no = Column(Integer, server_default=text("((1))"))
    no_cycles = Column(Integer)
    tx_line = Column(Integer)
    rx_calc_audit_desc = Column(UnicodeText(1073741823))
    tx_intent = Column(Integer)
    tx_use = Column(Integer)
    pharm_appr_userid = Column(Unicode(10))
    pharm_appr_inst_id = Column(Unicode(30))
    pharm_appr_tstamp = Column(DateTime)
    rx_print_userid = Column(Unicode(10))
    rx_print_inst_id = Column(Unicode(30))
    err_rsn_txt = Column(Unicode(255))
    supervisor_userid = Column(Unicode(10))
    supervisor_inst_id = Column(Unicode(30))
    allergies_req_ind = Column(Unicode(1))
    allergies_doc_ind = Column(Unicode(1))
    meds_req_ind = Column(Unicode(1))
    meds_doc_ind = Column(Unicode(1))
    main_typ_cls_value_id = Column(Integer)
    sub_typ_cls_value_id = Column(Integer)
    evidence_lvl_pln_typ = Column(Integer)
    pathway_exists_ind = Column(Unicode(1))

    rx_typ1 = relationship(u'RxTyp')


class RxHydra(Base):
    __tablename__ = 'rx_hydra'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    rx_id = Column(Integer, primary_key=True, nullable=False)
    rx_hydra_id = Column(Integer, primary_key=True, nullable=False)
    hydra_fluid_id = Column(ForeignKey(u'hydra_fluid.hydra_fluid_id'), nullable=False)
    hydra_vol = Column(Numeric(11, 4))
    hydra_vol_uom = Column(Integer)
    hydra_desc = Column(Unicode(100))
    hydra_seq = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    infusion_line = Column(Integer)
    order_vol = Column(Numeric(11, 4))
    order_vol_uom = Column(Integer)
    total_bag_vol = Column(Numeric(11, 4))
    bag_calc_typ = Column(Unicode(1))

    hydra_fluid = relationship(u'HydraFluid')


class RxHydraDisp(Base):
    __tablename__ = 'rx_hydra_disp'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    rx_id = Column(Integer, primary_key=True, nullable=False)
    rx_hydra_disp_id = Column(Integer, primary_key=True, nullable=False)
    disp_tstamp = Column(DateTime)
    disp_hydra_desc = Column(Unicode(100))
    disp_hydra_seq = Column(Integer)
    disp_appr_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    disp_hydra_fluid_id = Column(Integer)
    disp_hydra_vol = Column(Numeric(11, 4))
    disp_hydra_vol_uom = Column(Integer)
    infusion_line = Column(Integer)
    order_vol = Column(Numeric(11, 4))
    order_vol_uom = Column(Integer)
    total_bag_vol = Column(Numeric(11, 4))
    bag_calc_typ = Column(Unicode(1))


class RxMh(Base):
    __tablename__ = 'rx_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    rx_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    status = Column(Unicode(1), nullable=False)
    date_time_sent = Column(DateTime)
    pharmacy_id = Column(Integer)
    rx_typ = Column(Integer, nullable=False)
    copies_printed = Column(Integer)
    rx_cmt = Column(UnicodeText(1073741823))
    vrbl_id = Column(Integer)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    ord_by_userid = Column(Unicode(10))
    ord_by_inst_id = Column(Unicode(30))
    valid_entry_ind = Column(Unicode(1))
    int_prints = Column(Integer)
    pp_int_prints = Column(Integer)
    pp_ext_prints = Column(Integer)
    appr_tstamp = Column(DateTime)
    tp_name = Column(Unicode(20))
    tp_vers_no = Column(Unicode(10))
    phase_seq_no = Column(Integer)
    cycle_no = Column(Integer)
    cycle_day = Column(Integer)
    interact_chk_ind = Column(Unicode(1))
    placer_order_no = Column(Unicode(20))
    completed_ind = Column(Unicode(1))
    bill_acct_id = Column(Integer)
    dispensed_ind = Column(Unicode(1))
    appr_userid = Column(Unicode(10))
    appr_inst_id = Column(Unicode(30))
    tx_start_date = Column(DateTime)
    not_dispensed_ind = Column(Unicode(1))
    reorder_cmt_ind = Column(Unicode(1))
    reorder_review_ind = Column(Unicode(1))
    prompt_tx_start_date_ind = Column(Unicode(1))
    app_cd = Column(Unicode(10))
    no_cycles = Column(Integer)
    tx_line = Column(Integer)
    rx_calc_audit_desc = Column(UnicodeText(1073741823))
    tx_intent = Column(Integer)
    tx_use = Column(Integer)
    pharm_appr_userid = Column(Unicode(10))
    pharm_appr_inst_id = Column(Unicode(10))
    pharm_appr_tstamp = Column(DateTime)
    rx_print_userid = Column(Unicode(10))
    rx_print_inst_id = Column(Unicode(30))
    err_rsn_txt = Column(Unicode(255))
    supervisor_userid = Column(Unicode(10))
    supervisor_inst_id = Column(Unicode(30))
    allergies_req_ind = Column(Unicode(1))
    allergies_doc_ind = Column(Unicode(1))
    meds_req_ind = Column(Unicode(1))
    meds_doc_ind = Column(Unicode(1))
    main_typ_cls_value_id = Column(Integer)
    sub_typ_cls_value_id = Column(Integer)
    evidence_lvl_pln_typ = Column(Integer)
    pathway_exists_ind = Column(Unicode(1))


class RxTyp(Base):
    __tablename__ = 'rx_typ'

    rx_typ = Column(Integer, primary_key=True)
    rx_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class ScanPaperQuality(Base):
    __tablename__ = 'scan_paper_quality'

    paper_quality_cd = Column(Unicode(10), primary_key=True)
    paper_quality_desc = Column(Unicode(255), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class ScanPaperSize(Base):
    __tablename__ = 'scan_paper_size'

    paper_size_cd = Column(Unicode(10), primary_key=True)
    paper_size_desc = Column(Unicode(255), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class SchemeTyp(Base):
    __tablename__ = 'scheme_typ'

    scheme_typ = Column(Integer, primary_key=True)
    scheme_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class SeqNo(Base):
    __tablename__ = 'seq_no'

    no_typ = Column(Unicode(40), primary_key=True)
    next_no = Column(Integer, nullable=False)


class SeqTyp(Base):
    __tablename__ = 'seq_typ'

    seq_typ = Column(Unicode(20), primary_key=True, nullable=False)
    seq_table_name = Column(Unicode(30), primary_key=True, nullable=False)
    data_table_name = Column(Unicode(30), nullable=False)
    seq_table_column_name = Column(Unicode(30), nullable=False)
    seq_typ_column_name = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class SexCd(Base):
    __tablename__ = 'sex_cd'

    sex_cd = Column(Unicode(1), primary_key=True)
    sex_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class SmokingUseCd(Base):
    __tablename__ = 'smoking_use_cd'

    smoking_use_cd = Column(Unicode(1), primary_key=True)
    smoking_use_desc = Column(Unicode(50))
    recode_value = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class SourceTyp(Base):
    __tablename__ = 'source_typ'

    source_typ = Column(Integer, primary_key=True)
    source_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class SpcmnAction(Base):
    __tablename__ = 'spcmn_action'

    spcmn_action_id = Column(Integer, primary_key=True)
    spcmn_action_desc = Column(Unicode(40), nullable=False)
    spcmn_action_cd = Column(Unicode(5))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class SpcmnSource(Base):
    __tablename__ = 'spcmn_source'

    spcmn_source_id = Column(Integer, primary_key=True)
    spcmn_source_desc = Column(Unicode(30), nullable=False)
    spcmn_source_cd = Column(Unicode(5))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class Spsr(Base):
    __tablename__ = 'spsr'

    spsr = Column(Integer, primary_key=True)
    spsr_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class SsCodeTable(Base):
    __tablename__ = 'ss_code_table'

    code_typ = Column(Integer, primary_key=True, nullable=False, index=True)
    ss_code_val = Column(Unicode(10), primary_key=True, nullable=False)
    internal_typ = Column(Integer, primary_key=True, nullable=False)
    ss_code_desc = Column(Unicode(60))
    ss_data_tag = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    radonc_internal_id = Column(Integer)


class SsPharmLoad(Base):
    __tablename__ = 'ss_pharm_load'

    ncpdpid = Column(Unicode(7), primary_key=True)
    store_no = Column(Unicode(35))
    ref_no_1 = Column(Unicode(35))
    ref_no_1_qual = Column(Unicode(3))
    store_name = Column(Unicode(35))
    addr1 = Column(Unicode(35))
    addr2 = Column(Unicode(35))
    city = Column(Unicode(35))
    state = Column(Unicode(2))
    zip_cd = Column(Unicode(11))
    phone_1 = Column(Unicode(25))
    fax = Column(Unicode(25))
    email = Column(Unicode(80))
    phone_alt1 = Column(Unicode(25))
    phone_alt1_qual = Column(Unicode(3))
    phone_alt2 = Column(Unicode(25))
    phone_alt2_qual = Column(Unicode(3))
    phone_alt3 = Column(Unicode(25))
    phone_alt3_qual = Column(Unicode(3))
    phone_alt4 = Column(Unicode(25))
    phone_alt4_qual = Column(Unicode(3))
    phone_alt5 = Column(Unicode(25))
    phone_alt5_qual = Column(Unicode(3))
    active_start_dt = Column(Unicode(22))
    active_end_dt = Column(Unicode(22))
    srvc_lvl = Column(Unicode(5))
    partner_acct = Column(Unicode(35))
    last_mod_dt = Column(Unicode(22))
    open24hr_flag = Column(Unicode(1))
    cross_st = Column(Unicode(35))
    rec_chg = Column(Unicode(1))
    old_srvc_lvl = Column(Unicode(5))
    srvc_lvl_txt = Column(Unicode(100))
    srvc_lvl_txt_chg = Column(Unicode(100))
    version = Column(Unicode(5))
    npi = Column(Unicode(10))
    pharm_typ = Column(Unicode(1))
    pharm_spec_cd = Column(Integer)


class StageBasi(Base):
    __tablename__ = 'stage_basis'

    stage_basis = Column(Unicode(1), primary_key=True)
    stage_basis_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class StageDefCulture(Base):
    __tablename__ = 'stage_def_culture'

    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    stage_cd = Column(Unicode(20), primary_key=True, nullable=False)
    stage_desc = Column(Unicode(20), nullable=False)
    stage_desc_en = Column(Unicode(20), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class StageTran(Base):
    __tablename__ = 'stage_trans'

    stage_defn = Column(Unicode(20), primary_key=True, nullable=False)
    stage = Column(Unicode(20), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class StatusCat(Base):
    __tablename__ = 'status_cat'

    status_cat_id = Column(Integer, primary_key=True)
    status_cat_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class StatusCatValue(Base):
    __tablename__ = 'status_cat_value'

    status_cat_id = Column(ForeignKey(u'status_cat.status_cat_id'), primary_key=True, nullable=False)
    status_value_id = Column(Integer, primary_key=True, nullable=False)
    status_value_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    status_cat = relationship(u'StatusCat')


class StatusTyp(Base):
    __tablename__ = 'status_typ'

    status_typ = Column(Integer, primary_key=True)
    true_desc = Column(Unicode(40), nullable=False)
    false_desc = Column(Unicode(40), nullable=False)
    null_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class StatusTypCulture(Base):
    __tablename__ = 'status_typ_culture'

    status_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    lookup_desc_true = Column(Unicode(40))
    lookup_desc_false = Column(Unicode(40))
    lookup_desc_null = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class Stkh(Base):
    __tablename__ = 'stkh'

    stkh_id = Column(Unicode(20), primary_key=True)
    stkh_cd = Column(Unicode(1), nullable=False)
    designation_txt = Column(Unicode(255))
    prof_typ = Column(ForeignKey(u'prof_typ.prof_typ'))
    discipline_typ = Column(ForeignKey(u'discipline_typ.discipline_typ'))
    org_typ = Column(ForeignKey(u'org_typ.org_typ'))
    internal_ind = Column(Unicode(1), nullable=False)
    pref_corsp_mthd_cd = Column(Unicode(1), nullable=False)
    eff_date = Column(DateTime, nullable=False)
    end_date = Column(DateTime)
    end_reason_cd = Column(Unicode(3))
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    internal_sys_ind = Column(Unicode(1))
    city = Column(Unicode(30))
    sig_pic = Column(LargeBinary)
    allow_sig_ind = Column(Unicode(1))
    ResourceSer = Column(BigInteger)

    discipline_typ1 = relationship(u'DisciplineTyp')
    org_typ1 = relationship(u'OrgTyp')
    prof_typ1 = relationship(u'ProfTyp')


class StkhAddres(Base):
    __tablename__ = 'stkh_address'
    __table_args__ = (
        ForeignKeyConstraint(['address_cd', 'stkh_cd'], [u'address_cd.address_cd', u'address_cd.stkh_cd']),
    )

    stkh_id = Column(ForeignKey(u'stkh.stkh_id'), primary_key=True, nullable=False)
    stkh_address_id = Column(Integer, primary_key=True, nullable=False)
    address_cd = Column(Unicode(2), nullable=False)
    stkh_cd = Column(Unicode(1), nullable=False)
    address_1 = Column(Unicode(30))
    address_2 = Column(Unicode(30))
    address_3 = Column(Unicode(30))
    city = Column(Unicode(30))
    prv_state_id = Column(Integer)
    pc_zip = Column(Unicode(10))
    country_id = Column(Integer)
    county = Column(Unicode(30))
    eff_date = Column(DateTime, nullable=False)
    end_date = Column(DateTime, nullable=False)
    end_reason_cd = Column(Unicode(3))
    active_entry_ind = Column(Unicode(1), nullable=False)
    pref_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    prv_state = Column(Unicode(30))
    pc_zip_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))

    address_cd1 = relationship(u'AddressCd')
    pc_zip_fmt = relationship(u'FmtField')
    stkh = relationship(u'Stkh')


class StkhDesignation(Base):
    __tablename__ = 'stkh_designation'

    stkh_id = Column(ForeignKey(u'stkh.stkh_id'), primary_key=True, nullable=False)
    designation_typ = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    stkh = relationship(u'Stkh')


class StkhEmail(Base):
    __tablename__ = 'stkh_email'
    __table_args__ = (
        ForeignKeyConstraint(['email_cd', 'stkh_cd'], [u'email_cd.email_cd', u'email_cd.stkh_cd']),
    )

    stkh_id = Column(ForeignKey(u'stkh.stkh_id'), primary_key=True, nullable=False)
    stkh_email_id = Column(Integer, primary_key=True, nullable=False)
    email_cd = Column(Unicode(2), nullable=False)
    stkh_cd = Column(Unicode(1), nullable=False)
    email_address = Column(Unicode(255), nullable=False)
    eff_date = Column(DateTime, nullable=False)
    end_date = Column(DateTime)
    end_reason_cd = Column(Unicode(3))
    active_entry_ind = Column(Unicode(1), nullable=False)
    pref_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    stkh_stkh_id = Column(Unicode(14))

    email_cd1 = relationship(u'EmailCd')
    stkh = relationship(u'Stkh')


class StkhInstKeyCd(Base):
    __tablename__ = 'stkh_inst_key_cd'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    stkh_key_cd = Column(ForeignKey(u'stkh_key_cd.stkh_key_cd'), primary_key=True, nullable=False)
    role_typ = Column(Integer, nullable=False)
    inst_label = Column(Unicode(30), nullable=False)
    inst_desc = Column(Unicode(255))
    sys_gnrt_ind = Column(Unicode(1), nullable=False)
    format_mask = Column(Unicode(60))
    req_ind = Column(Unicode(1), nullable=False)
    active_ind = Column(Unicode(1), nullable=False)
    visible_ind = Column(Unicode(1), nullable=False)
    unique_ind = Column(Unicode(1), nullable=False)
    unique_hist_ind = Column(Unicode(1), nullable=False)
    next_seq = Column(Unicode(15))
    start_val = Column(Unicode(15))
    end_val = Column(Unicode(15))
    increment = Column(Integer)
    prefix_list = Column(Unicode(80))
    cur_prefix = Column(Unicode(10))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    rx_print_ind = Column(Unicode(1))

    stkh_key_cd1 = relationship(u'StkhKeyCd')


class StkhKey(Base):
    __tablename__ = 'stkh_key'

    stkh_id = Column(ForeignKey(u'stkh.stkh_id'), primary_key=True, nullable=False)
    stkh_key_id = Column(Integer, primary_key=True, nullable=False)
    stkh_key_cd = Column(ForeignKey(u'stkh_key_cd.stkh_key_cd'), nullable=False)
    role_typ = Column(Integer, nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    key_value = Column(Unicode(30), nullable=False)
    key_value_unformat = Column(Unicode(30), nullable=False)
    upper_key_value = Column(Unicode(30), nullable=False, index=True)
    cur_value_ind = Column(Unicode(1), nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    eff_date = Column(DateTime, nullable=False)
    expiry_date = Column(DateTime)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    stkh = relationship(u'Stkh')
    stkh_key_cd1 = relationship(u'StkhKeyCd')


class StkhKeyCd(Base):
    __tablename__ = 'stkh_key_cd'

    stkh_key_cd = Column(Integer, primary_key=True)
    role_typ = Column(ForeignKey(u'stkh_role_typ.role_typ'), nullable=False)
    key_scope_typ = Column(ForeignKey(u'pt_key_scope_typ.pt_key_scope_typ'), nullable=False)
    key_label = Column(Unicode(40), nullable=False)
    key_desc = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    pt_key_scope_typ = relationship(u'PtKeyScopeTyp')
    stkh_role_typ = relationship(u'StkhRoleTyp')


class StkhName(Base):
    __tablename__ = 'stkh_name'
    __table_args__ = (
        ForeignKeyConstraint(['name_cd', 'stkh_cd'], [u'name_cd.name_cd', u'name_cd.stkh_cd']),
    )

    stkh_id = Column(ForeignKey(u'stkh.stkh_id'), primary_key=True, nullable=False)
    stkh_name_id = Column(Integer, primary_key=True, nullable=False)
    name_cd = Column(Unicode(1), nullable=False)
    stkh_cd = Column(Unicode(1), nullable=False)
    first_name = Column(Unicode(30))
    initial = Column(Unicode(2))
    last_name = Column(Unicode(30))
    title_typ = Column(Integer)
    org_name = Column(Unicode(40))
    upper_name = Column(Unicode(40), index=True)
    active_entry_ind = Column(Unicode(1), nullable=False)
    eff_date = Column(DateTime, nullable=False)
    end_date = Column(DateTime, nullable=False)
    end_reason_cd = Column(Unicode(3))
    pref_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    upper_first_name = Column(Unicode(30))
    dsp_name = Column(Unicode(80))

    name_cd1 = relationship(u'NameCd')
    stkh = relationship(u'Stkh')


class StkhPhone(Base):
    __tablename__ = 'stkh_phone'
    __table_args__ = (
        ForeignKeyConstraint(['phone_cd', 'stkh_cd'], [u'phone_cd.phone_cd', u'phone_cd.stkh_cd']),
    )

    stkh_id = Column(ForeignKey(u'stkh.stkh_id'), primary_key=True, nullable=False)
    stkh_phone_id = Column(Integer, primary_key=True, nullable=False)
    phone_cd = Column(Unicode(2), nullable=False)
    stkh_cd = Column(Unicode(1), nullable=False)
    phone_no = Column(Unicode(28))
    ext_no = Column(Unicode(10))
    country_id = Column(Integer)
    eff_date = Column(DateTime, nullable=False)
    end_date = Column(DateTime)
    end_reason_cd = Column(Unicode(3))
    active_entry_ind = Column(Unicode(1), nullable=False)
    pref_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    stkh_stkh_id = Column(Unicode(14))
    phone_no_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))

    phone_cd1 = relationship(u'PhoneCd')
    phone_no_fmt = relationship(u'FmtField')
    stkh = relationship(u'Stkh')


class StkhRole(Base):
    __tablename__ = 'stkh_role'

    stkh_id = Column(ForeignKey(u'stkh.stkh_id'), primary_key=True, nullable=False)
    stkh_role_id = Column(Integer, primary_key=True, nullable=False)
    role_typ = Column(ForeignKey(u'stkh_role_typ.role_typ'), nullable=False, index=True)
    eff_date = Column(DateTime, nullable=False)
    end_date = Column(DateTime)
    end_reason_cd = Column(Unicode(3))
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    stkh_cd = Column(Unicode(1))
    inactive_reason_txt = Column(Unicode(255))

    stkh_role_typ = relationship(u'StkhRoleTyp')
    stkh = relationship(u'Stkh')


class StkhRoleReltn(Base):
    __tablename__ = 'stkh_role_reltn'

    role_reltn_typ = Column(Integer, primary_key=True)
    from_role_typ = Column(ForeignKey(u'stkh_role_typ.role_typ'), nullable=False)
    from_stkh_cd = Column(Unicode(1), nullable=False)
    to_role_typ = Column(ForeignKey(u'stkh_role_typ.role_typ'), nullable=False)
    to_stkh_cd = Column(Unicode(1), nullable=False)
    role_reltn_desc = Column(Unicode(255), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    stkh_role_typ = relationship(u'StkhRoleTyp', primaryjoin='StkhRoleReltn.from_role_typ == StkhRoleTyp.role_typ')
    stkh_role_typ1 = relationship(u'StkhRoleTyp', primaryjoin='StkhRoleReltn.to_role_typ == StkhRoleTyp.role_typ')


class StkhRoleTyp(Base):
    __tablename__ = 'stkh_role_typ'

    role_typ = Column(Integer, primary_key=True)
    role_desc = Column(Unicode(40), nullable=False)
    stkh_cd = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class StkhSeq(Base):
    __tablename__ = 'stkh_seq'

    stkh_id = Column(Unicode(20), primary_key=True, nullable=False)
    seq_typ = Column(Unicode(20), primary_key=True, nullable=False)
    seq_no = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class StkhStkhXref(Base):
    __tablename__ = 'stkh_stkh_xref'
    __table_args__ = (
        Index('nc2_stkh_stkh_xref', 'to_stkh_id', 'to_role_typ'),
        Index('nc1_stkh_stkh_xref', 'from_stkh_id', 'from_role_typ')
    )

    stkh_stkh_id = Column(Unicode(14), primary_key=True)
    role_reltn_typ = Column(ForeignKey(u'stkh_role_reltn.role_reltn_typ'), nullable=False)
    from_stkh_id = Column(ForeignKey(u'stkh.stkh_id'), nullable=False)
    from_role_typ = Column(Integer, nullable=False)
    to_stkh_id = Column(ForeignKey(u'stkh.stkh_id'), nullable=False)
    to_role_typ = Column(Integer, nullable=False)
    pref_corsp_mthd_cd = Column(Unicode(1))
    pref_mail_ind = Column(Unicode(1), nullable=False)
    pref_fax_ind = Column(Unicode(1), nullable=False)
    pref_email_ind = Column(Unicode(1), nullable=False)
    eff_date = Column(DateTime, nullable=False)
    end_date = Column(DateTime)
    end_reason_cd = Column(Unicode(3))
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    loc_desc = Column(Unicode(40))

    from_stkh = relationship(u'Stkh', primaryjoin='StkhStkhXref.from_stkh_id == Stkh.stkh_id')
    stkh_role_reltn = relationship(u'StkhRoleReltn')
    to_stkh = relationship(u'Stkh', primaryjoin='StkhStkhXref.to_stkh_id == Stkh.stkh_id')


class StockItemBatch(Base):
    __tablename__ = 'stock_item_batch'

    stock_item_batch_id = Column(Integer, primary_key=True)
    product_id = Column(ForeignKey(u'product.product_id'), nullable=False)
    grp_ind = Column(Unicode(1), nullable=False)
    lot_no = Column(Unicode(50))
    expiry_date = Column(DateTime)
    expiry_date_cd = Column(Integer)
    serial_no = Column(Unicode(40))
    batch_status_typ = Column(Integer)
    loaded_date = Column(DateTime)
    group_qty = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    product = relationship(u'Product')


class StockItemBatchLocXref(Base):
    __tablename__ = 'stock_item_batch_loc_xref'

    stock_batch_id = Column(ForeignKey(u'stock_item_batch.stock_item_batch_id'), primary_key=True, nullable=False)
    storage_loc_id = Column(ForeignKey(u'storage_loc.storage_loc_id'), primary_key=True, nullable=False)
    stock_qty = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    stock_batch = relationship(u'StockItemBatch')
    storage_loc = relationship(u'StorageLoc')


class StockTrx(Base):
    __tablename__ = 'stock_trx'

    stock_trx_id = Column(Integer, primary_key=True)
    disp_loc_id = Column(Integer, nullable=False)
    storage_loc_id = Column(Integer)
    product_id = Column(Integer, nullable=False)
    stock_trx_typ = Column(Integer, nullable=False)
    stock_trx_date = Column(DateTime)
    trx_qty = Column(Integer)
    pt_id = Column(Unicode(20))
    disp_id = Column(Integer)
    rx_hydra_disp_id = Column(Integer)
    appr_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    product_size = Column(Unicode(15))
    product_size_unit = Column(Integer)
    drug_batch_id = Column(ForeignKey(u'drug_batch.drug_batch_id'))
    drug_batch_agt_id = Column(ForeignKey(u'drug_batch_agt.drug_batch_agt_id'))
    drug_batch_diluent_ind = Column(Unicode(1))

    drug_batch_agt = relationship(u'DrugBatchAgt')
    drug_batch = relationship(u'DrugBatch')


class StorageLoc(Base):
    __tablename__ = 'storage_loc'

    storage_loc_id = Column(Integer, primary_key=True)
    storage_loc_name = Column(Unicode(50), nullable=False)
    storage_loc_desc = Column(Unicode(255))
    storage_loc_typ = Column(Integer, nullable=False)
    storage_cls_typ = Column(Integer, nullable=False)
    parent_storage_loc_id = Column(Integer)
    storage_loc_map_id = Column(Unicode(30))
    storage_loc_label = Column(Unicode(30))
    disp_loc_id = Column(ForeignKey(u'disp_loc.disp_loc_id'))
    product_storage_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    disp_loc = relationship(u'DispLoc')


class SymbolCd(Base):
    __tablename__ = 'symbol_cd'

    symbol_cd = Column(Unicode(3), primary_key=True)
    symbol_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


t_table_view = Table(
    'table_view', metadata,
    Column('pbt_tnam', Unicode(129), nullable=False)
)


class Task(Base):
    __tablename__ = 'task'

    task_id = Column(Integer, primary_key=True)
    task_name = Column(Unicode(50), nullable=False)
    task_cat_ind = Column(Unicode(1))
    task_cat_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TaskAreaTyp(Base):
    __tablename__ = 'task_area_typ'

    task_area_typ = Column(Integer, primary_key=True)
    task_area_desc = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    seq_no = Column(Integer)


class TaskCat(Base):
    __tablename__ = 'task_cat'

    task_cat_id = Column(Integer, primary_key=True)
    task_cat_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TaskFcnUser(Base):
    __tablename__ = 'task_fcn_user'

    userid = Column(Unicode(10), primary_key=True, nullable=False)
    user_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    visit_reason_id = Column(Integer, primary_key=True, nullable=False)
    cat_name_typ = Column(ForeignKey(u'agenda_cat_typ.cat_name_typ'), primary_key=True, nullable=False)
    cat_seq_user = Column(Integer)
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    req_ind = Column(Unicode(1))

    agenda_cat_typ = relationship(u'AgendaCatTyp')


class TempAgt(Base):
    __tablename__ = 'temp_agt'

    drug_desc_id = Column(Unicode(6), primary_key=True)
    agt_name = Column(Unicode(40))
    gpi = Column(Unicode(14))
    upper_agt_name = Column(Unicode(40))


class TemplateUseCd(Base):
    __tablename__ = 'template_use_cd'

    template_use_cd = Column(Unicode(2), primary_key=True)
    template_use_desc = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class Test(Base):
    __tablename__ = 'test'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'bill_acct_id'], [u'bill_acct.pt_id', u'bill_acct.bill_acct_id']),
        ForeignKeyConstraint(['pt_id', 'bill_acct_id'], [u'bill_acct.pt_id', u'bill_acct.bill_acct_id']),
        ForeignKeyConstraint(['test_inst_id', 'test_fac_id', 'fac_rqstn_no'], [u'fac_rqstn.inst_id', u'fac_rqstn.fac_id', u'fac_rqstn.fac_rqstn_no']),
        Index('nc3_test', 'inst_id', 'cert_stkh_id', 'cancel_ind', 'prty_of_srv'),
        Index('nc2_test', 'asc_no', 'asc_datetime'),
        Index('nc7_test', 'cert_stkh_id', 'perform_date_start'),
        Index('nc5_test', 'result_appr_ind', 'pt_id', 'pt_visit_id', 'inst_id', 'fac_rqstn_desc', 'order_appr_ind', 'cancel_ind', 'result_ind'),
        Index('nc1_test', 'rqstn_inst_id', 'rqstn_userid', 'result_appr_ind', 'pt_id', 'pt_visit_id', 'test_id')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    test_inst_id = Column(Unicode(30), index=True)
    test_fac_id = Column(Integer)
    fac_rqstn_no = Column(Unicode(20))
    prty_of_srv = Column(ForeignKey(u'prty_of_srv.prty_of_srv'))
    datetime_ordered = Column(DateTime)
    date_test_request = Column(DateTime, index=True)
    test_request_typ = Column(ForeignKey(u'test_request_typ.test_request_typ'))
    perform_date_start = Column(DateTime)
    perform_date_end = Column(DateTime)
    vrbl_id = Column(Integer)
    order_vrbl_id = Column(Integer)
    no_prints = Column(Integer)
    sent_flag = Column(Unicode(1))
    send_status = Column(Unicode(1))
    rqstn_userid = Column(Unicode(10))
    rqstn_inst_id = Column(Unicode(30))
    print_rqstn_flag = Column(Unicode(1))
    fac_rqstn_desc = Column(Unicode(40))
    include_spcmn = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    intf_prcs_ind = Column(Unicode(1))
    ins_co_ind = Column(Unicode(1))
    order_appr_ind = Column(Unicode(1))
    result_appr_ind = Column(Unicode(1))
    cancel_ind = Column(Unicode(1))
    audit_ind = Column(Unicode(1))
    order_cmt_ind = Column(Unicode(1))
    test_cmt_ind = Column(Unicode(1))
    spcmn_collc_ind = Column(Unicode(1))
    asc_no = Column(Unicode(15))
    asc_datetime = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    result_ind = Column(Unicode(1))
    partial_ind = Column(Unicode(1))
    cert_stkh_id = Column(Unicode(20))
    bill_acct_id = Column(Integer)
    producer_stkh_id = Column(Unicode(20))
    gnrc_rqstn_ind = Column(Unicode(1))
    read_only_ind = Column(Unicode(1))
    rqstn_stkh_id = Column(Unicode(20), index=True)
    revision_no = Column(Integer, server_default=text("((1))"))
    app_cd = Column(Unicode(10))
    vitals_ind = Column(Unicode(30))
    account_billing_code_ser = Column(BigInteger)

    prty_of_srv1 = relationship(u'PrtyOfSrv')
    pt = relationship(u'BillAcct', primaryjoin='Test.pt_id == BillAcct.pt_id')
    pt1 = relationship(u'BillAcct', primaryjoin='Test.pt_id == BillAcct.pt_id')
    test_inst = relationship(u'FacRqstn')
    test_request_typ1 = relationship(u'TestRequestTyp')


class TestAsmtDesc(Base):
    __tablename__ = 'test_asmt_desc'

    userid = Column(Unicode(10), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    comp_asmt_desc = Column(Unicode(50), primary_key=True, nullable=False)
    comp_asmt_level = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class TestCmt(Base):
    __tablename__ = 'test_cmt'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    test_cmt = Column(Unicode(255))
    test_cmt_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))
    app_cd = Column(Unicode(10))


class TestCmtMh(Base):
    __tablename__ = 'test_cmt_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    test_cmt = Column(Unicode(255))
    test_cmt_txt = Column(UnicodeText(1073741823))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    app_cd = Column(Unicode(10))


class TestComp(Base):
    __tablename__ = 'test_comp'

    typ_of_test = Column(ForeignKey(u'typ_of_test.typ_of_test'), primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    comp_order_no = Column(Integer)
    comp_typ = Column(ForeignKey(u'comp_typ.comp_typ'), nullable=False)
    test_group = Column(Unicode(20))
    group_only_ind = Column(Unicode(1))
    status_typ = Column(ForeignKey(u'status_typ.status_typ'))
    uom_req_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    sex_cd = Column(Unicode(1))
    loinc_cd = Column(ForeignKey(u'loinc.loinc_cd'))

    comp_typ1 = relationship(u'CompTyp')
    loinc = relationship(u'Loinc')
    status_typ1 = relationship(u'StatusTyp')
    typ_of_test1 = relationship(u'TypOfTest')


class TestCompCulture(Base):
    __tablename__ = 'test_comp_culture'

    typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    lookup_desc = Column(Unicode(100))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    test_group = Column(Unicode(20))
    test_group_lookup_desc = Column(Unicode(100))


class TestDx(Base):
    __tablename__ = 'test_dx'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'dx_id'], [u'pt_dx.pt_id', u'pt_dx.dx_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    dx_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    test_dx_seq_no = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtDx')


class TestDxOvride(Base):
    __tablename__ = 'test_dx_ovride'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    test_result_group_id = Column(Integer, primary_key=True, nullable=False)
    ovride_rsn_cmt = Column(Unicode(255), nullable=False)
    ovride_inst_id = Column(Unicode(30), nullable=False)
    ovride_userid = Column(Unicode(10), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class TestGroup(Base):
    __tablename__ = 'test_group'

    typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    test_group_name = Column(Unicode(30), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TestGroupComp(Base):
    __tablename__ = 'test_group_comp'

    typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    test_group_name = Column(Unicode(30), primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    comp_seq = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TestMh(Base):
    __tablename__ = 'test_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    test_inst_id = Column(Unicode(30))
    test_fac_id = Column(Integer)
    fac_rqstn_no = Column(Unicode(20))
    prty_of_srv = Column(Integer)
    datetime_ordered = Column(DateTime)
    date_test_request = Column(DateTime)
    test_request_typ = Column(Integer)
    perform_date_start = Column(DateTime)
    perform_date_end = Column(DateTime)
    vrbl_id = Column(Integer)
    order_vrbl_id = Column(Integer)
    no_prints = Column(Integer)
    sent_flag = Column(Unicode(1))
    send_status = Column(Unicode(1))
    rqstn_userid = Column(Unicode(10))
    rqstn_inst_id = Column(Unicode(30))
    print_rqstn_flag = Column(Unicode(1))
    fac_rqstn_desc = Column(Unicode(40))
    include_spcmn = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    intf_prcs_ind = Column(Unicode(1))
    ins_co_ind = Column(Unicode(1))
    order_appr_ind = Column(Unicode(1))
    result_appr_ind = Column(Unicode(1))
    cancel_ind = Column(Unicode(1))
    audit_ind = Column(Unicode(1))
    order_cmt_ind = Column(Unicode(1))
    test_cmt_ind = Column(Unicode(1))
    spcmn_collc_ind = Column(Unicode(1))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    result_ind = Column(Unicode(1))
    asc_no = Column(Unicode(15))
    asc_datetime = Column(DateTime)
    partial_ind = Column(Unicode(1))
    cert_stkh_id = Column(Unicode(20))
    bill_acct_id = Column(Integer)
    producer_stkh_id = Column(Unicode(20))
    gnrc_rqstn_ind = Column(Unicode(1))
    read_only_ind = Column(Unicode(1))
    rqstn_stkh_id = Column(Unicode(20))
    app_cd = Column(Unicode(10))


class TestOrderCmt(Base):
    __tablename__ = 'test_order_cmt'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    test_order_cmt = Column(Unicode(255))
    test_order_cmt_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TestOrderDriver(Base):
    __tablename__ = 'test_order_driver'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_ato_id = Column(Integer, primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    pt_event_id = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    test_id = Column(Integer)
    pt_visit_id = Column(Integer)
    fac_rqstn_no = Column(Unicode(20))
    fac_group_id = Column(Integer)


class TestRequestTyp(Base):
    __tablename__ = 'test_request_typ'

    test_request_typ = Column(Integer, primary_key=True)
    test_request_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TestResult(Base):
    __tablename__ = 'test_result'
    __table_args__ = (
        Index('nc2_test_result', 'typ_of_test', 'comp_name', 'date_test_pt_test'),
        Index('nc1_test_result', 'typ_of_test', 'comp_name', 'trans_log_tstamp')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    test_result_group_id = Column(Integer, primary_key=True, nullable=False)
    test_result_id = Column(Integer, primary_key=True, nullable=False)
    symbol_cd = Column(ForeignKey(u'symbol_cd.symbol_cd'))
    comp_typ = Column(Integer, nullable=False)
    typ_of_test = Column(Unicode(20), nullable=False)
    comp_name = Column(Unicode(30), nullable=False)
    fac_comp_name = Column(Unicode(30), nullable=False)
    comp_sub_id = Column(Unicode(10))
    test_value = Column(Numeric(11, 4))
    test_value_string = Column(Unicode(255))
    test_value_txt_ind = Column(Unicode(1))
    test_value_txt = Column(UnicodeText(1073741823))
    status_typ = Column(Integer)
    test_value_status_cd = Column(Unicode(1))
    min_norm = Column(Numeric(11, 4))
    max_norm = Column(Numeric(11, 4))
    uom = Column(Integer)
    unit_desc = Column(Unicode(40))
    comp_order_no = Column(Integer)
    date_test_pt_test = Column(DateTime)
    req_flag = Column(Unicode(1))
    rule_ind = Column(Unicode(1))
    this_visit_req_ind = Column(Unicode(1))
    unsol_ind = Column(Unicode(1))
    min_reason = Column(Numeric(11, 4))
    max_reason = Column(Numeric(11, 4))
    calc_typ = Column(ForeignKey(u'calc_typ.calc_typ'))
    calc_reltn_cd = Column(Unicode(1))
    calc_group = Column(Integer)
    dose_calc_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    audit_ind = Column(Unicode(1))
    result_appr_ind = Column(Unicode(1))
    result_ind = Column(Unicode(1))
    result_cmt_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    calc_prcs_cd = Column(Unicode(1))
    producer_stkh_id = Column(Unicode(20))
    corrected_entry_ind = Column(Unicode(1))
    alert_ind = Column(Unicode(1))
    alert_auto_ind = Column(Unicode(1))
    alert_hx_ind = Column(Unicode(1))
    abnormal_flag_cd = Column(Unicode(5))
    read_only_ind = Column(Unicode(1))
    err_rsn_txt = Column(Unicode(255))
    dsp_ref_range = Column(Unicode(20))
    dsp_ref_range_uninterp_ind = Column(Unicode(1))
    revision_no = Column(Integer, server_default=text("((1))"))
    app_cd = Column(Unicode(10))
    min_abs = Column(Numeric(11, 4))
    max_abs = Column(Numeric(11, 4))

    calc_typ1 = relationship(u'CalcTyp')
    symbol_cd1 = relationship(u'SymbolCd')


class TestResultAlert(Base):
    __tablename__ = 'test_result_alert'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    test_result_group_id = Column(Integer, primary_key=True, nullable=False)
    test_result_id = Column(Integer, primary_key=True, nullable=False)
    alert_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TestResultCmt(Base):
    __tablename__ = 'test_result_cmt'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    test_result_group_id = Column(Integer, primary_key=True, nullable=False)
    test_result_id = Column(Integer, primary_key=True, nullable=False)
    test_result_cmt = Column(Unicode(255))
    test_result_cmt_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))
    app_cd = Column(Unicode(10))


class TestResultCmtMh(Base):
    __tablename__ = 'test_result_cmt_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    test_result_group_id = Column(Integer, primary_key=True, nullable=False)
    test_result_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    test_result_cmt = Column(Unicode(255))
    test_result_cmt_txt = Column(UnicodeText(1073741823))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    app_cd = Column(Unicode(10))


class TestResultGroup(Base):
    __tablename__ = 'test_result_group'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False, index=True)
    test_id = Column(Integer, primary_key=True, nullable=False)
    test_result_group_id = Column(Integer, primary_key=True, nullable=False)
    group_seq_no = Column(Integer, nullable=False)
    fac_group_id = Column(Integer)
    fac_group_name = Column(Unicode(30))
    group_ind = Column(Unicode(1))
    fac_rqstn_order_no = Column(Integer)
    fac_rqstn_cat_desc = Column(Unicode(40))
    placer_order_no = Column(Unicode(20))
    group_order_no = Column(Integer)
    perform_date_start = Column(DateTime)
    perform_date_end = Column(DateTime)
    intf_filler_no = Column(Unicode(75))
    intf_app_parm_id = Column(Unicode(10))
    spcmn_collc_ind = Column(Unicode(1))
    order_appr_ind = Column(Unicode(1))
    cancel_ind = Column(Unicode(1))
    audit_ind = Column(Unicode(1))
    result_appr_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    order_cmt_ind = Column(Unicode(1))
    result_cmt_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    result_ind = Column(Unicode(1))
    producer_stkh_id = Column(Unicode(20))
    extrnl_placer_order_no = Column(Unicode(75))
    spsr_stkh_id = Column(Unicode(20))
    order_reason_desc = Column(Unicode(255))
    read_only_ind = Column(Unicode(1))
    revision_no = Column(Integer, server_default=text("((1))"))
    spcmn_rcvd_date = Column(DateTime)
    results_rpt_date = Column(DateTime)
    app_cd = Column(Unicode(10))


class TestResultGroupCmt(Base):
    __tablename__ = 'test_result_group_cmt'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    test_result_group_id = Column(Integer, primary_key=True, nullable=False)
    test_result_group_cmt = Column(Unicode(255))
    test_result_group_cmt_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TestResultGroupMh(Base):
    __tablename__ = 'test_result_group_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    test_result_group_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    group_seq_no = Column(Integer, nullable=False)
    fac_group_id = Column(Integer)
    fac_group_name = Column(Unicode(30))
    group_ind = Column(Unicode(1))
    fac_rqstn_order_no = Column(Integer)
    fac_rqstn_cat_desc = Column(Unicode(40))
    placer_order_no = Column(Unicode(20))
    group_order_no = Column(Integer)
    perform_date_start = Column(DateTime)
    perform_date_end = Column(DateTime)
    intf_filler_no = Column(Unicode(75))
    intf_app_parm_id = Column(Unicode(10))
    spcmn_collc_ind = Column(Unicode(1))
    order_appr_ind = Column(Unicode(1))
    cancel_ind = Column(Unicode(1))
    audit_ind = Column(Unicode(1))
    result_appr_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    order_cmt_ind = Column(Unicode(1))
    result_cmt_ind = Column(Unicode(1))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    result_ind = Column(Unicode(1))
    producer_stkh_id = Column(Unicode(20))
    extrnl_placer_order_no = Column(Unicode(75))
    read_only_ind = Column(Unicode(1))
    spcmn_rcvd_date = Column(DateTime)
    results_rpt_date = Column(DateTime)
    order_reason_desc = Column(Unicode(255))
    spsr_stkh_id = Column(Unicode(20))
    app_cd = Column(Unicode(10))


class TestResultGroupOrderCmt(Base):
    __tablename__ = 'test_result_group_order_cmt'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    test_result_group_id = Column(Integer, primary_key=True, nullable=False)
    test_result_group_order_cmt = Column(Unicode(255))
    test_result_group_order_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TestResultGroupSpcmn(Base):
    __tablename__ = 'test_result_group_spcmn'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    test_result_group_id = Column(Integer, primary_key=True, nullable=False)
    test_spcmn_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TestResultMh(Base):
    __tablename__ = 'test_result_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    test_result_group_id = Column(Integer, primary_key=True, nullable=False)
    test_result_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    symbol_cd = Column(Unicode(3))
    comp_typ = Column(Integer, nullable=False)
    typ_of_test = Column(Unicode(20), nullable=False)
    comp_name = Column(Unicode(30), nullable=False)
    fac_comp_name = Column(Unicode(30), nullable=False)
    comp_sub_id = Column(Unicode(10))
    test_value = Column(Numeric(11, 4))
    test_value_string = Column(Unicode(255))
    test_value_txt_ind = Column(Unicode(1))
    test_value_txt = Column(UnicodeText(1073741823))
    status_typ = Column(Integer)
    test_value_status_cd = Column(Unicode(1))
    min_norm = Column(Numeric(11, 4))
    max_norm = Column(Numeric(11, 4))
    uom = Column(Integer)
    unit_desc = Column(Unicode(40))
    comp_order_no = Column(Integer)
    date_test_pt_test = Column(DateTime)
    req_flag = Column(Unicode(1))
    rule_ind = Column(Unicode(1))
    this_visit_req_ind = Column(Unicode(1))
    unsol_ind = Column(Unicode(1))
    min_reason = Column(Numeric(11, 4))
    max_reason = Column(Numeric(11, 4))
    calc_typ = Column(Integer)
    calc_reltn_cd = Column(Unicode(1))
    calc_group = Column(Integer)
    dose_calc_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    audit_ind = Column(Unicode(1))
    result_appr_ind = Column(Unicode(1))
    result_ind = Column(Unicode(1))
    result_cmt_ind = Column(Unicode(1))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    calc_prcs_cd = Column(Unicode(1))
    producer_stkh_id = Column(Unicode(20))
    corrected_entry_ind = Column(Unicode(1))
    alert_ind = Column(Unicode(1))
    alert_auto_ind = Column(Unicode(1))
    alert_hx_ind = Column(Unicode(1))
    abnormal_flag_cd = Column(Unicode(5))
    read_only_ind = Column(Unicode(1))
    err_rsn_txt = Column(Unicode(255))
    dsp_ref_range = Column(Unicode(20))
    dsp_ref_range_uninterp_ind = Column(Unicode(1))
    app_cd = Column(Unicode(10))
    min_abs = Column(Numeric(11, 4))
    max_abs = Column(Numeric(11, 4))


class TestResultVisitNote(Base):
    __tablename__ = 'test_result_visit_note'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    test_result_group_id = Column(Integer, primary_key=True, nullable=False)
    test_result_id = Column(Integer, primary_key=True, nullable=False)
    visit_note_id = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))
    app_cd = Column(Unicode(10))


class TestSpcmn(Base):
    __tablename__ = 'test_spcmn'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    test_id = Column(Integer, primary_key=True, nullable=False)
    test_spcmn_id = Column(Integer, primary_key=True, nullable=False)
    obs_start_datetime = Column(DateTime)
    obs_end_datetime = Column(DateTime)
    collc_vol_id = Column(ForeignKey(u'collc_vol.collc_vol_id'))
    collc_id = Column(Unicode(20))
    spcmn_action_id = Column(ForeignKey(u'spcmn_action.spcmn_action_id'))
    danger_cd = Column(Unicode(20))
    spcmn_source_id = Column(ForeignKey(u'spcmn_source.spcmn_source_id'))
    rlvnt_clinic_info = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    collc_vol_amt = Column(Numeric(11, 4))
    trans_trf_tstamp = Column(DateTime)

    collc_vol = relationship(u'CollcVol')
    spcmn_action = relationship(u'SpcmnAction')
    spcmn_source = relationship(u'SpcmnSource')


class TherapyItemAdmn(Base):
    __tablename__ = 'therapy_item_admn'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'adjust_vrbl_id'], [u'vrbl_order.pt_id', u'vrbl_order.vrbl_id']),
        Index('nc3_therapy_item_admn', 'pt_id', 'agt_name', 'dosage_form'),
        Index('nc2_therapy_item_admn', 'pt_id', 'dose_appr', 'expected_date_time')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    admn_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, nullable=False)
    rx_id = Column(Integer, nullable=False)
    item_no = Column(Integer, nullable=False)
    admn_seq_no = Column(Integer, nullable=False)
    agt_name = Column(Unicode(50), nullable=False)
    dosage_form = Column(Integer)
    dose_level = Column(Integer)
    date_time_admst = Column(DateTime)
    agt_admn_typ = Column(Integer)
    agt_admn_seq_no = Column(Integer)
    admn_as_advised = Column(Unicode(1))
    admn_dose = Column(Numeric(11, 4))
    dose_appr = Column(Unicode(1))
    admn_item_note_txt = Column(UnicodeText(1073741823))
    admn_item_note_typ = Column(Integer)
    how_recorded = Column(Integer)
    inst_id = Column(Unicode(30))
    userid_link = Column(Unicode(10))
    no_doses_taken = Column(Numeric(6, 2))
    expected_date_time = Column(DateTime, index=True)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    admn_route = Column(Integer)
    admn_dose_unit = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    trans_trf_tstamp = Column(DateTime)
    course_adj_ind = Column(Unicode(1))
    adjust_vrbl_id = Column(Integer)
    admn_stop_tstamp = Column(DateTime)
    variance_ind = Column(Unicode(1))
    err_rsn_txt = Column(Unicode(255))
    disp_verified_tstamp = Column(DateTime)
    dispensed_ind = Column(Unicode(1))
    course_desc = Column(Unicode(255))
    corrected_entry_ind = Column(Unicode(1))
    ad_hoc_entry_ind = Column(Unicode(1))
    not_dispensed_ind = Column(Unicode(1))
    disp_loc_id = Column(ForeignKey(u'disp_loc.disp_loc_id'))
    on_hold_ind = Column(Unicode(1))
    cycle_no = Column(Integer)
    cycle_day = Column(Integer)
    dose_wastage_amt = Column(Numeric(11, 4))
    dose_wastage_unit = Column(Integer)
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    drug_lot_no = Column(Unicode(30))
    agt_manufacturer_id = Column(Integer)
    disclosed_flag = Column(Unicode(1), nullable=False, server_default=text("('N')"))

    disp_loc = relationship(u'DispLoc')
    pt = relationship(u'VrblOrder')


class TherapyItemAdmnAgtLevel(Base):
    __tablename__ = 'therapy_item_admn_agt_level'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id', 'rx_id', 'item_no'], [u'agt_rx.pt_id', u'agt_rx.pt_visit_id', u'agt_rx.rx_id', u'agt_rx.item_no']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    rx_id = Column(Integer, primary_key=True, nullable=False)
    item_no = Column(Integer, primary_key=True, nullable=False)
    agt_level_id = Column(Integer, primary_key=True, nullable=False)
    agt_level_seq_no = Column(Integer)
    start_date = Column(DateTime)
    end_date = Column(DateTime)
    no_doses_taken = Column(Integer)
    dose = Column(Numeric(11, 4))
    dose_uom = Column(Integer)
    dose_rec_cmt = Column(UnicodeText(1073741823))
    how_recorded = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    appr_tstamp = Column(DateTime)
    appr_userid = Column(Unicode(10))
    appr_inst_id = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    err_rsn_txt = Column(Unicode(255))

    pt = relationship(u'AgtRx')


class TherapyItemAdmnDetail(Base):
    __tablename__ = 'therapy_item_admn_detail'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'admn_id'], [u'therapy_item_admn.pt_id', u'therapy_item_admn.admn_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    admn_id = Column(Integer, primary_key=True, nullable=False)
    admn_detail_id = Column(Integer, primary_key=True, nullable=False)
    detail_tstamp = Column(DateTime, nullable=False)
    detail_typ = Column(Integer, nullable=False)
    detail_dose_taken = Column(Numeric(6, 2))
    detail_dose = Column(Numeric(11, 4))
    appr_tstamp = Column(DateTime)
    appr_userid = Column(Unicode(10))
    appr_userinstid = Column(Unicode(30))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'TherapyItemAdmn')


class TherapyReaction(Base):
    __tablename__ = 'therapy_reaction'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    reaction_typ = Column(Integer, primary_key=True, nullable=False)
    agt_name = Column(Unicode(50), primary_key=True, nullable=False)
    dosage_form = Column(Integer, primary_key=True, nullable=False)
    dose_level = Column(Integer, primary_key=True, nullable=False)
    reaction_desc = Column(UnicodeText(1073741823), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TimeFrame(Base):
    __tablename__ = 'time_frame'

    time_frame_typ = Column(Integer, primary_key=True)
    time_frame_desc = Column(Unicode(40), nullable=False)
    time_frame_dur = Column(Numeric(11, 2))
    time_frame_dur_unit = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    display_order = Column(Integer)


class TimeUnit(Base):
    __tablename__ = 'time_unit'

    time_unit = Column(Integer, primary_key=True)
    time_desc = Column(Unicode(40), nullable=False)
    in_seconds = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class TimeZone(Base):
    __tablename__ = 'time_zone'

    time_zone_id = Column(Numeric(5, 0), primary_key=True)
    time_zone_desc = Column(Unicode(50), nullable=False)
    dst_eff_date = Column(DateTime)
    dst_exp_date = Column(DateTime)
    dst_observed_ind = Column(Unicode(1), nullable=False)
    gmt_offset_cd = Column(Unicode(1))
    gmt_offset_amt = Column(Unicode(5))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class TitleTyp(Base):
    __tablename__ = 'title_typ'

    title_id = Column(Integer, primary_key=True)
    title_desc = Column(Unicode(10), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TlbrIcon(Base):
    __tablename__ = 'tlbr_icons'

    file_name = Column(Unicode(30), primary_key=True)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TlbrItem(Base):
    __tablename__ = 'tlbr_item'

    item_id = Column(Integer, primary_key=True)
    item_name = Column(Unicode(30), nullable=False)
    item_abrv = Column(Unicode(30), nullable=False)
    parent_menu_id = Column(Integer, nullable=False)
    menu_id = Column(Integer, nullable=False)
    dflt_icon = Column(Unicode(30))
    dflt_tlbr_sort_order = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TlbrUserItem(Base):
    __tablename__ = 'tlbr_user_item'

    user_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    item_id = Column(ForeignKey(u'tlbr_item.item_id'), primary_key=True, nullable=False)
    user_sort_order = Column(Integer, nullable=False)
    user_icon = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    item = relationship(u'TlbrItem')


class TpAccessInst(Base):
    __tablename__ = 'tp_access_inst'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    tp_access_inst_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    cur_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpAccessUser(Base):
    __tablename__ = 'tp_access_user'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    tp_access_user_id = Column(Integer, primary_key=True, nullable=False)
    userid = Column(Unicode(10), nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    cur_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpAccrualGradeCd(Base):
    __tablename__ = 'tp_accrual_grade_cd'

    tp_accrual_grade_cd = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    tp_accrual_grade_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpAccrualPrd(Base):
    __tablename__ = 'tp_accrual_prd'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    activity_id = Column(Integer, primary_key=True, nullable=False)
    accrual_prd = Column(Integer, nullable=False)
    expected_no = Column(Integer)
    actual_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    accrual_typ = Column(Integer)
    accrual_asmt_typ = Column(Integer)
    ltr_id = Column(Integer)


class TpAccrualPrdDiversity(Base):
    __tablename__ = 'tp_accrual_prd_diversity'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    activity_id = Column(Integer, primary_key=True, nullable=False)
    sex_cd = Column(Unicode(1), primary_key=True, nullable=False)
    race = Column(Unicode(20), primary_key=True, nullable=False)
    accrual_prd = Column(Integer, nullable=False)
    actual_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpAgtCourse(Base):
    __tablename__ = 'tp_agt_course'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no', 'intv_id'], [u'tp_agt.tp_name', u'tp_agt.tp_vers_no', u'tp_agt.intv_id']),
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    course_no = Column(Integer, primary_key=True, nullable=False)
    admn_dose = Column(Numeric(11, 4))
    admn_frq_cd = Column(Integer)
    admn_frq_x = Column(Integer)
    admn_frq_unit = Column(Integer)
    admn_dur = Column(Integer)
    admn_dur_unit = Column(Integer)
    prn_ind = Column(Unicode(1))
    prn_repeat_ind = Column(Unicode(1))
    dow_frq_unit = Column(Integer)
    week_frq_unit = Column(Integer)
    course_desc = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    dispense_qty = Column(Integer)
    dispense_vol = Column(Numeric(11, 4))
    dispense_unit = Column(Integer)
    admn_frq_upper_x = Column(Integer)
    prn_reason_typ = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))

    tp_agt = relationship(u'TpAgt')


class TpAgtDoseBand(Base):
    __tablename__ = 'tp_agt_dose_band'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    dose_band_id = Column(Integer, primary_key=True, nullable=False)
    dose_range_min = Column(Numeric(11, 4))
    dose_range_max = Column(Numeric(11, 4))
    order_dose = Column(Numeric(11, 4))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpAgtDoseDec(Base):
    __tablename__ = 'tp_agt_dose_dec'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    dose_dec_id = Column(Integer, primary_key=True, nullable=False)
    dose_dec_min = Column(Numeric(11, 4))
    dose_dec_max = Column(Numeric(11, 4))
    order_dose = Column(Numeric(11, 4))
    dec_cd = Column(Unicode(3), nullable=False)
    dec_uom = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpAsmtSch(Base):
    __tablename__ = 'tp_asmt_sch'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    asmt_comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    sch_intv_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpAuthor(Base):
    __tablename__ = 'tp_author'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    author_id = Column(Integer, primary_key=True, nullable=False)
    author_typ = Column(ForeignKey(u'author_typ.author_typ'), nullable=False)
    author_name = Column(Unicode(100))
    author_seq_no = Column(Integer)
    author_email = Column(Unicode(100))
    author_userid = Column(Unicode(10))
    author_inst_id = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    author_cd = Column(Unicode(1))
    stkh_id = Column(Unicode(20))

    author_typ1 = relationship(u'AuthorTyp')


class TpAuthorshipCd(Base):
    __tablename__ = 'tp_authorship_cd'

    tp_authorship_cd = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    tp_authorship_desc = Column(Unicode(55), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpAwardTyp(Base):
    __tablename__ = 'tp_award_typ'

    tp_award_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_award_typ_desc = Column(Unicode(20))
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpCategoryCd(Base):
    __tablename__ = 'tp_category_cd'

    tp_category_cd = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    tp_category_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpCategoryTyp(Base):
    __tablename__ = 'tp_category_typ'

    tp_category_typ = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    tp_category_cd = Column(Integer, nullable=False)
    tp_typ_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpClsGroup(Base):
    __tablename__ = 'tp_cls_group'
    __table_args__ = (
        ForeignKeyConstraint(['tp_cls_typ_id', 'tp_cls_value_id'], [u'tp_cls_value.tp_cls_typ_id', u'tp_cls_value.tp_cls_value_id']),
        ForeignKeyConstraint(['tp_name', 'tp_vers_no'], [u'tx_pln.tp_name', u'tx_pln.tp_vers_no'])
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    tp_cls_typ = relationship(u'TpClsValue')
    tx_pln = relationship(u'TxPln')


class TpClsTyp(Base):
    __tablename__ = 'tp_cls_typ'

    tp_cls_typ_id = Column(Integer, primary_key=True)
    tp_cls_typ_desc = Column(Unicode(40), nullable=False)
    tp_cls_typ_seq = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    tp_cls_active_ind = Column(Unicode(1))


class TpClsValue(Base):
    __tablename__ = 'tp_cls_value'

    tp_cls_typ_id = Column(ForeignKey(u'tp_cls_typ.tp_cls_typ_id'), primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    sex_cd = Column(Unicode(1))

    tp_cls_typ = relationship(u'TpClsTyp')


class TpClsValueCulture(Base):
    __tablename__ = 'tp_cls_value_culture'

    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    tp_cls_value_desc = Column(Unicode(100), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpCmtee(Base):
    __tablename__ = 'tp_cmtee'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    cmtee_id = Column(Integer, primary_key=True, nullable=False)
    cmtee_req_typ = Column(Integer)
    cmtee_issue_id = Column(Integer)
    cmtee_agenda_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpCmteeIssue(Base):
    __tablename__ = 'tp_cmtee_issue'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    cmtee_id = Column(Integer, primary_key=True, nullable=False)
    cmtee_issue_typ = Column(Integer, primary_key=True, nullable=False)
    monitor_req_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpCoauthor(Base):
    __tablename__ = 'tp_coauthor'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no'], [u'tx_pln.tp_name', u'tx_pln.tp_vers_no']),
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    author_userid = Column(Unicode(10), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    tx_pln = relationship(u'TxPln')


class TpConsent(Base):
    __tablename__ = 'tp_consent'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    phase_seq_no = Column(Integer, primary_key=True, nullable=False)
    consent_desc = Column(UnicodeText(1073741823))
    req_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class TpCrrefCd(Base):
    __tablename__ = 'tp_crref_cd'

    tp_crref_cd = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    tp_crref_desc = Column(Unicode(55), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpCt(Base):
    __tablename__ = 'tp_ct'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    ct_phase_cd = Column(Integer)
    tp_category_cmt = Column(Unicode(255))
    ct_subj_cd = Column(Integer)
    pdq_no = Column(Unicode(30))
    tp_authorship_cd = Column(Integer)
    tp_category_cd = Column(Integer)
    tp_holder_cd = Column(Integer)
    tp_crref_cd = Column(Integer)
    tp_binder = Column(Integer)
    accrual_typ = Column(Integer)
    tp_accrual_grade_cd = Column(Integer)
    tp_nci_program_cd = Column(Integer)
    tp_std_of_care_ind = Column(Unicode(1))
    tp_tissue_access_ind = Column(Unicode(1))
    tp_phi_release_cd = Column(Integer)
    agt_dev_ind = Column(Unicode(1))
    mng_by_typ = Column(Integer)
    tp_category_typ = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    export_ct_ind = Column(Unicode(1))
    study_mat_moved_ind = Column(Unicode(1))
    pt_mat_moved_ind = Column(Unicode(1))
    activation_ready_date = Column(DateTime)


class TpCtExptdDurAccrual(Base):
    __tablename__ = 'tp_ct_exptd_dur_accrual'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    tp_accrual_id = Column(Integer, primary_key=True, nullable=False)
    exptd_dur_trial_amt = Column(Integer)
    exptd_dur_pt_amt = Column(Integer)
    exptd_dur_accrual_amt = Column(Integer)
    exptd_dur_trial_uom = Column(Integer)
    exptd_dur_pt_uom = Column(Integer)
    exptd_dur_accrual_uom = Column(Integer)
    exptd_accrual_pt_amt = Column(Integer)
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpCtTracking(Base):
    __tablename__ = 'tp_ct_tracking'

    tp_ct_tracking_id = Column(Integer, primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    reg_docs_typ = Column(Integer)
    budget_typ = Column(Integer)
    contract_typ = Column(Integer)
    form1_typ = Column(Integer)
    form1_sign_typ = Column(Integer)
    icf_typ = Column(Integer)
    plso_typ = Column(Integer)
    instruments_typ = Column(Integer)
    work_file_typ = Column(Integer)
    next_step_typ = Column(Integer)
    process_appr_date = Column(DateTime)
    rsc_review_typ = Column(Integer)
    ibc_review_typ = Column(Integer)
    protocol_1572_typ = Column(Integer)
    fin_disclosure_typ = Column(Integer)
    priority_list_typ = Column(Integer)
    accrual_proj_amt = Column(Integer)
    accrual_est_annual_amt = Column(Integer)
    managed_by_typ = Column(Integer)
    show_on_web_ind = Column(Integer)
    res_review_status_typ = Column(Integer)
    protocol_received_status_typ = Column(Integer)
    study_mat_offsite_ind = Column(Integer)
    study_mat_offsite_dt = Column(DateTime)
    study_mat_offsite_loc = Column(Unicode(55))
    study_mat_offsite_box = Column(Unicode(10))
    pt_mat_offsite_ind = Column(Integer)
    pt_mat_offsite_dt = Column(DateTime)
    pt_mat_offsite_loc = Column(Unicode(55))
    pt_mat_offsite_box = Column(Unicode(10))
    cur_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpDoseMgmt(Base):
    __tablename__ = 'tp_dose_mgmt'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no'], [u'tx_pln.tp_name', u'tx_pln.tp_vers_no']),
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    value_update_typ = Column(ForeignKey(u'value_typ.value_typ'), nullable=False)
    update_value = Column(Numeric(11, 4))
    update_unit = Column(Integer)
    value_use_typ = Column(Integer)
    use_value = Column(Numeric(11, 4))
    use_unit = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    tx_pln = relationship(u'TxPln')
    value_typ = relationship(u'ValueTyp')


class TpEval(Base):
    __tablename__ = 'tp_eval'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no', 'outcome_id'], [u'tp_outcome.tp_name', u'tp_outcome.tp_vers_no', u'tp_outcome.outcome_id']),
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    phase_seq_no = Column(Integer, nullable=False)
    outcome_id = Column(Integer, primary_key=True, nullable=False)
    eval_id = Column(Integer, primary_key=True, nullable=False)
    tperiod_id = Column(Integer, nullable=False)
    offset_time = Column(Unicode(4))
    offset_desc = Column(Unicode(40))
    cycle_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    tp_outcome = relationship(u'TpOutcome')


class TpFcn(Base):
    __tablename__ = 'tp_fcn'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    fcn_cls = Column(Integer, primary_key=True, nullable=False)
    fcn_typ = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpFinancial(Base):
    __tablename__ = 'tp_financial'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    tp_financial_id = Column(Integer, primary_key=True, nullable=False)
    award_typ = Column(Integer)
    grant_typ_cd = Column(Unicode(1))
    grant_awarded_cd = Column(Unicode(1))
    ct_bill_complete_ind = Column(Unicode(1))
    grant_pm_stkh_id = Column(Unicode(20))
    underwritten_date = Column(DateTime)
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpFocu(Base):
    __tablename__ = 'tp_focus'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no'], [u'tx_pln.tp_name', u'tx_pln.tp_vers_no']),
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    focus_id = Column(Integer, primary_key=True, nullable=False)
    focus_desc = Column(Unicode(255), nullable=False)
    focus_seq = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    tx_pln = relationship(u'TxPln')


class TpGrantItem(Base):
    __tablename__ = 'tp_grant_item'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    tp_grant_id = Column(Integer, primary_key=True, nullable=False)
    tp_financial_id = Column(Integer)
    grant_period = Column(Integer)
    grant_start_date = Column(DateTime)
    grant_end_date = Column(DateTime)
    direct_grant_amount = Column(Numeric(11, 2))
    indirect_grant_amount = Column(Numeric(11, 2))
    total_grant_amount = Column(Numeric(18, 2))
    grant_cmt = Column(Unicode(255))
    rpt_include_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpHolderCd(Base):
    __tablename__ = 'tp_holder_cd'

    tp_holder_cd = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    tp_holder_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpIdeNo(Base):
    __tablename__ = 'tp_ide_no'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    tp_ide_no_id = Column(Integer, primary_key=True, nullable=False)
    ide_no = Column(Unicode(55), nullable=False)
    ide_appr_date = Column(DateTime)
    ide_end_date = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpIndNo(Base):
    __tablename__ = 'tp_ind_no'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    tp_ind_no_id = Column(Integer, primary_key=True, nullable=False)
    ind_no = Column(Unicode(55), nullable=False)
    ind_appr_date = Column(DateTime)
    ind_end_date = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpInstKey(Base):
    __tablename__ = 'tp_inst_key'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    tp_inst_key_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    tp_key_cd = Column(Integer, nullable=False)
    tp_key_value = Column(Unicode(20), nullable=False)
    eff_date = Column(DateTime, nullable=False)
    expiry_date = Column(DateTime, nullable=False)
    cur_value_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    upper_tp_key_value = Column(Unicode(20))
    valid_entry_ind = Column(Unicode(1))
    tp_unfmt_key_value = Column(Unicode(20))


class TpIntv(Base):
    __tablename__ = 'tp_intv'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no'], [u'tx_pln.tp_name', u'tx_pln.tp_vers_no']),
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    event_typ = Column(ForeignKey(u'event_typ.event_typ'), nullable=False)
    intv_cat_id = Column(Integer, nullable=False)
    intv_name = Column(Unicode(255), nullable=False)
    notification_req = Column(Unicode(1), nullable=False)
    notification_days = Column(Integer)
    rqstn_req = Column(Unicode(1), nullable=False)
    prof_typ = Column(Integer)
    actual_time_req = Column(Unicode(1), nullable=False)
    intv_req = Column(Unicode(1), nullable=False)
    intv_detail_txt = Column(UnicodeText(1073741823))
    chart_summary_ind = Column(Unicode(1))
    instr_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    phase_avl = Column(Integer)
    group_ind = Column(Unicode(1))
    sch_ind = Column(Unicode(1))
    discipline_typ = Column(Integer)
    rule_ind = Column(Unicode(1))
    this_visit_req_ind = Column(Unicode(1))
    trans_trf_tstamp = Column(DateTime)
    dose_calc_ind = Column(Unicode(1))
    lib_intv_id = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))

    event_typ1 = relationship(u'EventTyp')
    tx_pln = relationship(u'TxPln')


class XrefTpTest(TpIntv):
    __tablename__ = 'xref_tp_test'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no', 'intv_id'], [u'tp_intv.tp_name', u'tp_intv.tp_vers_no', u'tp_intv.intv_id']),
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20), nullable=False)
    comp_name = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpAsmt(TpIntv):
    __tablename__ = 'tp_asmt'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no', 'intv_id'], [u'tp_intv.tp_name', u'tp_intv.tp_vers_no', u'tp_intv.intv_id']),
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    asmt_comp_name = Column(ForeignKey(u'asmt_comp.asmt_comp_name'), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    asmt_comp = relationship(u'AsmtComp')


class TpQstr(TpIntv):
    __tablename__ = 'tp_qstr'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no', 'intv_id'], [u'tp_intv.tp_name', u'tp_intv.tp_vers_no', u'tp_intv.intv_id']),
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    qstr_name = Column(ForeignKey(u'qstr.qstr_name'), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    qstr = relationship(u'Qstr')


class TpAgt(TpIntv):
    __tablename__ = 'tp_agt'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no', 'intv_id'], [u'tp_intv.tp_name', u'tp_intv.tp_vers_no', u'tp_intv.intv_id']),
        Index('nc2_tp_agt', 'tp_name', 'tp_vers_no', 'agt_name')
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    agt_name = Column(Unicode(50), nullable=False, index=True)
    dosage_form = Column(Integer, nullable=False)
    dose_level = Column(Integer, nullable=False)
    subs = Column(Unicode(1), nullable=False)
    brand = Column(Unicode(50))
    admn_dosage = Column(Numeric(11, 4))
    admn_dosage_range = Column(Numeric(11, 4))
    admn_dosage_unit = Column(ForeignKey(u'unit_of_meas.uom'), nullable=False)
    admn_route = Column(ForeignKey(u'admn_route.admn_route'))
    infusion_typ = Column(ForeignKey(u'infusion_typ.infusion_typ'))
    infusion_duration = Column(Integer)
    infusion_timescale = Column(Integer)
    special_instr = Column(UnicodeText(1073741823))
    round_mthd = Column(Integer)
    round_factor = Column(Numeric(11, 4))
    max_bsa_dose = Column(Numeric(11, 4))
    abs_max_dose = Column(Numeric(11, 4))
    ideal_wt = Column(Unicode(1))
    above_actual_wt = Column(Numeric(11, 4))
    cost_per_course = Column(Numeric(11, 4))
    currency = Column(Integer)
    rx_typ = Column(ForeignKey(u'rx_typ.rx_typ'))
    mod = Column(Unicode(1))
    vrtn_amount = Column(Numeric(11, 4))
    drug_desc_id = Column(Unicode(6))
    strength = Column(Numeric(11, 4))
    strength_unit = Column(Integer)
    init_state = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    medi_active_ind = Column(Unicode(1))
    active_chg_date = Column(DateTime)
    agt_seq_no = Column(Integer)
    refill_ind = Column(Unicode(1))
    refill_qty = Column(Integer)
    dose_strength = Column(Unicode(15))
    hydra_fluid_id = Column(ForeignKey(u'hydra_fluid.hydra_fluid_id'))
    hydra_vol = Column(Numeric(11, 4))
    hydra_vol_uom = Column(Integer)
    hydra_seq = Column(Integer)
    tx_tframe_typ = Column(ForeignKey(u'tx_tframe_typ.tx_tframe_typ'))
    intv_use_typ = Column(ForeignKey(u'intv_use_typ.intv_use_typ'))
    admn_dur_desc = Column(Unicode(100))
    admn_sched_desc = Column(Unicode(100))
    tx_dur = Column(Unicode(50))
    subs_reason = Column(UnicodeText(1073741823))
    take_as_directed_ind = Column(Unicode(1))
    revision_no = Column(Integer, server_default=text("((1))"))
    infusion_line = Column(Integer)
    dec_cd = Column(Unicode(3))
    agt_plchldr_base_typ = Column(Integer)
    agt_plchldr_ind = Column(Unicode(1))
    agt_plchldr_used = Column(Unicode(1))

    unit_of_mea = relationship(u'UnitOfMea')
    admn_route1 = relationship(u'AdmnRoute')
    hydra_fluid = relationship(u'HydraFluid')
    infusion_typ1 = relationship(u'InfusionTyp')
    intv_use_typ1 = relationship(u'IntvUseTyp')
    rx_typ1 = relationship(u'RxTyp')
    tx_tframe_typ1 = relationship(u'TxTframeTyp')


class TpIvTherapy(TpIntv):
    __tablename__ = 'tp_iv_therapy'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no', 'intv_id'], [u'tp_intv.tp_name', u'tp_intv.tp_vers_no', u'tp_intv.intv_id']),
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    iv_fluid_name = Column(Unicode(60), nullable=False)
    iv_fluid_cd = Column(Unicode(10))
    gnrc_iv_fluid_name = Column(ForeignKey(u'iv_fluid.gnrc_iv_fluid_name'))
    iv_rate = Column(Integer, nullable=False)
    iv_rate_unit = Column(ForeignKey(u'unit_of_meas.uom'))
    infusion_typ = Column(ForeignKey(u'infusion_typ.infusion_typ'))
    special_instr = Column(UnicodeText(1073741823))
    agt_name = Column(Unicode(50))
    agt_dose = Column(Numeric(11, 4))
    agt_dose_range = Column(Numeric(11, 4))
    agt_dose_unit = Column(ForeignKey(u'unit_of_meas.uom'))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    unit_of_mea = relationship(u'UnitOfMea', primaryjoin='TpIvTherapy.agt_dose_unit == UnitOfMea.uom')
    iv_fluid = relationship(u'IvFluid')
    infusion_typ1 = relationship(u'InfusionTyp')
    unit_of_mea1 = relationship(u'UnitOfMea', primaryjoin='TpIvTherapy.iv_rate_unit == UnitOfMea.uom')


class XrefTrTypPln(TpIntv):
    __tablename__ = 'xref_tr_typ_pln'
    __table_args__ = (
        ForeignKeyConstraint(['gs_author', 'eff_date', 'tr_typ', 'tr_comp_name'], [u'tr_comp.gs_author', u'tr_comp.eff_date', u'tr_comp.tr_typ', u'tr_comp.tr_comp_name']),
        ForeignKeyConstraint(['tp_name', 'tp_vers_no', 'intv_id'], [u'tp_intv.tp_name', u'tp_intv.tp_vers_no', u'tp_intv.intv_id'])
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    gs_author = Column(Integer, nullable=False)
    eff_date = Column(DateTime, nullable=False)
    tr_typ = Column(Unicode(30), nullable=False)
    tr_comp_name = Column(Unicode(30), nullable=False)
    reason = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    tr_sub_comp_name = Column(Unicode(60))
    dose_limit_ind = Column(Unicode(1))

    tr_comp = relationship(u'TrComp')


class TpIntvCat(Base):
    __tablename__ = 'tp_intv_cat'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    intv_cat_id = Column(Integer, primary_key=True, nullable=False)
    event_typ = Column(ForeignKey(u'event_typ.event_typ'), nullable=False)
    intv_cat_desc = Column(Unicode(40), nullable=False)
    intv_cat_seq = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    event_typ1 = relationship(u'EventTyp')


class TpIntvFocu(Base):
    __tablename__ = 'tp_intv_focus'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    order_id = Column(Integer, primary_key=True, nullable=False)
    focus_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpIrb(Base):
    __tablename__ = 'tp_irb'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    irb_num = Column(Integer, primary_key=True, nullable=False)
    cmtee_date_id = Column(Integer)
    submit_date = Column(DateTime)
    tp_site_id = Column(Integer)
    cmtee_id = Column(Integer)
    agenda_action_typ = Column(Integer)
    revision_num = Column(Integer)
    issue_typ = Column(Integer)
    next_cr_due_date = Column(DateTime)
    next_pmc_review_date = Column(DateTime)
    next_pmc_audit_date = Column(DateTime)
    require_audit_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpKeyCd(Base):
    __tablename__ = 'tp_key_cd'

    tp_key_cd = Column(Integer, primary_key=True)
    tp_key_desc = Column(Unicode(40), nullable=False)
    tp_key_scope_typ = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class TpKeyScopeTyp(Base):
    __tablename__ = 'tp_key_scope_typ'

    tp_key_scope_typ = Column(Integer, primary_key=True)
    scope_typ_desc = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class TpNciProgramCd(Base):
    __tablename__ = 'tp_nci_program_cd'

    tp_nci_program_cd = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    tp_nci_program_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpOutcome(Base):
    __tablename__ = 'tp_outcome'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no', 'focus_id'], [u'tp_focus.tp_name', u'tp_focus.tp_vers_no', u'tp_focus.focus_id']),
        ForeignKeyConstraint(['tp_name', 'tp_vers_no', 'intv_cat_id'], [u'tp_intv_cat.tp_name', u'tp_intv_cat.tp_vers_no', u'tp_intv_cat.intv_cat_id'])
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    outcome_id = Column(Integer, primary_key=True, nullable=False)
    outcome_desc = Column(Unicode(255), nullable=False)
    focus_id = Column(Integer)
    intv_cat_id = Column(Integer)
    prof_typ = Column(Integer)
    outcome_seq = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    discipline_typ = Column(Integer)
    trans_trf_tstamp = Column(DateTime)

    tp_focu = relationship(u'TpFocu')
    tp_intv_cat = relationship(u'TpIntvCat')


class TpPhiReleaseCd(Base):
    __tablename__ = 'tp_phi_release_cd'

    tp_phi_release_cd = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    tp_phi_release_desc = Column(Unicode(55))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpRad(Base):
    __tablename__ = 'tp_rad'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    rad_order_name = Column(Unicode(50))
    rad_mode_typ = Column(Integer)
    rad_mode_sub_typ = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpRadItemField(Base):
    __tablename__ = 'tp_rad_item_field'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    rad_order_name = Column(Unicode(50), primary_key=True, nullable=False)
    rad_item_id = Column(Integer, primary_key=True, nullable=False)
    rad_field_no = Column(Integer, primary_key=True, nullable=False)
    init_value = Column(Unicode(25))
    init_text_value = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpRadOrderItem(Base):
    __tablename__ = 'tp_rad_order_item'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    rad_order_name = Column(Unicode(50), primary_key=True, nullable=False)
    mode_typ = Column(Integer, primary_key=True, nullable=False)
    mode_sub_typ = Column(Integer, primary_key=True, nullable=False)
    rad_item_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), nullable=False)
    rad_item_no = Column(Integer, nullable=False)
    rad_comp = Column(Unicode(50))
    rad_indent_level = Column(Integer)
    rad_comp_typ = Column(Integer)
    init_value = Column(Unicode(25))
    uom = Column(Integer)
    min_val = Column(Unicode(25))
    max_val = Column(Unicode(25))
    edit_cmt = Column(Unicode(50))
    rad_rec_typ = Column(Integer)
    rad_order_section = Column(Unicode(50))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    init_text_value = Column(UnicodeText(1073741823))
    total_ind = Column(Unicode(1))


class TpRem(Base):
    __tablename__ = 'tp_rem'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    intv_id = Column(Integer, primary_key=True, nullable=False)
    rem_short_desc = Column(Unicode(50))
    rem_desc = Column(UnicodeText(1073741823))
    rem_seq_no = Column(Integer)
    rcpnt_discipline_typ = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpSchGroup(Base):
    __tablename__ = 'tp_sch_group'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no', 'comp_intv_id'], [u'tp_intv.tp_name', u'tp_intv.tp_vers_no', u'tp_intv.intv_id']),
        ForeignKeyConstraint(['tp_name', 'tp_vers_no', 'group_intv_id'], [u'tp_intv.tp_name', u'tp_intv.tp_vers_no', u'tp_intv.intv_id'])
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    group_intv_id = Column(Integer, primary_key=True, nullable=False)
    comp_intv_id = Column(Integer, primary_key=True, nullable=False)
    comp_seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    tp_intv = relationship(u'TpIntv', primaryjoin='TpSchGroup.tp_name == TpIntv.tp_name')
    tp_intv1 = relationship(u'TpIntv', primaryjoin='TpSchGroup.tp_name == TpIntv.tp_name')


class TpScheme(Base):
    __tablename__ = 'tp_scheme'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no'], [u'tx_pln.tp_name', u'tx_pln.tp_vers_no']),
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    scheme_typ = Column(ForeignKey(u'scheme_typ.scheme_typ'), primary_key=True, nullable=False)
    scheme_author = Column(Integer, nullable=False)
    scheme_eff_date = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    scheme_typ1 = relationship(u'SchemeTyp')
    tx_pln = relationship(u'TxPln')


class TpSeq(Base):
    __tablename__ = 'tp_seq'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no'], [u'tx_pln.tp_name', u'tx_pln.tp_vers_no']),
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    seq_typ = Column(Unicode(20), primary_key=True, nullable=False)
    seq_no = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    tx_pln = relationship(u'TxPln')


class TpSite(Base):
    __tablename__ = 'tp_site'

    tp_site_id = Column(Integer, primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    site_stkh_id = Column(Unicode(20), primary_key=True, nullable=False)
    ct_open_date = Column(DateTime)
    ct_close_date = Column(DateTime)
    active_entry_ind = Column(Unicode(1))
    site_status_typ = Column(Integer)
    cur_entry_ind = Column(Unicode(1))
    status_set_cd = Column(Unicode(1))
    ltr_id = Column(Integer)
    final_ltr_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpSiteStatusHistory(Base):
    __tablename__ = 'tp_site_status_history'

    tp_site_id = Column(Integer, primary_key=True, nullable=False)
    tp_site_status_id = Column(Integer, primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    stkh_id = Column(Unicode(20), nullable=False)
    site_status_typ = Column(Integer, nullable=False)
    status_eff_tstamp = Column(DateTime, nullable=False)
    cur_entry_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpSiteStatusTyp(Base):
    __tablename__ = 'tp_site_status_typ'

    tp_site_status_typ_id = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    tp_site_status_desc = Column(Unicode(55), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class TpSpsr(Base):
    __tablename__ = 'tp_spsr'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    spsr_stkh_id = Column(Unicode(20), primary_key=True, nullable=False)
    ct_spsr_typ = Column(Integer)
    ct_id = Column(Unicode(25))
    ct_spsr_cd = Column(Unicode(1))
    funding_status_cd = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    spsr_cmt = Column(Unicode(255))
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    primary_spsr_ind = Column(Unicode(1))


class TpSpsrTyp(Base):
    __tablename__ = 'tp_spsr_typ'

    spsr_typ_id = Column(Integer, primary_key=True)
    spsr_typ_desc = Column(Unicode(20))
    culture_cd = Column(Unicode(10))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpStaff(Base):
    __tablename__ = 'tp_staff'

    tp_staff_id = Column(Integer, primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    staff_stkh_id = Column(Unicode(20), primary_key=True, nullable=False)
    site_stkh_id = Column(Unicode(20), nullable=False)
    staff_start_date = Column(DateTime)
    staff_end_date = Column(DateTime)
    tp_role_typ = Column(Integer)
    active_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    cur_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpSum(Base):
    __tablename__ = 'tp_sum'
    __table_args__ = (
        ForeignKeyConstraint(['tp_name', 'tp_vers_no'], [u'tx_pln.tp_name', u'tx_pln.tp_vers_no']),
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    pln_sum_typ = Column(ForeignKey(u'pln_sum_typ.pln_sum_typ'), primary_key=True, nullable=False)
    pln_sum_desc = Column(UnicodeText(1073741823))
    sum_seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pln_sum_typ1 = relationship(u'PlnSumTyp')
    tx_pln = relationship(u'TxPln')


class TpTperiod(Base):
    __tablename__ = 'tp_tperiod'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    phase_seq_no = Column(Integer, primary_key=True, nullable=False)
    tperiod_id = Column(Integer, primary_key=True, nullable=False)
    tperiod_desc = Column(Unicode(255), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TpTxArm(Base):
    __tablename__ = 'tp_tx_arm'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    tx_arm_cd = Column(Unicode(2), primary_key=True, nullable=False)
    tx_arm_desc = Column(Unicode(55), nullable=False)
    proj_accrual_amt = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TrAsmt(Base):
    __tablename__ = 'tr_asmt'
    __table_args__ = (
        ForeignKeyConstraint(['gs_author', 'eff_date', 'tr_typ', 'tr_comp_name'], [u'tr_comp.gs_author', u'tr_comp.eff_date', u'tr_comp.tr_typ', u'tr_comp.tr_comp_name']),
        Index('nc1_tr_asmt', 'pt_id', 'eff_date', 'tr_typ', 'tr_comp_name')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_tr_asmt_id = Column(Integer, primary_key=True, nullable=False)
    tr_asmt_typ = Column(ForeignKey(u'tr_asmt_typ.tr_asmt_typ'), nullable=False)
    date_time_asmt = Column(DateTime, nullable=False)
    gs_author = Column(Integer, nullable=False)
    eff_date = Column(DateTime, nullable=False)
    tr_typ = Column(Unicode(30), nullable=False)
    tr_comp_name = Column(Unicode(30), nullable=False)
    tr_grade = Column(Integer, nullable=False)
    grade = Column(Integer)
    tr_reason = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    tr_asmt_hdr_id = Column(Integer)
    tr_cs_cert_typ = Column(ForeignKey(u'tr_cs_cert_typ.tr_cs_cert_typ'))
    tr_cs_typ = Column(ForeignKey(u'tr_cs_typ.tr_cs_typ'))
    corrected_entry_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    ae_ind = Column(Unicode(1))
    dx_id = Column(Integer)
    test_result_id = Column(Integer)
    tr_sub_comp_name = Column(Unicode(60))
    tr_sub_comp_grade = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))
    cls_scheme_id = Column(Integer)

    tr_comp = relationship(u'TrComp')
    tr_asmt_typ1 = relationship(u'TrAsmtTyp')
    tr_cs_cert_typ1 = relationship(u'TrCsCertTyp')
    tr_cs_typ1 = relationship(u'TrCsTyp')


class TrAsmtHdr(Base):
    __tablename__ = 'tr_asmt_hdr'
    __table_args__ = (
        Index('nc1_tr_asmt_hdr', 'reviewer_stkh_id', 'review_rqd_ind', 'asmt_date'),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    tr_asmt_hdr_id = Column(Integer, primary_key=True, nullable=False)
    appr_ind = Column(Unicode(1), nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    tr_obj_ind = Column(Unicode(1))
    tr_asmt_eff_date = Column(DateTime)
    gs_author = Column(Integer)
    asmt_date = Column(DateTime)
    appr_tstamp = Column(DateTime)
    cls_scheme_id = Column(Integer)
    tr_reason = Column(UnicodeText(1073741823))
    revision_no = Column(Integer, server_default=text("((1))"))
    review_rqd_ind = Column(Unicode(1))
    reviewed_ind = Column(Unicode(1))
    reviewer_stkh_id = Column(Unicode(20))
    reviewed_tstamp = Column(DateTime)
    pt_entered_ind = Column(Unicode(1))
    app_cd = Column(Unicode(10))
    err_rsn_txt = Column(Unicode(255))


class TrAsmtHdrMh(Base):
    __tablename__ = 'tr_asmt_hdr_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    tr_asmt_hdr_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    appr_ind = Column(Unicode(1), nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    tr_obj_ind = Column(Unicode(1))
    tr_asmt_eff_date = Column(DateTime)
    gs_author = Column(Integer)
    asmt_date = Column(DateTime)
    appr_tstamp = Column(DateTime)
    cls_scheme_id = Column(Integer)
    tr_reason = Column(UnicodeText(1073741823))
    review_rqd_ind = Column(Unicode(1))
    reviewed_ind = Column(Unicode(1))
    reviewer_stkh_id = Column(Unicode(20))
    reviewed_tstamp = Column(DateTime)
    pt_entered_ind = Column(Unicode(1))
    app_cd = Column(Unicode(10))
    err_rsn_txt = Column(Unicode(255))


class TrAsmtMh(Base):
    __tablename__ = 'tr_asmt_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    pt_tr_asmt_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    tr_asmt_typ = Column(Integer, nullable=False)
    date_time_asmt = Column(DateTime, nullable=False)
    gs_author = Column(Integer, nullable=False)
    eff_date = Column(DateTime, nullable=False)
    tr_typ = Column(Unicode(30), nullable=False)
    tr_comp_name = Column(Unicode(30), nullable=False)
    tr_grade = Column(Integer, nullable=False)
    grade = Column(Integer)
    tr_reason = Column(UnicodeText(1073741823))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    tr_asmt_hdr_id = Column(Integer)
    tr_cs_cert_typ = Column(Integer)
    tr_cs_typ = Column(Integer)
    corrected_entry_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    ae_ind = Column(Unicode(1))
    dx_id = Column(Integer)
    test_result_id = Column(Integer)
    tr_sub_comp_name = Column(Unicode(60))
    tr_sub_comp_grade = Column(Integer)
    cls_scheme_id = Column(Integer)


class TrAsmtTyp(Base):
    __tablename__ = 'tr_asmt_typ'

    tr_asmt_typ = Column(Integer, primary_key=True)
    tr_asmt_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TrComp(Base):
    __tablename__ = 'tr_comp'
    __table_args__ = (
        ForeignKeyConstraint(['gnrc_tr_typ', 'gnrc_tr_comp_name'], [u'tr_comp_name.tr_typ', u'tr_comp_name.tr_comp_name']),
        ForeignKeyConstraint(['gs_author', 'eff_date', 'tr_typ'], [u'tr_typ_author.gs_author', u'tr_typ_author.eff_date', u'tr_typ_author.tr_typ'])
    )

    gs_author = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    tr_typ = Column(Unicode(30), primary_key=True, nullable=False)
    tr_comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    gnrc_tr_typ = Column(Unicode(30), nullable=False)
    gnrc_tr_comp_name = Column(Unicode(30), nullable=False)
    asmt_mthd = Column(ForeignKey(u'asmt_mthd.asmt_mthd'), nullable=False)
    tr_units = Column(ForeignKey(u'unit_of_meas.uom'))
    tr_operator = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    tox_death_ind = Column(Unicode(1))
    tr_sub_comp_ind = Column(Unicode(1))
    cls_scheme_id = Column(Integer, index=True)
    tr_comp_id = Column(Integer, index=True)
    pt_comp_desc = Column(Unicode(100))

    asmt_mthd1 = relationship(u'AsmtMthd')
    tr_comp_name1 = relationship(u'TrCompName')
    tr_typ_author = relationship(u'TrTypAuthor')
    unit_of_mea = relationship(u'UnitOfMea')


class TrCompCulture(Base):
    __tablename__ = 'tr_comp_culture'

    tr_comp_id = Column(Integer, primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    tr_typ = Column(Unicode(100), nullable=False)
    tr_comp_name = Column(Unicode(100), nullable=False)
    gnrc_tr_typ = Column(Unicode(100), nullable=False)
    gnrc_tr_comp_name = Column(Unicode(100), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_inst_id = Column(Unicode(30))
    trans_log_tstamp = Column(DateTime)
    trans_trf_tstamp = Column(DateTime)


class TrCompName(Base):
    __tablename__ = 'tr_comp_name'

    tr_typ = Column(Unicode(30), primary_key=True, nullable=False)
    tr_comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    tr_comp_desc = Column(Unicode(255))


class TrCsCertTyp(Base):
    __tablename__ = 'tr_cs_cert_typ'

    tr_cs_cert_typ = Column(Integer, primary_key=True)
    tr_cs_cert_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TrCsTyp(Base):
    __tablename__ = 'tr_cs_typ'

    tr_cs_typ = Column(Integer, primary_key=True)
    tr_cs_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TrGrp(Base):
    __tablename__ = 'tr_grp'

    gnrc_grp_id = Column(ForeignKey(u'gnrc_grp.gnrc_grp_id'), primary_key=True, nullable=False)
    tr_grp_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    cls_scheme_id = Column(Integer, nullable=False)
    tr_grp_seq_no = Column(Integer, nullable=False)
    active_ind = Column(Unicode(1), nullable=False)
    default_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    gnrc_grp = relationship(u'GnrcGrp')


class TrGrpComp(Base):
    __tablename__ = 'tr_grp_comp'
    __table_args__ = (
        ForeignKeyConstraint(['gnrc_grp_id', 'tr_grp_id', 'inst_id'], [u'tr_grp.gnrc_grp_id', u'tr_grp.tr_grp_id', u'tr_grp.inst_id']),
    )

    gnrc_grp_id = Column(Integer, primary_key=True, nullable=False)
    tr_grp_id = Column(Integer, primary_key=True, nullable=False)
    tr_grp_comp_id = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    tr_comp_id = Column(Integer, nullable=False)
    tr_sub_comp_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    gnrc_grp = relationship(u'TrGrp')


class TrTyp(Base):
    __tablename__ = 'tr_typ'

    tr_typ = Column(Unicode(30), primary_key=True)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TrTypAuthor(Base):
    __tablename__ = 'tr_typ_author'

    gs_author = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    tr_typ = Column(Unicode(30), primary_key=True, nullable=False)
    conflict_mthd = Column(Integer, nullable=False)
    gnrc_tr_typ = Column(ForeignKey(u'tr_typ.tr_typ'))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    tr_typ1 = relationship(u'TrTyp')


class TrTypComp(Base):
    __tablename__ = 'tr_typ_comp'
    __table_args__ = (
        ForeignKeyConstraint(['tr_typ', 'tr_comp_name'], [u'tr_comp_name.tr_typ', u'tr_comp_name.tr_comp_name']),
        ForeignKeyConstraint(['typ_of_test', 'comp_name'], [u'test_comp.typ_of_test', u'test_comp.comp_name'])
    )

    tr_typ = Column(Unicode(30), primary_key=True, nullable=False)
    tr_comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    tr_comp_name1 = relationship(u'TrCompName')
    test_comp = relationship(u'TestComp')


class TrfCall(Base):
    __tablename__ = 'trf_call'

    call_id = Column(Integer, primary_key=True)
    inst_id = Column(ForeignKey(u'inst.inst_id'), nullable=False)
    trf_fnctn = Column(Unicode(30), nullable=False)
    call_time = Column(Unicode(8), nullable=False)
    call_day = Column(Integer)
    call_day_no = Column(Integer)
    call_dt_no = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    active_ind = Column(Unicode(1))

    inst = relationship(u'Inst')


class TrfCallAll(Base):
    __tablename__ = 'trf_call_all'

    call_id = Column(Integer, primary_key=True)
    trf_fnctn = Column(Unicode(30), nullable=False)
    call_time = Column(Unicode(8), nullable=False)
    call_day = Column(Integer)
    call_day_no = Column(Integer)
    call_dt_no = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    active_ind = Column(Unicode(1))


class TrfColToOvride(Base):
    __tablename__ = 'trf_col_to_ovride'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'trf_dirctn'], [u'trf_inst.inst_id', u'trf_inst.trf_dirctn']),
        ForeignKeyConstraint(['tbl_name', 'col_name'], [u'impexp_columns.table_name', u'impexp_columns.column_name'])
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    trf_dirctn = Column(Unicode(10), primary_key=True, nullable=False)
    tbl_name = Column(Unicode(30), primary_key=True, nullable=False)
    col_name = Column(Unicode(40), primary_key=True, nullable=False)
    ovride_typ = Column(Unicode(10), nullable=False)
    repl_val = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))

    inst = relationship(u'TrfInst')
    impexp_column = relationship(u'ImpexpColumn')


class TrfCondPt(Base):
    __tablename__ = 'trf_cond_pt'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'trf_dirctn', 'cond_rule'], [u'trf_cond_rule_inst.inst_id', u'trf_cond_rule_inst.trf_dirctn', u'trf_cond_rule_inst.cond_rule']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    trf_dirctn = Column(Unicode(10), nullable=False)
    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    cond_rule = Column(Unicode(30), nullable=False)
    last_trf_tstamp = Column(DateTime)
    resend_all_data = Column(Unicode(1))
    suspend_trf_pt = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))

    inst = relationship(u'TrfCondRuleInst')


t_trf_cond_pt_hist = Table(
    'trf_cond_pt_hist', metadata,
    Column('inst_id', Unicode(30), nullable=False),
    Column('trf_dirctn', Unicode(10), nullable=False),
    Column('pt_id', Unicode(20), nullable=False),
    Column('cond_rule', Unicode(30), nullable=False),
    Column('trf_tstamp', DateTime, nullable=False),
    Column('trans_log_userid', Unicode(10), nullable=False),
    Column('trans_log_tstamp', DateTime, nullable=False),
    Column('trans_log_inst_id', Unicode(30), nullable=False),
    Column('void_ind', Unicode(1))
)


class TrfCondQstr(Base):
    __tablename__ = 'trf_cond_qstr'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'trf_dirctn', 'cond_rule'], [u'trf_cond_rule_inst.inst_id', u'trf_cond_rule_inst.trf_dirctn', u'trf_cond_rule_inst.cond_rule']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    trf_dirctn = Column(Unicode(10), primary_key=True, nullable=False)
    qstr_name = Column(Unicode(20), primary_key=True, nullable=False)
    cond_rule = Column(Unicode(30), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)

    inst = relationship(u'TrfCondRuleInst')


class TrfCondRule(Base):
    __tablename__ = 'trf_cond_rule'

    cond_rule = Column(Unicode(30), primary_key=True)
    operator = Column(Unicode(2), nullable=False)
    ovride_typ = Column(Unicode(10), nullable=False)
    ovride_val = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))


class TrfCondRuleInst(Base):
    __tablename__ = 'trf_cond_rule_inst'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'trf_dirctn'], [u'trf_inst.inst_id', u'trf_inst.trf_dirctn']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    trf_dirctn = Column(Unicode(10), primary_key=True, nullable=False)
    cond_rule = Column(ForeignKey(u'trf_cond_rule.cond_rule'), primary_key=True, nullable=False)
    process_rule_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))

    trf_cond_rule = relationship(u'TrfCondRule')
    inst = relationship(u'TrfInst')


class TrfCondTp(Base):
    __tablename__ = 'trf_cond_tp'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'trf_dirctn', 'cond_rule'], [u'trf_cond_rule_inst.inst_id', u'trf_cond_rule_inst.trf_dirctn', u'trf_cond_rule_inst.cond_rule']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    trf_dirctn = Column(Unicode(10), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    cond_rule = Column(Unicode(30), primary_key=True, nullable=False)
    last_trf_tstamp = Column(DateTime)
    resend_all_data = Column(Unicode(1))
    suspend_trf_tp = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))

    inst = relationship(u'TrfCondRuleInst')


class TrfCondTpHist(Base):
    __tablename__ = 'trf_cond_tp_hist'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    trf_dirctn = Column(Unicode(10), primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    cond_rule = Column(Unicode(30), primary_key=True, nullable=False)
    trf_tstamp = Column(DateTime, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    void_ind = Column(Unicode(1))


class TrfEncVal(Base):
    __tablename__ = 'trf_enc_val'

    scrub_rule = Column(ForeignKey(u'trf_scrub_rule.scrub_rule'), primary_key=True, nullable=False)
    decd_val = Column(Unicode(100), primary_key=True, nullable=False)
    enc_val = Column(Unicode(255), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)

    trf_scrub_rule = relationship(u'TrfScrubRule')


class TrfExclTransLogNull(Base):
    __tablename__ = 'trf_excl_trans_log_nulls'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'trf_dirctn'], [u'trf_inst.inst_id', u'trf_inst.trf_dirctn']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    trf_dirctn = Column(Unicode(10), primary_key=True, nullable=False)
    tbl_name = Column(Unicode(30), primary_key=True, nullable=False)
    active_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'TrfInst')


class TrfInst(Base):
    __tablename__ = 'trf_inst'

    inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True, nullable=False)
    trf_dirctn = Column(Unicode(10), primary_key=True, nullable=False)
    trf_mgr = Column(Unicode(1), nullable=False)
    trf_plnr = Column(Unicode(1), nullable=False)
    trf_data_anon = Column(Unicode(1), nullable=False)
    trf_file_name = Column(Unicode(6), nullable=False)
    trf_file_dir = Column(Unicode(100), nullable=False)
    trf_share_point = Column(Unicode(100))
    remote_file_dir = Column(Unicode(100))
    compr_file_flag = Column(Unicode(1), nullable=False)
    virus_scan = Column(Unicode(1), nullable=False)
    ignore_log = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trf_share_point_domain = Column(Unicode(60))

    inst = relationship(u'Inst')


class TrfLog(Base):
    __tablename__ = 'trf_log'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'trf_dirctn'], [u'trf_inst.inst_id', u'trf_inst.trf_dirctn']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    trf_dirctn = Column(Unicode(10), primary_key=True, nullable=False)
    trf_fnctn = Column(Unicode(30), primary_key=True, nullable=False)
    trf_tstamp = Column(DateTime, primary_key=True, nullable=False)
    rec_count = Column(Integer, nullable=False)
    rec_committed = Column(Integer, nullable=False)
    file_ext_seq_no = Column(Integer, nullable=False)
    compl_flag = Column(Unicode(1), nullable=False)
    start_tstamp = Column(DateTime)
    stop_tstamp = Column(DateTime)
    files_processed = Column(Integer)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_minst_id = Column(Unicode(30))
    trans_log_mtstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    void_ind = Column(Unicode(1))
    ovride_tstamp = Column(DateTime)

    inst = relationship(u'TrfInst')


class TrfMsgLog(Base):
    __tablename__ = 'trf_msg_log'

    trf_fnctn = Column(Unicode(30), primary_key=True, nullable=False)
    trf_msg_tstamp = Column(DateTime, primary_key=True, nullable=False)
    trf_seq_no = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30))
    msg_typ = Column(Unicode(1))
    command_typ = Column(Unicode(20))
    tbl_name = Column(Unicode(30))
    return_cd = Column(Integer)
    msg_text = Column(Unicode(200))
    detail_msg_text = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)


class TrfScrubCondRul(Base):
    __tablename__ = 'trf_scrub_cond_rul'

    scrub_rule = Column(ForeignKey(u'trf_scrub_rule.scrub_rule'), primary_key=True, nullable=False)
    cond_rule = Column(ForeignKey(u'trf_cond_rule.cond_rule'), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)

    trf_cond_rule = relationship(u'TrfCondRule')
    trf_scrub_rule = relationship(u'TrfScrubRule')


class TrfScrubRule(Base):
    __tablename__ = 'trf_scrub_rule'

    scrub_rule = Column(Unicode(30), primary_key=True)
    rule_desc = Column(Unicode(60))
    enc_flag = Column(Unicode(1), nullable=False)
    decd_fnctn = Column(Unicode(30))
    enc_fnctn = Column(Unicode(30))
    spec_fnctn = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))


class TrfSeq(Base):
    __tablename__ = 'trf_seq'

    no_typ = Column(Unicode(40), primary_key=True)
    next_no = Column(Integer, nullable=False)


class TrfSync(Base):
    __tablename__ = 'trf_sync'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'trf_dirctn'], [u'trf_inst.inst_id', u'trf_inst.trf_dirctn']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    trf_dirctn = Column(Unicode(10), primary_key=True, nullable=False)
    sync_seq_no = Column(Integer, primary_key=True, nullable=False)
    sql_clause = Column(Unicode(255))
    dbms = Column(Unicode(30), nullable=False)
    server_name = Column(Unicode(30), nullable=False)
    db_name = Column(Unicode(30), nullable=False)
    stop_tstamp = Column(DateTime, nullable=False)
    resp_ind = Column(Unicode(1), nullable=False)
    compl_flag = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    sync_tstamp = Column(DateTime)
    from_tstamp = Column(DateTime)

    inst = relationship(u'TrfInst')


class TrfSyncDet(Base):
    __tablename__ = 'trf_sync_det'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'trf_dirctn', 'sync_seq_no'], [u'trf_sync.inst_id', u'trf_sync.trf_dirctn', u'trf_sync.sync_seq_no']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    trf_dirctn = Column(Unicode(10), primary_key=True, nullable=False)
    sync_seq_no = Column(Integer, primary_key=True, nullable=False)
    tbl_name = Column(Unicode(30), primary_key=True, nullable=False)
    compl_flag = Column(Unicode(1), nullable=False)
    rec_read = Column(Integer, nullable=False)
    rec_del = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    pt_id = Column(Unicode(20))

    inst = relationship(u'TrfSync')


class TrfTblToBlock(Base):
    __tablename__ = 'trf_tbl_to_block'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'trf_dirctn'], [u'trf_inst.inst_id', u'trf_inst.trf_dirctn']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    trf_dirctn = Column(Unicode(10), primary_key=True, nullable=False)
    tbl_name = Column(ForeignKey(u'impexp_tables.table_name'), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))

    inst = relationship(u'TrfInst')
    impexp_table = relationship(u'ImpexpTable')


class TumClsCritTyp(Base):
    __tablename__ = 'tum_cls_crit_typ'

    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    author_cd = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    crit_typ_cd = Column(Unicode(10), primary_key=True, nullable=False)
    seq_no = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TumClsCritTypHdr(Base):
    __tablename__ = 'tum_cls_crit_typ_hdr'
    __table_args__ = (
        Index('nc1_tum_cls_crit_typ_hdr', 'eff_date', 'author_cd', 'tp_cls_value_id'),
    )

    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    author_cd = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    hdr_cd = Column(Unicode(10), primary_key=True, nullable=False)
    hdr_desc = Column(Unicode(40), nullable=False)
    seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TumClsCritTypHdrCulture(Base):
    __tablename__ = 'tum_cls_crit_typ_hdr_culture'

    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    author_cd = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    hdr_cd = Column(Unicode(10), primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    hdr_desc = Column(Unicode(100), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TumClsCritValue(Base):
    __tablename__ = 'tum_cls_crit_value'
    __table_args__ = (
        ForeignKeyConstraint(['tp_cls_typ_id', 'tp_cls_value_id', 'author_cd', 'eff_date', 'crit_typ_cd'], [u'tum_cls_crit_typ.tp_cls_typ_id', u'tum_cls_crit_typ.tp_cls_value_id', u'tum_cls_crit_typ.author_cd', u'tum_cls_crit_typ.eff_date', u'tum_cls_crit_typ.crit_typ_cd']),
        ForeignKeyConstraint(['tp_cls_typ_id', 'tp_cls_value_id', 'author_cd', 'eff_date', 'hdr_cd'], [u'tum_cls_crit_typ_hdr.tp_cls_typ_id', u'tum_cls_crit_typ_hdr.tp_cls_value_id', u'tum_cls_crit_typ_hdr.author_cd', u'tum_cls_crit_typ_hdr.eff_date', u'tum_cls_crit_typ_hdr.hdr_cd'])
    )

    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    author_cd = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    crit_cd = Column(Unicode(10), primary_key=True, nullable=False)
    crit_desc = Column(UnicodeText(1073741823), nullable=False)
    crit_typ_cd = Column(Unicode(10), nullable=False)
    seq_no = Column(Integer)
    hdr_cd = Column(Unicode(10))
    assess_cd = Column(Unicode(10))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    tp_cls_typ = relationship(u'TumClsCritTyp')
    tp_cls_typ1 = relationship(u'TumClsCritTypHdr')


class TumClsCritValueCulture(Base):
    __tablename__ = 'tum_cls_crit_value_culture'

    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    author_cd = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    crit_cd = Column(Unicode(10), primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    crit_desc = Column(UnicodeText(1073741823), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TumClsSchemAuth(Base):
    __tablename__ = 'tum_cls_schem_auth'

    author_cd = Column(Integer, primary_key=True)
    author_name = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TumClsScheme(Base):
    __tablename__ = 'tum_cls_scheme'
    __table_args__ = (
        ForeignKeyConstraint(['tp_cls_typ_id', 'tp_cls_value_id'], [u'tp_cls_value.tp_cls_typ_id', u'tp_cls_value.tp_cls_value_id']),
    )

    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    author_cd = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    appr_flag = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    tp_cls_typ = relationship(u'TpClsValue')


class TumClsStageDef(Base):
    __tablename__ = 'tum_cls_stage_def'

    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    author_cd = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    stage = Column(Unicode(20), primary_key=True, nullable=False)
    stage_def_no = Column(Integer, primary_key=True, nullable=False)
    crit_cd = Column(Unicode(10), primary_key=True, nullable=False)
    crit_typ_cd = Column(Unicode(10), nullable=False)
    seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TumHstpthDesc(Base):
    __tablename__ = 'tum_hstpth_desc'

    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    author_cd = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    hstpth_typ_cd = Column(Integer, primary_key=True, nullable=False)
    hstpth_desc = Column(UnicodeText(1073741823), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TumHstpthGrade(Base):
    __tablename__ = 'tum_hstpth_grade'

    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    author_cd = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    hstpth_grade_cd = Column(Unicode(8), primary_key=True, nullable=False)
    hstpth_grade_desc = Column(Unicode(50))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TumHstpthTyp(Base):
    __tablename__ = 'tum_hstpth_typ'

    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    author_cd = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    hstpth_typ_cd = Column(Integer, primary_key=True, nullable=False)
    hstpth_typ_desc = Column(Unicode(50), nullable=False)
    hstpth_hdr_cd = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TumHstpthTypHdr(Base):
    __tablename__ = 'tum_hstpth_typ_hdr'

    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    author_cd = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    hstpth_hdr_cd = Column(Integer, primary_key=True, nullable=False)
    hstpth_hdr_desc = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TumLymphSymptom(Base):
    __tablename__ = 'tum_lymph_symptoms'

    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    author_cd = Column(Integer, primary_key=True, nullable=False)
    eff_date = Column(DateTime, primary_key=True, nullable=False)
    lymph_cd = Column(Unicode(1), primary_key=True, nullable=False)
    lymph_desc = Column(UnicodeText(1073741823), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TxPln(Base):
    __tablename__ = 'tx_pln'

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    tp_typ = Column(Unicode(1))
    pln_typ = Column(ForeignKey(u'pln_typ.pln_typ'))
    summary = Column(UnicodeText(1073741823))
    brief_desc = Column(Unicode(200))
    mod_conflict_typ = Column(Integer)
    mod_typ = Column(Integer)
    tp_cls = Column(Integer)
    spsr = Column(ForeignKey(u'spsr.spsr'))
    original_inst_id = Column(Unicode(30), nullable=False)
    original_userid = Column(Unicode(10))
    original_spsr = Column(ForeignKey(u'spsr.spsr'))
    original_tp_name = Column(Unicode(20))
    gs_author = Column(Integer)
    eff_date = Column(DateTime)
    inst_id = Column(Unicode(30), nullable=False)
    authors = Column(UnicodeText(1073741823))
    original_authors = Column(UnicodeText(1073741823))
    tp_source = Column(Unicode(1))
    source_tp_name = Column(Unicode(20))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    phys_order_ind = Column(Unicode(1))
    billable_ind = Column(Unicode(1))
    clin_trial_ind = Column(Unicode(1))
    active_ind = Column(Unicode(1))
    sex_cd = Column(Unicode(1))
    age_start = Column(Integer)
    age_start_unit = Column(Integer)
    age_end = Column(Integer)
    age_end_unit = Column(Integer)
    ct_phase = Column(Integer)
    dsp_tp_name = Column(Unicode(80))
    mndtry_amend_ind = Column(Unicode(1))
    ext_tp_name = Column(Unicode(40))
    reg_group = Column(Unicode(80))

    spsr1 = relationship(u'Spsr', primaryjoin='TxPln.original_spsr == Spsr.spsr')
    pln_typ1 = relationship(u'PlnTyp')
    spsr2 = relationship(u'Spsr', primaryjoin='TxPln.spsr == Spsr.spsr')


class TxTframeIntvUse(Base):
    __tablename__ = 'tx_tframe_intv_use'

    tx_tframe_typ = Column(ForeignKey(u'tx_tframe_typ.tx_tframe_typ'), primary_key=True, nullable=False)
    intv_use_typ = Column(ForeignKey(u'intv_use_typ.intv_use_typ'), primary_key=True, nullable=False)
    event_typ = Column(ForeignKey(u'event_typ.event_typ'), primary_key=True, nullable=False)
    tx_tframe_intv_use_desc = Column(Unicode(40))
    sort_order = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    event_typ1 = relationship(u'EventTyp')
    intv_use_typ1 = relationship(u'IntvUseTyp')
    tx_tframe_typ1 = relationship(u'TxTframeTyp')


class TxTframeTyp(Base):
    __tablename__ = 'tx_tframe_typ'

    tx_tframe_typ = Column(Integer, primary_key=True)
    tx_tframe_typ_desc = Column(Unicode(40))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class TxVrtn(Base):
    __tablename__ = 'tx_vrtn'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id'], [u'pt_visit.pt_id', u'pt_visit.pt_visit_id']),
        ForeignKeyConstraint(['pt_id', 'vrbl_id'], [u'vrbl_order.pt_id', u'vrbl_order.vrbl_id'])
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10))
    phase_seq_no = Column(Integer, primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    vrtn_date = Column(DateTime, primary_key=True, nullable=False)
    vrtn_typ = Column(Integer)
    vrtn_cls = Column(Integer)
    vrtn_desc = Column(UnicodeText(1073741823))
    spsr_checked = Column(Unicode(1))
    inst_id = Column(Unicode(30), nullable=False)
    userid_link = Column(Unicode(10), nullable=False)
    vrtn_action = Column(Integer)
    reviewing_spsr = Column(Unicode(10))
    spsr_id = Column(Unicode(30))
    vrbl_id = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtVisit')
    pt1 = relationship(u'VrblOrder')


class TxVrtnNote(Base):
    __tablename__ = 'tx_vrtn_note'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_visit_id', 'tp_name', 'phase_seq_no', 'date_tp_init', 'vrtn_date'], [u'tx_vrtn.pt_id', u'tx_vrtn.pt_visit_id', u'tx_vrtn.tp_name', u'tx_vrtn.phase_seq_no', u'tx_vrtn.date_tp_init', u'tx_vrtn.vrtn_date']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10))
    phase_seq_no = Column(Integer, primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    tx_vrtn_note_typ = Column(ForeignKey(u'tx_vrtn_note_typ.tx_vrtn_note_typ'), primary_key=True, nullable=False)
    vrtn_date = Column(DateTime, primary_key=True, nullable=False)
    tx_vrtn_note = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    vrtn_rsn_typ = Column(Integer)
    rsn_typ_ind = Column(Unicode(1))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'TxVrtn')
    tx_vrtn_note_typ1 = relationship(u'TxVrtnNoteTyp')


class TxVrtnNoteTyp(Base):
    __tablename__ = 'tx_vrtn_note_typ'

    tx_vrtn_note_typ = Column(Integer, primary_key=True)
    tx_vrtn_note_seq = Column(Integer, nullable=False)
    tx_vrtn_note_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class TypOfTest(Base):
    __tablename__ = 'typ_of_test'

    typ_of_test = Column(Unicode(20), primary_key=True)
    form_no = Column(Unicode(20), nullable=False)
    dss_id = Column(ForeignKey(u'dx_srv_section.dss_id'))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    test_cls = Column(Unicode(30))
    typ_of_test_id = Column(Integer)

    dss = relationship(u'DxSrvSection')


class TypOfTestCulture(Base):
    __tablename__ = 'typ_of_test_culture'

    typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    culture_cd = Column(Unicode(10), primary_key=True, nullable=False)
    lookup_desc = Column(Unicode(100))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class UnavlDow(Base):
    __tablename__ = 'unavl_dow'

    unavl_dow = Column(Integer, primary_key=True)
    unavl_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class UnavlHdr(Base):
    __tablename__ = 'unavl_hdr'
    __table_args__ = (
        Index('nc1_unavl_hdr', 'pt_id', 'pt_visit_id'),
        Index('nc4_unavl_hdr', 'inst_id', 'unavl_hdr_id', 'slot_size'),
        Index('nc3_unavl_hdr', 'pt_id', 'pt_visit_id', 'slot_size')
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    unavl_hdr_id = Column(Integer, primary_key=True, nullable=False)
    unavl_from = Column(DateTime, nullable=False)
    unavl_to = Column(DateTime, nullable=False)
    slot_size = Column(Integer)
    filler_appt_id = Column(Unicode(75), index=True)
    pt_id = Column(Unicode(20))
    pt_visit_id = Column(Integer)
    event_typ = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    pt_ind = Column(Unicode(1))
    prof_ind = Column(Unicode(1))
    loc_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    user_inst_id = Column(Unicode(30))
    userid = Column(Unicode(10))
    loc_id = Column(Integer)
    read_only_ind = Column(Unicode(1))


class UnavlTemplate(Base):
    __tablename__ = 'unavl_template'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    unavl_template_id = Column(Integer, primary_key=True, nullable=False)
    unavl_template_txt = Column(Unicode(30), nullable=False)
    unavl_template_txt_desc = Column(Unicode(255), nullable=False)
    active_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class UnavlTyp(Base):
    __tablename__ = 'unavl_typ'

    unavl_typ = Column(Integer, primary_key=True)
    unavl_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class UnitConversion(Base):
    __tablename__ = 'unit_conversion'

    source = Column(Integer, primary_key=True, nullable=False)
    destination = Column(Integer, primary_key=True, nullable=False)
    conversion_id = Column(Integer, nullable=False)
    multiplier = Column(Numeric(11, 4))
    formula = Column(Unicode(255))
    inverse_formula = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class UnitOfMea(Base):
    __tablename__ = 'unit_of_meas'

    uom = Column(Integer, primary_key=True)
    uom_desc = Column(Unicode(40), nullable=False)
    medi_uom = Column(Unicode(10))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    base_unit = Column(Integer)
    ordering_uom = Column(Integer)
    per_vol_amt = Column(Numeric(11, 4))
    per_vol_uom = Column(Integer)
    uom_abbr = Column(Unicode(10))


class UomGroup(Base):
    __tablename__ = 'uom_group'

    uom_group_id = Column(Integer, primary_key=True, nullable=False)
    uom_cat_id = Column(Integer, primary_key=True, nullable=False)
    uom_group_name = Column(Unicode(20), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class UserEmergAccessLog(Base):
    __tablename__ = 'user_emerg_access_log'
    __table_args__ = (
        Index('nc1_user_emerg_access_log', 'inst_id', 'userid', 'access_time'),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    user_inst_id = Column(Unicode(30), nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    group_inst_id = Column(Unicode(30), nullable=False)
    user_group_id = Column(Unicode(10), nullable=False)
    access_time = Column(DateTime, primary_key=True, nullable=False)
    app_name = Column(Unicode(10), nullable=False)
    access_cd = Column(Integer, nullable=False)
    access_cmt = Column(Unicode(60))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class UserExamComp(Base):
    __tablename__ = 'user_exam_comp'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    exam_comp_id = Column(ForeignKey(u'exam_comp.exam_comp_id'), primary_key=True, nullable=False)
    exam_cd = Column(Unicode(1))
    system_typ_id = Column(Integer, nullable=False)
    user_exam_comp_desc = Column(Unicode(40), nullable=False)
    neg_desc = Column(Unicode(100))
    active_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    normal_asmt_level = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))
    app_cd = Column(Unicode(10))

    exam_comp = relationship(u'ExamComp')


class UserExamSystemDflt(Base):
    __tablename__ = 'user_exam_system_dflt'

    userid = Column(Unicode(10), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    system_typ_id = Column(Integer, primary_key=True, nullable=False)
    normal_desc = Column(Unicode(255))
    valid_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    normal_intro = Column(Unicode(255))
    abnormal_intro = Column(Unicode(255))


class UserGroup(Base):
    __tablename__ = 'user_group'

    group_inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True, nullable=False)
    user_group_id = Column(Unicode(10), primary_key=True, nullable=False)
    user_group_desc = Column(Unicode(40), nullable=False)
    invalid_login_nm = Column(Integer, nullable=False)
    passwd_chg_days = Column(Integer, nullable=False)
    app_lock_second = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))

    group_inst = relationship(u'Inst')


class UserGroupCtrl(Base):
    __tablename__ = 'user_group_ctrl'
    __table_args__ = (
        ForeignKeyConstraint(['app_cd', 'window_label', 'ctrl_label'], [u'dflt_ctrl.app_cd', u'dflt_ctrl.window_label', u'dflt_ctrl.ctrl_label']),
        ForeignKeyConstraint(['group_inst_id', 'user_group_id'], [u'user_group.group_inst_id', u'user_group.user_group_id']),
        Index('nc1_user_group_ctrl', 'group_inst_id', 'user_group_id', 'inst_id')
    )

    group_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    user_group_id = Column(Unicode(10), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    app_cd = Column(ForeignKey(u'app.app_cd'), primary_key=True, nullable=False)
    window_label = Column(Unicode(30), primary_key=True, nullable=False)
    ctrl_label = Column(Unicode(30), primary_key=True, nullable=False)
    enabled_flag = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_mtstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_minst_id = Column(Unicode(30))

    dflt_ctrl = relationship(u'DfltCtrl')
    app = relationship(u'App')
    group_inst = relationship(u'UserGroup')


class UserGroupMenu(Base):
    __tablename__ = 'user_group_menu'
    __table_args__ = (
        ForeignKeyConstraint(['app_cd', 'menu_label'], [u'dflt_menu.app_cd', u'dflt_menu.menu_label']),
        ForeignKeyConstraint(['group_inst_id', 'user_group_id'], [u'user_group.group_inst_id', u'user_group.user_group_id']),
        Index('nc1_user_group_menu', 'group_inst_id', 'user_group_id', 'inst_id')
    )

    group_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    user_group_id = Column(Unicode(10), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    app_cd = Column(ForeignKey(u'app.app_cd'), primary_key=True, nullable=False)
    menu_label = Column(Unicode(100), primary_key=True, nullable=False)
    enabled_flag = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))

    dflt_menu = relationship(u'DfltMenu')
    app = relationship(u'App')
    group_inst = relationship(u'UserGroup')


class UserInstPtKeyCd(Base):
    __tablename__ = 'user_inst_pt_key_cd'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    pt_key_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    pt_key_cd = Column(Integer, primary_key=True, nullable=False)
    display_pt_id_ind = Column(Unicode(1))
    header_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class UserMsg(Base):
    __tablename__ = 'user_msg'

    msg_id = Column(Integer, primary_key=True)
    msg_creator_userid = Column(Unicode(10))
    msg_creator_inst_id = Column(Unicode(30))
    msg_topic = Column(Unicode(100))
    msg_txt = Column(UnicodeText(1073741823))
    appr_ind = Column(Unicode(1))
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    rcpnt_discipline_typ = Column(Integer)
    rcpnt_inst_id = Column(Unicode(30))
    inactivate_date = Column(DateTime)


class UserMsgDsp(Base):
    __tablename__ = 'user_msg_dsp'

    user_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    msg_id = Column(Integer, primary_key=True, nullable=False)


class UserPnToolbar(Base):
    __tablename__ = 'user_pn_toolbar'
    __table_args__ = (
        ForeignKeyConstraint(['user_inst_id', 'userid'], [u'userid.inst_id', u'userid.userid']),
    )

    user_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    pn_toolbar_fcn_typ = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    template_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    user_inst = relationship(u'Userid')


class UserPrefer(Base):
    __tablename__ = 'user_prefer'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    user_prefer_cd = Column(Integer, primary_key=True, nullable=False)
    user_prefer_value = Column(Unicode(255))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class UserPreferCd(Base):
    __tablename__ = 'user_prefer_cd'

    user_prefer_cd = Column(Integer, primary_key=True)
    user_prefer_desc = Column(Unicode(255), nullable=False)
    data_typ = Column(Unicode(2))
    default_value = Column(Unicode(255))
    visible_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    section_name = Column(Unicode(30))
    mgr_ind = Column(Unicode(1))
    pln_ind = Column(Unicode(1))
    sec_ind = Column(Unicode(1))


class UserRouteRstr(Base):
    __tablename__ = 'user_route_rstr'

    user_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    admn_route_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class UserSchLoc(Base):
    __tablename__ = 'user_sch_loc'

    user_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    loc_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    loc_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class UserShortcut(Base):
    __tablename__ = 'user_shortcut'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    shortcut_id = Column(Integer, primary_key=True, nullable=False)
    shortcut_label = Column(Unicode(20))
    shortcut_path = Column(Unicode(250))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class UserWinAcces(Base):
    __tablename__ = 'user_win_access'

    window_name = Column(Unicode(30), primary_key=True, nullable=False)
    window_label = Column(Unicode(50), nullable=False)
    pt_id = Column(Unicode(20), index=True)
    trans_log_userid = Column(Unicode(10), primary_key=True, nullable=False)
    trans_log_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    trans_log_tstamp = Column(DateTime, primary_key=True, nullable=False)
    trans_trf_tstamp = Column(DateTime)
    action_cd = Column(Unicode(1))


class Userid(Base):
    __tablename__ = 'userid'
    __table_args__ = (
        ForeignKeyConstraint(['group_inst_id', 'user_group_id'], [u'user_group.group_inst_id', u'user_group.user_group_id']),
    )

    inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False, index=True)
    group_inst_id = Column(Unicode(30))
    user_group_id = Column(Unicode(10))
    status = Column(Unicode(1))
    user_title_id = Column(ForeignKey(u'title_typ.title_id'))
    user_first_name = Column(Unicode(20))
    user_initial = Column(Unicode(2))
    user_last_name = Column(Unicode(30))
    prof_flag = Column(Unicode(1))
    prof_typ = Column(ForeignKey(u'prof_typ.prof_typ'))
    user_bus_tel = Column(Unicode(28))
    user_bus_tel_ext = Column(Unicode(10))
    user_home_tel = Column(Unicode(28))
    user_pager = Column(Unicode(28))
    user_pager_ext = Column(Unicode(10))
    lic_agrmt_ind = Column(Unicode(1))
    lic_agrmt_tstamp = Column(DateTime)
    medi_agrmt_tstamp = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    designation_typ = Column(ForeignKey(u'designation_typ.designation_typ'))
    discipline_typ = Column(ForeignKey(u'discipline_typ.discipline_typ'))
    cpt_agrmt_ind = Column(Unicode(1))
    cpt_agrmt_tstamp = Column(DateTime)
    bcca_agrmt_ind = Column(Unicode(1))
    bcca_agrmt_tstamp = Column(DateTime)
    dea = Column(Unicode(10))
    upin = Column(Unicode(10))
    trans_trf_tstamp = Column(DateTime)
    pn_pre_appr_ind = Column(Unicode(1))
    stkh_id = Column(ForeignKey(u'stkh.stkh_id'), index=True)
    intf_pre_appr_ind = Column(Unicode(1))
    rospe_ind = Column(Unicode(1))
    dsp_name = Column(Unicode(80))
    login_inst_id = Column(Unicode(30))
    login_userid = Column(Unicode(30))
    bill_for_visit_ind = Column(Unicode(1))
    dflt_rx_typ = Column(Integer)
    first_login_date = Column(DateTime)
    name_confirmed_ind = Column(Unicode(1))
    user_bus_tel_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    user_home_tel_fmt_id = Column(ForeignKey(u'fmt_field.fmt_field_id'))
    bill_for_test_ind = Column(Unicode(1), nullable=False)
    bill_for_meds_ind = Column(Unicode(1), nullable=False)
    bill_for_qstr_ind = Column(Unicode(1), nullable=False)
    user_pager_fmt_id = Column(Integer)
    app_user_userid = Column(Unicode(16))
    usercuid = Column(Unicode(64), index=True)
    active_userid = Column(Unicode(10))
    user_typ_cd = Column(Unicode(1))
    user_access_time_override_ind = Column(Unicode(1))
    printer = Column(Unicode(255))

    designation_typ1 = relationship(u'DesignationTyp')
    discipline_typ1 = relationship(u'DisciplineTyp')
    group_inst = relationship(u'UserGroup')
    inst = relationship(u'Inst')
    prof_typ1 = relationship(u'ProfTyp')
    stkh = relationship(u'Stkh')
    user_bus_tel_fmt = relationship(u'FmtField', primaryjoin='Userid.user_bus_tel_fmt_id == FmtField.fmt_field_id')
    user_home_tel_fmt = relationship(u'FmtField', primaryjoin='Userid.user_home_tel_fmt_id == FmtField.fmt_field_id')
    user_title = relationship(u'TitleTyp')


class ValXref(Base):
    __tablename__ = 'val_xref'
    __table_args__ = (
        ForeignKeyConstraint(['a_inst_id', 'a_ref_id', 'b_inst_id', 'b_ref_id'], [u'ref_xref.a_inst_id', u'ref_xref.a_ref_id', u'ref_xref.b_inst_id', u'ref_xref.b_ref_id']),
    )

    val_xref_id = Column(Integer, primary_key=True)
    a_inst_id = Column(Unicode(30), nullable=False)
    a_ref_id = Column(Unicode(15), nullable=False, index=True)
    a_val_1 = Column(Unicode(60), nullable=False)
    a_val_2 = Column(Unicode(60))
    a_val_3 = Column(Unicode(60))
    a_val_4 = Column(Unicode(60))
    a_val_5 = Column(Unicode(60))
    b_inst_id = Column(Unicode(30), nullable=False)
    b_ref_id = Column(Unicode(15), nullable=False, index=True)
    b_val_1 = Column(Unicode(60), nullable=False)
    b_val_2 = Column(Unicode(60))
    b_val_3 = Column(Unicode(60))
    b_val_4 = Column(Unicode(60))
    b_val_5 = Column(Unicode(60))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    a_inst = relationship(u'RefXref')


class ValueTyp(Base):
    __tablename__ = 'value_typ'

    value_typ = Column(Integer, primary_key=True)
    value_desc = Column(Unicode(20))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    value_use_desc = Column(Unicode(30))
    value_update_ind = Column(Unicode(1))
    value_use_ind = Column(Unicode(1))


class VarisDbInfo(Base):
    __tablename__ = 'varis_db_info'

    login_userid = Column(Unicode(30), primary_key=True)
    login_pwd = Column(Unicode(20))
    dbms = Column(Unicode(4), nullable=False)
    svr_name = Column(Unicode(30), nullable=False)
    db_name = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    srv_port = Column(Integer)


class VisitFinancialStatusTyp(Base):
    __tablename__ = 'visit_financial_status_typ'

    visit_financial_status_typ = Column(Integer, primary_key=True)
    visit_financial_status_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class VisitNote(Base):
    __tablename__ = 'visit_note'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'bill_acct_id'], [u'bill_acct.pt_id', u'bill_acct.bill_acct_id']),
        ForeignKeyConstraint(['pt_id', 'pt_eval_id'], [u'pt_tp_eval.pt_id', u'pt_tp_eval.pt_eval_id']),
        ForeignKeyConstraint(['pt_id', 'pt_focus_id'], [u'pt_tp_focus.pt_id', u'pt_tp_focus.pt_focus_id']),
        Index('nc1_visit_note', 'override_inst_id', 'override_userid'),
        Index('nc2_visit_note', 'cert_stkh_id', 'note_tstamp'),
        Index('nc5_visit_note', 'cert_stkh_id', 'appr_flag', 'note_tstamp'),
        Index('nc6_visit_note', 'appr_flag', 'trans_log_mtstamp', 'valid_entry_ind')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    visit_note_id = Column(Integer, primary_key=True, nullable=False)
    note_tstamp = Column(DateTime, index=True)
    visit_note_txt = Column(UnicodeText(1073741823))
    appr_flag = Column(Unicode(1), nullable=False)
    dictated_flag = Column(Unicode(1), nullable=False)
    override_userid = Column(Unicode(10))
    override_txt = Column(Unicode(200))
    override_inst_id = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    pt_focus_id = Column(Integer)
    pt_eval_id = Column(Integer)
    pt_event_id = Column(Integer)
    note_level = Column(ForeignKey(u'note_level.note_level'))
    note_typ = Column(ForeignKey(u'note_typ.note_typ'))
    valid_entry_ind = Column(Unicode(1))
    dcmmt_id = Column(Unicode(20))
    trans_trf_tstamp = Column(DateTime)
    priv_ind = Column(Unicode(1))
    pre_appr_ind = Column(Unicode(1))
    discipline_typ = Column(Integer)
    prof_typ = Column(Integer)
    creator_stkh_id = Column(Unicode(20), index=True)
    author_stkh_id = Column(Unicode(20), index=True)
    author_org_stkh_id = Column(Unicode(20))
    cert_stkh_id = Column(Unicode(20))
    img_dcmnt_id = Column(Unicode(14), index=True)
    visit_note_begin_txt = Column(Unicode(255))
    correction_ind = Column(Unicode(1))
    generated_ind = Column(Unicode(1))
    err_rsn_txt = Column(Unicode(255))
    completed_ind = Column(Unicode(1))
    rem_attach_ind = Column(Unicode(1))
    dcmnt_err_ind = Column(Unicode(1))
    appr_stkh_id = Column(Unicode(20))
    intf_created_ind = Column(Unicode(1))
    bill_acct_id = Column(Integer)
    review_req_ind = Column(Unicode(1))
    doc_file_typ = Column(Integer)
    doc_file_loc = Column(Unicode(255), index=True)
    revision_no = Column(Integer, server_default=text("((1))"))
    supervisor_stkh_id = Column(Unicode(20), index=True)
    signed_stkh_id = Column(Unicode(20), index=True)
    signed_tstamp = Column(DateTime)
    appr_tstamp = Column(DateTime)
    document_ser = Column(Integer)
    printed_ind = Column(Unicode(1))
    dcmnt_id_long = Column(Unicode(30))
    lt_archive_ind = Column(Unicode(1))
    template_name = Column(Unicode(50))
    account_billing_code_ser = Column(BigInteger)
    external_system_name = Column(Unicode(50))
    external_document_link = Column(Unicode(256))
    revised_ind = Column(Unicode(1))

    note_level1 = relationship(u'NoteLevel')
    note_typ1 = relationship(u'NoteTyp')
    pt = relationship(u'BillAcct')
    pt1 = relationship(u'PtTpEval')
    pt2 = relationship(u'PtTpFocu')


class VisitNoteDictation(Base):
    __tablename__ = 'visit_note_dictation'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'dictation_queue_id'], [u'dictation_queue.pt_id', u'dictation_queue.dictation_queue_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    visit_note_id = Column(Integer, primary_key=True, nullable=False)
    dictation_queue_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'DictationQueue')


class VisitNoteMh(Base):
    __tablename__ = 'visit_note_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    visit_note_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    note_tstamp = Column(DateTime)
    visit_note_txt = Column(UnicodeText(1073741823))
    appr_flag = Column(Unicode(1), nullable=False)
    dictated_flag = Column(Unicode(1), nullable=False)
    override_userid = Column(Unicode(10))
    override_txt = Column(Unicode(200))
    override_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    pt_focus_id = Column(Integer)
    pt_eval_id = Column(Integer)
    pt_event_id = Column(Integer)
    note_level = Column(Integer)
    note_typ = Column(Integer)
    valid_entry_ind = Column(Unicode(1))
    dcmmt_id = Column(Unicode(20))
    trans_trf_tstamp = Column(DateTime)
    priv_ind = Column(Unicode(1))
    pre_appr_ind = Column(Unicode(1))
    discipline_typ = Column(Integer)
    prof_typ = Column(Integer)
    creator_stkh_id = Column(Unicode(20))
    author_stkh_id = Column(Unicode(20))
    author_org_stkh_id = Column(Unicode(20))
    cert_stkh_id = Column(Unicode(20))
    img_dcmnt_id = Column(Unicode(14))
    visit_note_begin_txt = Column(Unicode(255))
    correction_ind = Column(Unicode(1))
    generated_ind = Column(Unicode(1))
    err_rsn_txt = Column(Unicode(255))
    completed_ind = Column(Unicode(1))
    rem_attach_ind = Column(Unicode(1))
    dcmnt_err_ind = Column(Unicode(1))
    appr_stkh_id = Column(Unicode(20))
    intf_created_ind = Column(Unicode(1))
    bill_acct_id = Column(Integer)
    review_req_ind = Column(Unicode(1))
    doc_file_typ = Column(Integer)
    doc_file_loc = Column(Unicode(255))
    supervisor_stkh_id = Column(Unicode(20))
    signed_stkh_id = Column(Unicode(20))
    signed_tstamp = Column(DateTime)
    appr_tstamp = Column(DateTime)
    document_ser = Column(Integer)
    printed_ind = Column(Unicode(1))
    dcmnt_id_long = Column(Unicode(30))
    lt_archive_ind = Column(Unicode(1))
    account_billing_code_ser = Column(BigInteger)
    template_name = Column(Unicode(50))
    external_system_name = Column(Unicode(50))
    external_document_link = Column(Unicode(256))
    revised_ind = Column(Unicode(1))


class VisitNoteNonRtf(Base):
    __tablename__ = 'visit_note_non_rtf'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    visit_note_id = Column(Integer, primary_key=True, nullable=False)
    visit_note_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class VisitNoteRcpt(Base):
    __tablename__ = 'visit_note_rcpt'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    visit_note_rcpt_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    visit_note_id = Column(Integer, primary_key=True, nullable=False)
    visit_note_revision_no = Column(Integer, nullable=False)
    ResourceSer = Column(BigInteger, nullable=False)
    corsp_mthd_cd = Column(Unicode(1), nullable=False)
    sent_tstamp = Column(DateTime)
    sent_hdr_txt = Column(UnicodeText(1073741823))
    sent_ftr_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    fax_status = Column(Unicode(1))
    fax_request_id = Column(Unicode(255))
    status_query_count = Column(Integer)
    fax_tel = Column(Unicode(64))


class VisitNoteTyp(Base):
    __tablename__ = 'visit_note_typ'

    visit_note_typ = Column(Integer, primary_key=True)
    visit_note_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class VisitReasonPnTemplate(Base):
    __tablename__ = 'visit_reason_pn_template'
    __table_args__ = (
        ForeignKeyConstraint(['template_inst_id', 'template_id'], [u'pn_template.inst_id', u'pn_template.template_id']),
        ForeignKeyConstraint(['user_inst_id', 'userid'], [u'userid.inst_id', u'userid.userid']),
        ForeignKeyConstraint(['visit_reason_inst_id', 'visit_reason_id'], [u'inst_visit_reason_typ.inst_id', u'inst_visit_reason_typ.visit_reason_id'])
    )

    visit_reason_id = Column(Integer, primary_key=True, nullable=False)
    visit_reason_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    user_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    template_id = Column(Integer, nullable=False)
    template_inst_id = Column(Unicode(30), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    template_inst = relationship(u'PnTemplate')
    user_inst = relationship(u'Userid')
    visit_reason_inst = relationship(u'InstVisitReasonTyp')


class VisitReasonTyp(Base):
    __tablename__ = 'visit_reason_typ'

    visit_reason_typ = Column(Integer, primary_key=True)
    visit_reason_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class VisitTask(Base):
    __tablename__ = 'visit_task'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    visit_reason_id = Column(Integer, primary_key=True, nullable=False)
    cat_name_typ = Column(ForeignKey(u'agenda_cat_typ.cat_name_typ'), primary_key=True, nullable=False)
    active_entry_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    req_ind = Column(Unicode(1))

    agenda_cat_typ = relationship(u'AgendaCatTyp')


class VisitTrackingTyp(Base):
    __tablename__ = 'visit_tracking_typ'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    visit_tracking_typ = Column(Integer, primary_key=True, nullable=False)
    visit_tracking_desc = Column(Unicode(30), nullable=False)
    visit_tracking_abrv = Column(Unicode(2), nullable=False)
    active_entry_ind = Column(Unicode(1), nullable=False)
    visit_tracking_seq = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class VisitTyp(Base):
    __tablename__ = 'visit_typ'

    visit_typ = Column(Integer, primary_key=True)
    visit_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class VrblOrder(Base):
    __tablename__ = 'vrbl_order'
    __table_args__ = (
        Index('nc9_vrbl_order', 'inst_id', 'completed_ind', 'applied_ind', 'valid_entry_ind', 'generated_ind'),
        Index('nc1_vrbl_order', 'vrbl_inst_id', 'vrbl_userid', 'trans_log_tstamp'),
        Index('nc2_vrbl_order', 'vrbl_inst_id', 'trans_log_userid'),
        Index('nc3_vrbl_order', 'trans_log_inst_id', 'trans_log_userid', 'trans_log_tstamp')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    vrbl_id = Column(Integer, primary_key=True, nullable=False)
    vrbl_userid = Column(Unicode(10), nullable=False)
    vrbl_inst_id = Column(Unicode(30), nullable=False)
    vrbl_tstamp = Column(DateTime, nullable=False, index=True)
    vrbl_txt = Column(UnicodeText(1073741823))
    vrbl_appr_tstamp = Column(DateTime)
    vrbl_appr_txt = Column(UnicodeText(1073741823))
    vrbl_appr_flag = Column(Unicode(1), nullable=False)
    vrbl_typ = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30))
    applied_ind = Column(Unicode(1))
    applied_txt = Column(UnicodeText(1073741823))
    applied_tstamp = Column(DateTime)
    valid_entry_ind = Column(Unicode(1))
    tp_name = Column(Unicode(20))
    tp_vers_no = Column(Unicode(10))
    date_tp_init = Column(DateTime)
    vrbl_source_typ = Column(Unicode(1))
    pln_affect_ind = Column(Unicode(1))
    trans_trf_tstamp = Column(DateTime)
    applied_inst_id = Column(Unicode(30))
    applied_userid = Column(Unicode(10))
    error_desc = Column(Unicode(255))
    error_userid = Column(Unicode(10))
    error_tstamp = Column(DateTime)
    error_inst_id = Column(Unicode(30))
    pt_visit_id = Column(Integer)
    inst_id = Column(Unicode(30))
    generated_ind = Column(Unicode(1))
    completed_ind = Column(Unicode(1))
    placer_order_no = Column(Unicode(20))
    hx_ind = Column(Unicode(1))
    appr_on_file_ind = Column(Unicode(1))
    order_typ = Column(Integer, index=True)
    po_time_frame = Column(Integer)
    po_time = Column(Integer)
    inst_po_id = Column(Integer)
    cat_typ = Column(Integer)
    po_seq_no = Column(Integer)
    po_desc = Column(Unicode(255))
    po_cat = Column(Unicode(40))
    po_details = Column(Unicode(255))
    po_sheet_id = Column(Integer)
    cancel_entry_ind = Column(Unicode(1))
    recurring_ind = Column(Unicode(1))
    vrbl_cmt = Column(Unicode(255))
    po_time_frame_date = Column(DateTime)
    app_cd = Column(Unicode(10))
    pthwy_order = Column(Unicode(1))
    ext_tp_name = Column(Unicode(40))
    dx_id = Column(Integer)


class VrblOrderDetail(Base):
    __tablename__ = 'vrbl_order_detail'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'vrbl_id'], [u'vrbl_order.pt_id', u'vrbl_order.vrbl_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    vrbl_id = Column(Integer, primary_key=True, nullable=False)
    vrbl_order_detail_id = Column(Integer, primary_key=True, nullable=False)
    po_desc = Column(Unicode(255), nullable=False)
    inst_po_id = Column(Integer)
    po_details = Column(Unicode(255))
    po_cat = Column(Unicode(40))
    po_desc_txt = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'VrblOrder')


class VrblOrderLink(Base):
    __tablename__ = 'vrbl_order_link'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    from_vrbl_id = Column(Integer, primary_key=True, nullable=False)
    to_vrbl_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    test_id = Column(Integer)


class VrblTyp(Base):
    __tablename__ = 'vrbl_typ'

    vrbl_typ = Column(Unicode(1), primary_key=True)
    vrbl_typ_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class VrtnRsnTyp(Base):
    __tablename__ = 'vrtn_rsn_typ'
    __table_args__ = (
        ForeignKeyConstraint(['fcn_area_typ', 'vrtn_typ'], [u'vrtn_typ.fcn_area_typ', u'vrtn_typ.vrtn_typ']),
    )

    fcn_area_typ = Column(Integer, primary_key=True, nullable=False)
    vrtn_typ = Column(Integer, primary_key=True, nullable=False)
    vrtn_rsn_typ = Column(Integer, primary_key=True, nullable=False)
    vrtn_rsn_sort_no = Column(Integer, nullable=False)
    vrtn_rsn_desc = Column(Unicode(255), nullable=False)
    valid_entry_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    vrtn_typ1 = relationship(u'VrtnTyp')


class VrtnSourceCl(Base):
    __tablename__ = 'vrtn_source_cls'

    vrtn_source_cls = Column(Integer, primary_key=True)
    cls_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class VrtnSourceTyp(Base):
    __tablename__ = 'vrtn_source_typ'

    vrtn_source_cls = Column(ForeignKey(u'vrtn_source_cls.vrtn_source_cls'), primary_key=True, nullable=False)
    vrtn_source_typ = Column(Integer, primary_key=True, nullable=False)
    typ_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(40))
    trans_trf_tstamp = Column(DateTime)

    vrtn_source_cl = relationship(u'VrtnSourceCl')


class VrtnTyp(Base):
    __tablename__ = 'vrtn_typ'

    fcn_area_typ = Column(ForeignKey(u'fcn_area_typ.fcn_area_typ'), primary_key=True, nullable=False)
    vrtn_typ = Column(Integer, primary_key=True, nullable=False)
    vrtn_typ_desc = Column(Unicode(40), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    fcn_area_typ1 = relationship(u'FcnAreaTyp')


t_vv_DiagnosisTableStandard = Table(
    'vv_DiagnosisTableStandard', metadata,
    Column('ListSelector', Unicode(32)),
    Column('LanguageId', Unicode(16)),
    Column('LookupValue', Unicode(64)),
    Column('Expression1', Unicode(64)),
    Column('DefaultFlag', Integer, nullable=False)
)


t_vv_HistologyTableStandard = Table(
    'vv_HistologyTableStandard', metadata,
    Column('ListSelector', Unicode(32)),
    Column('LanguageId', Unicode(16)),
    Column('LookupValue', Unicode(64)),
    Column('Expression1', Unicode(64))
)


t_vv_PrmryDiagnosisWithStages = Table(
    'vv_PrmryDiagnosisWithStages', metadata,
    Column('TStage', Unicode(32)),
    Column('NStage', Unicode(32)),
    Column('MStage', Unicode(32)),
    Column('AltStage', Unicode(32)),
    Column('TumorSize', Numeric(11, 4)),
    Column('StageMethod', Unicode(32)),
    Column('SummaryStage', Unicode(32)),
    Column('DiagnosisSer', Integer)
)


t_vv_PtQMResults = Table(
    'vv_PtQMResults', metadata,
    Column('pt_id', Unicode(20), nullable=False),
    Column('qmci_id', Integer, nullable=False),
    Column('qmc_id', Integer, nullable=False),
    Column('qmi_id', Integer, nullable=False),
    Column('qm_id', Integer, nullable=False),
    Column('compliance_prd_id', Integer, nullable=False),
    Column('population_ind', Unicode(1)),
    Column('exclusion_ind', Unicode(1)),
    Column('denominator_ind', Unicode(1)),
    Column('numerator_ind', Unicode(1)),
    Column('population_override_tstamp', DateTime),
    Column('exclusion_override_tstamp', DateTime),
    Column('denominator_override_tstamp', DateTime),
    Column('numerator_override_tstamp', DateTime),
    Column('include_manual', Unicode(1), nullable=False),
    Column('include_population', Unicode(1), nullable=False),
    Column('include_denominator', Unicode(1), nullable=False),
    Column('include_numerator', Unicode(1), nullable=False),
    Column('include_exclusion', Unicode(1), nullable=False)
)


t_vv_digit = Table(
    'vv_digit', metadata,
    Column('n', Integer, nullable=False)
)


class WorkstationPrinter(Base):
    __tablename__ = 'workstation_printer'

    workstation_printer_id = Column(Integer, primary_key=True)
    workstation_name = Column(Unicode(256), nullable=False)
    printer_typ = Column(Unicode(40), nullable=False)
    printer_name = Column(Unicode(256), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefActivityEvent(Base):
    __tablename__ = 'xref_activity_event'

    xref_activity_event_id = Column(Integer, primary_key=True)
    pt_id = Column(Unicode(20))
    pt_visit_id = Column(Integer)
    ActivityInstanceSer = Column(BigInteger)
    pt_actual_id = Column(Integer)
    event_typ = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefActivityQstr(Base):
    __tablename__ = 'xref_activity_qstr'

    ActivitySer = Column(BigInteger, primary_key=True, nullable=False)
    qstr_name = Column(Unicode(20), primary_key=True, nullable=False)
    qstr_title = Column(Unicode(50), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class XrefAgtDx(Base):
    __tablename__ = 'xref_agt_dx'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'dx_id'], [u'pt_dx.pt_id', u'pt_dx.dx_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    dx_id = Column(Integer, primary_key=True, nullable=False)
    agt_name = Column(Unicode(50), primary_key=True, nullable=False)
    date_started = Column(DateTime, primary_key=True, nullable=False)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtDx')


class XrefAgtFormularyDispLoc(Base):
    __tablename__ = 'xref_agt_formulary_disp_loc'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'agt_formulary_id'], [u'agt_formulary.inst_id', u'agt_formulary.agt_formulary_id']),
    )

    agt_formulary_disp_loc_id = Column(Unicode(20), primary_key=True)
    inst_id = Column(Unicode(30), nullable=False)
    agt_formulary_id = Column(Integer, nullable=False)
    disp_loc_id = Column(ForeignKey(u'disp_loc.disp_loc_id'), nullable=False)
    priority = Column(Integer, nullable=False)
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    disp_loc = relationship(u'DispLoc')
    inst = relationship(u'AgtFormulary')


class XrefAgtPt(Base):
    __tablename__ = 'xref_agt_pt'

    pt_id = Column(ForeignKey(u'pt.pt_id'), primary_key=True, nullable=False)
    agt_name = Column(Unicode(50), primary_key=True, nullable=False)
    dosage_form = Column(Integer, primary_key=True, nullable=False)
    dose_level = Column(Integer)
    date_started = Column(DateTime, primary_key=True, nullable=False)
    cum_dose_to_date = Column(Numeric(18, 4))
    date_ended = Column(DateTime)
    uom = Column(Integer)
    ind = Column(UnicodeText(1073741823))
    cum_uom = Column(Integer)
    dose_amount = Column(Numeric(11, 4))
    date_of_last_dose = Column(DateTime)
    admn_dose_frq_unit = Column(Integer)
    admn_frq_x = Column(Integer)
    admn_frq_unit = Column(Integer)
    admn_dur = Column(Integer)
    admn_route = Column(Integer)
    admn_dur_unit = Column(Integer)
    status = Column(Unicode(1))
    external_agt_flag = Column(Unicode(1))
    mthd_of_admn = Column(Unicode(255))
    drug_desc_id = Column(Unicode(6))
    date_approx_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    prn_ind = Column(Unicode(1))
    general_orders = Column(UnicodeText(1073741823))
    dose_amount_range = Column(Numeric(11, 4))
    medi_active_ind = Column(Unicode(1))
    active_chg_date = Column(DateTime)
    course_desc = Column(Unicode(255))
    dow_frq_unit = Column(Integer)
    week_frq_unit = Column(Integer)
    date_started_cd = Column(ForeignKey(u'date_cd.date_cd'))
    last_disp_date = Column(DateTime)
    agt_cls = Column(Unicode(10))
    prn_reason_typ = Column(Integer)
    dose_strength = Column(Unicode(15))
    strength_unit = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    prior_cum_dose = Column(Numeric(18, 4))
    cum_dose_cmt = Column(UnicodeText(1073741823))
    prior_cum_uom = Column(Integer)
    take_as_directed_ind = Column(Unicode(1))
    admn_frq_upper_x = Column(Integer)
    revision_no = Column(Integer, server_default=text("((1))"))
    app_cd = Column(Unicode(10))
    date_ended_cd = Column(Integer)
    err_rsn_txt = Column(Unicode(255))

    date_cd = relationship(u'DateCd')
    pt = relationship(u'Pt')


class XrefAgtPtExternal(Base):
    __tablename__ = 'xref_agt_pt_external'

    pt_id = Column(Unicode(20), nullable=False, index=True)
    xref_agt_pt_external_id = Column(Integer, primary_key=True)
    agt_name = Column(Unicode(50), nullable=False)
    dosage_form = Column(Integer, nullable=False)
    xref_agt_pt_ext_recon_ind = Column(Unicode(1), nullable=False, server_default=text("('N')"))
    xref_agt_pt_ext_added_ind = Column(Unicode(1))
    dose_level = Column(Integer)
    date_started = Column(DateTime)
    cum_dose_to_date = Column(Numeric(18, 4))
    date_ended = Column(DateTime)
    uom = Column(Integer)
    ind = Column(UnicodeText(1073741823))
    cum_uom = Column(Integer)
    dose_amount = Column(Numeric(11, 4))
    date_of_last_dose = Column(DateTime)
    admn_dose_frq_unit = Column(Integer)
    admn_frq_x = Column(Integer)
    admn_frq_unit = Column(Integer)
    admn_dur = Column(Integer)
    admn_route = Column(Integer)
    admn_dur_unit = Column(Integer)
    status = Column(Unicode(1))
    external_agt_flag = Column(Unicode(1))
    mthd_of_admn = Column(Unicode(255))
    drug_desc_id = Column(Unicode(6))
    date_approx_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    prn_ind = Column(Unicode(1))
    general_orders = Column(UnicodeText(1073741823))
    dose_amount_range = Column(Numeric(11, 4))
    medi_active_ind = Column(Unicode(1))
    active_chg_date = Column(DateTime)
    course_desc = Column(Unicode(255))
    dow_frq_unit = Column(Integer)
    week_frq_unit = Column(Integer)
    date_started_cd = Column(Integer)
    last_disp_date = Column(DateTime)
    agt_cls = Column(Unicode(10))
    prn_reason_typ = Column(Integer)
    dose_strength = Column(Unicode(15))
    strength_unit = Column(Integer)
    prior_cum_dose = Column(Numeric(18, 4))
    cum_dose_cmt = Column(UnicodeText(1073741823))
    prior_cum_uom = Column(Integer)
    take_as_directed_ind = Column(Unicode(1))
    admn_frq_upper_x = Column(Integer)
    app_cd = Column(Unicode(10))
    date_ended_cd = Column(Integer)
    err_rsn_txt = Column(Unicode(255))
    revision_no = Column(Integer, nullable=False, server_default=text("((1))"))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    Rxnorm_id = Column(Unicode(30))


class XrefAgtPtMh(Base):
    __tablename__ = 'xref_agt_pt_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    agt_name = Column(Unicode(50), primary_key=True, nullable=False)
    dosage_form = Column(Integer, primary_key=True, nullable=False)
    dose_level = Column(Integer)
    date_started = Column(DateTime, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    cum_dose_to_date = Column(Numeric(18, 4))
    date_ended = Column(DateTime)
    uom = Column(Integer)
    ind = Column(UnicodeText(1073741823))
    cum_uom = Column(Integer)
    dose_amount = Column(Numeric(11, 4))
    date_of_last_dose = Column(DateTime)
    admn_dose_frq_unit = Column(Integer)
    admn_frq_x = Column(Integer)
    admn_frq_unit = Column(Integer)
    admn_dur = Column(Integer)
    admn_route = Column(Integer)
    admn_dur_unit = Column(Integer)
    status = Column(Unicode(1))
    external_agt_flag = Column(Unicode(1))
    mthd_of_admn = Column(Unicode(255))
    drug_desc_id = Column(Unicode(6))
    date_approx_ind = Column(Unicode(1))
    valid_entry_ind = Column(Unicode(1))
    prn_ind = Column(Unicode(1))
    general_orders = Column(UnicodeText(1073741823))
    dose_amount_range = Column(Numeric(11, 4))
    medi_active_ind = Column(Unicode(1))
    active_chg_date = Column(DateTime)
    course_desc = Column(Unicode(255))
    dow_frq_unit = Column(Integer)
    week_frq_unit = Column(Integer)
    date_started_cd = Column(Integer)
    last_disp_date = Column(DateTime)
    agt_cls = Column(Unicode(10))
    prn_reason_typ = Column(Integer)
    dose_strength = Column(Unicode(15))
    strength_unit = Column(Integer)
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    prior_cum_dose = Column(Numeric(18, 4))
    cum_dose_cmt = Column(UnicodeText(1073741823))
    prior_cum_uom = Column(Integer)
    take_as_directed_ind = Column(Unicode(1))
    admn_frq_upper_x = Column(Integer)
    app_cd = Column(Unicode(10))
    date_ended_cd = Column(Integer)
    err_rsn_txt = Column(Unicode(255))


class XrefBaseTyp(Base):
    __tablename__ = 'xref_base_typ'

    from_base_typ = Column(Integer, primary_key=True, nullable=False)
    to_base_typ = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefCatGroup(Base):
    __tablename__ = 'xref_cat_group'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'fac_id', 'fac_group_id'], [u'fac_group.inst_id', u'fac_group.fac_id', u'fac_group.fac_group_id']),
        ForeignKeyConstraint(['inst_id', 'fac_id', 'fac_rqstn_no', 'fac_rqstn_cat_no'], [u'fac_rqstn_cat.inst_id', u'fac_rqstn_cat.fac_id', u'fac_rqstn_cat.fac_rqstn_no', u'fac_rqstn_cat.fac_rqstn_cat_no'])
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    fac_id = Column(Integer, primary_key=True, nullable=False)
    fac_group_id = Column(Integer, primary_key=True, nullable=False)
    fac_rqstn_no = Column(Unicode(20), primary_key=True, nullable=False)
    fac_rqstn_cat_no = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    result_group_order = Column(Integer)
    group_order_no = Column(Integer)

    inst = relationship(u'FacGroup')
    inst1 = relationship(u'FacRqstnCat')


class XrefCmteeIssueRcmd(Base):
    __tablename__ = 'xref_cmtee_issue_rcmd'

    cntee_issue_id = Column(Integer, primary_key=True, nullable=False)
    cmtee_issue_rcmd_id = Column(Integer, primary_key=True, nullable=False)
    seq_no = Column(Integer)
    ct_topic_typ = Column(Integer)
    ltr_template_id = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefDcmntCompTemplate(Base):
    __tablename__ = 'xref_dcmnt_comp_template'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'comp_template_id'], [u'pn_template.inst_id', u'pn_template.template_id']),
        ForeignKeyConstraint(['inst_id', 'dcmnt_template_id'], [u'pn_template.inst_id', u'pn_template.template_id'])
    )

    xref_dcmnt_comp_template_id = Column(Integer, primary_key=True, nullable=False)
    dcmnt_template_id = Column(Integer, nullable=False)
    comp_template_id = Column(Integer, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'PnTemplate', primaryjoin='XrefDcmntCompTemplate.inst_id == PnTemplate.inst_id')
    inst1 = relationship(u'PnTemplate', primaryjoin='XrefDcmntCompTemplate.inst_id == PnTemplate.inst_id')


class XrefDxBillEvent(Base):
    __tablename__ = 'xref_dx_bill_event'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'bill_event_id', 'pt_visit_id'], [u'bill_event.pt_id', u'bill_event.bill_event_id', u'bill_event.pt_visit_id']),
        ForeignKeyConstraint(['pt_id', 'dx_id'], [u'pt_dx.pt_id', u'pt_dx.dx_id']),
        Index('nc1_xref_dx_bill_event', 'pt_id', 'bill_event_id')
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    dx_id = Column(Integer, primary_key=True, nullable=False)
    bill_event_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    pt_visit_id = Column(Integer)
    dx_seq_no = Column(Integer)

    pt = relationship(u'BillEvent')
    pt1 = relationship(u'PtDx')


class XrefDxRx(Base):
    __tablename__ = 'xref_dx_rx'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_dx_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    rx_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefDxStg(Base):
    __tablename__ = 'xref_dx_stg'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_stage_id'], [u'pt_cncr_stg.pt_id', u'pt_cncr_stg.pt_stage_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_stage_id = Column(Integer, primary_key=True, nullable=False)
    pt_dx_id = Column(Integer, primary_key=True, nullable=False)
    cur_stg_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    app_cd = Column(Unicode(10))
    revision_no = Column(Integer, server_default=text("((1))"))

    pt = relationship(u'PtCncrStg')


class XrefDxStgMh(Base):
    __tablename__ = 'xref_dx_stg_mh'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_stage_id = Column(Integer, primary_key=True, nullable=False)
    pt_dx_id = Column(Integer, primary_key=True, nullable=False)
    revision_no = Column(Integer, primary_key=True, nullable=False)
    cur_stg_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    app_cd = Column(Unicode(10))


class XrefDxTp(Base):
    __tablename__ = 'xref_dx_tp'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'date_tp_init'], [u'pt_tp.pt_id', u'pt_tp.date_tp_init']),
        ForeignKeyConstraint(['pt_id', 'pt_dx_id'], [u'pt_dx.pt_id', u'pt_dx.dx_id'])
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_dx_id = Column(Integer, primary_key=True, nullable=False)
    date_tp_init = Column(DateTime, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtTp')
    pt1 = relationship(u'PtDx')


class XrefExamCompIcd(Base):
    __tablename__ = 'xref_exam_comp_icd'
    __table_args__ = (
        ForeignKeyConstraint(['cls_scheme_id', 'icd_cd'], [u'icd_dx.cls_scheme_id', u'icd_dx.icd_cd']),
    )

    exam_comp_id = Column(ForeignKey(u'exam_comp.exam_comp_id'), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    cls_scheme_id = Column(Integer, primary_key=True, nullable=False)
    icd_cd = Column(Unicode(16), primary_key=True, nullable=False)
    primary_cd_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    cls_scheme = relationship(u'IcdDx')
    exam_comp = relationship(u'ExamComp')


class XrefExamSystemCpt(Base):
    __tablename__ = 'xref_exam_system_cpt'

    system_typ_id = Column(Integer, primary_key=True, nullable=False)
    bill_em_cpt_typ = Column(Integer, primary_key=True, nullable=False)
    bill_em_cpt_count = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefFacGroup(Base):
    __tablename__ = 'xref_fac_group'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'fac_id', 'fac_comp_id'], [u'fac_comp.inst_id', u'fac_comp.fac_id', u'fac_comp.fac_comp_id']),
        ForeignKeyConstraint(['inst_id', 'fac_id', 'fac_group_id'], [u'fac_group.inst_id', u'fac_group.fac_id', u'fac_group.fac_group_id']),
        Index('nc3_xref_fac_group', 'inst_id', 'fac_id', 'typ_of_test', 'comp_name'),
        Index('nc2_xref_fac_group', 'inst_id', 'fac_id', 'fac_comp_id')
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    fac_id = Column(Integer, primary_key=True, nullable=False)
    fac_group_id = Column(Integer, primary_key=True, nullable=False)
    fac_comp_id = Column(Integer, primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20), index=True)
    comp_name = Column(Unicode(30))
    comp_order_no = Column(Integer)
    result_comp_order = Column(Integer)
    optional_ind = Column(Unicode(1))
    calc_typ = Column(Integer)
    calc_reltn_cd = Column(Unicode(1))
    calc_group = Column(Integer)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    calc_prcs_cd = Column(Unicode(1))
    configured_ind = Column(Unicode(1))

    inst = relationship(u'FacComp')
    inst1 = relationship(u'FacGroup')


class XrefHxCompIcd(Base):
    __tablename__ = 'xref_hx_comp_icd'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    hx_comp_id = Column(Integer, primary_key=True, nullable=False)
    cls_scheme_id = Column(Integer, primary_key=True, nullable=False)
    icd_cd = Column(Unicode(16), primary_key=True, nullable=False)
    default_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefIcd10ReadCd(Base):
    __tablename__ = 'xref_icd_10_read_cd'

    icd_cd = Column(Unicode(16), primary_key=True, nullable=False)
    read_cd = Column(Unicode(10), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class XrefIcdGroup(Base):
    __tablename__ = 'xref_icd_group'
    __table_args__ = (
        ForeignKeyConstraint(['cls_scheme_id', 'icd_cd'], [u'icd_dx.cls_scheme_id', u'icd_dx.icd_cd']),
    )

    icd_group_id = Column(ForeignKey(u'icd_group.icd_group_id'), primary_key=True, nullable=False)
    icd_cd = Column(Unicode(16), primary_key=True, nullable=False)
    cls_scheme_id = Column(Integer, primary_key=True, nullable=False)
    display_order_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    cls_scheme = relationship(u'IcdDx')
    icd_group = relationship(u'IcdGroup')


class XrefIcdIcdo(Base):
    __tablename__ = 'xref_icd_icdo'
    __table_args__ = (
        Index('nc1_xref_icd_icdo', 'icd_cls_scheme_id', 'icd_cd', 'icdo_site_cd'),
    )

    icd_cls_scheme_id = Column(Integer, primary_key=True, nullable=False)
    icd_cd = Column(Unicode(16), primary_key=True, nullable=False)
    icdo_site_cd = Column(Unicode(3), primary_key=True, nullable=False)
    behavior_cd = Column(Unicode(1), primary_key=True, nullable=False)
    unsure_ind = Column(Unicode(1), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefIcdTpCl(Base):
    __tablename__ = 'xref_icd_tp_cls'

    cls_scheme_id = Column(Integer, primary_key=True, nullable=False)
    icd_cd = Column(Unicode(16), primary_key=True, nullable=False)
    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefIcdoMorph(Base):
    __tablename__ = 'xref_icdo_morph'

    cls_scheme_id = Column(Integer, primary_key=True, nullable=False)
    icdo_site_cd = Column(Unicode(3), primary_key=True, nullable=False)
    morph_cd = Column(Unicode(4), primary_key=True, nullable=False)
    morph_cd_seq = Column(Integer, primary_key=True, nullable=False)
    behavior_cd = Column(Unicode(1), primary_key=True, nullable=False)
    exclus_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefIcdoTpCl(Base):
    __tablename__ = 'xref_icdo_tp_cls'
    __table_args__ = (
        ForeignKeyConstraint(['tp_cls_typ_id', 'tp_cls_value_id'], [u'tp_cls_value.tp_cls_typ_id', u'tp_cls_value.tp_cls_value_id']),
        Index('nc1_xref_icdo_tp_cls', 'tp_cls_typ_id', 'tp_cls_value_id')
    )

    icdo_site_cd = Column(Unicode(3), primary_key=True, nullable=False)
    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    dflt_icdo_for_site_ind = Column(Unicode(1))

    tp_cls_typ = relationship(u'TpClsValue')


class XrefInstDispLoc(Base):
    __tablename__ = 'xref_inst_disp_loc'

    inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True, nullable=False)
    disp_loc_id = Column(ForeignKey(u'disp_loc.disp_loc_id'), primary_key=True, nullable=False)
    priority = Column(Integer, nullable=False)
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    inst_view_ind = Column(Unicode(1))

    disp_loc = relationship(u'DispLoc')
    inst = relationship(u'Inst')


class XrefInstLocDispLoc(Base):
    __tablename__ = 'xref_inst_loc_disp_loc'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'loc_id'], [u'inst_loc.inst_id', u'inst_loc.loc_id']),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    loc_id = Column(Integer, primary_key=True, nullable=False)
    disp_loc_id = Column(ForeignKey(u'disp_loc.disp_loc_id'), primary_key=True, nullable=False)
    priority = Column(Integer, nullable=False)
    active_entry_ind = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    disp_loc = relationship(u'DispLoc')
    inst = relationship(u'InstLoc')


class XrefInstLocTracking(Base):
    __tablename__ = 'xref_inst_loc_tracking'

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    loc_id = Column(Integer, primary_key=True, nullable=False)
    visit_tracking_typ = Column(Integer, primary_key=True, nullable=False)
    reltn_typ = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefInstRqstn(Base):
    __tablename__ = 'xref_inst_rqstn'
    __table_args__ = (
        ForeignKeyConstraint(['fac_inst_id', 'fac_id', 'fac_rqstn_no'], [u'fac_rqstn.inst_id', u'fac_rqstn.fac_id', u'fac_rqstn.fac_rqstn_no']),
    )

    inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True, nullable=False)
    fac_inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    fac_id = Column(Integer, primary_key=True, nullable=False)
    fac_rqstn_no = Column(Unicode(20), primary_key=True, nullable=False)
    prty_of_rqstn = Column(Integer, nullable=False)
    intf_unsol_ind = Column(Unicode(1), nullable=False)
    elctrnc_transfer = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)

    fac_inst = relationship(u'FacRqstn')
    inst = relationship(u'Inst')


class XrefInstTestCompGroup(Base):
    __tablename__ = 'xref_inst_test_comp_group'
    __table_args__ = (
        Index('nc2_xref_inst_test_comp_group', 'inst_id', 'inst_test_comp_group_id'),
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    inst_test_comp_group_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    revision_no = Column(Integer, server_default=text("((1))"))


class XrefInvasiveTypTpCl(Base):
    __tablename__ = 'xref_invasive_typ_tp_cls'

    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    invasive_typ = Column(Integer, primary_key=True, nullable=False)
    seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefMarginStatusTpCl(Base):
    __tablename__ = 'xref_margin_status_tp_cls'

    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    margin_status_typ = Column(Integer, primary_key=True, nullable=False)
    seq_no = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefMorphIcd(Base):
    __tablename__ = 'xref_morph_icd'

    morph_cls_scheme_id = Column(Integer, primary_key=True, nullable=False)
    morph_cd = Column(Unicode(4), primary_key=True, nullable=False)
    behavior_cd = Column(Unicode(1), primary_key=True, nullable=False)
    icdo_site_cd = Column(Unicode(3), primary_key=True, nullable=False)
    sex_cd = Column(Unicode(1), primary_key=True, nullable=False)
    icd_cls_scheme_id = Column(Integer, primary_key=True, nullable=False)
    icd_cd = Column(Unicode(16), nullable=False)
    conv_grp = Column(Integer)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefMorphTpCl(Base):
    __tablename__ = 'xref_morph_tp_cls'

    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False, index=True)
    morph_cd = Column(Unicode(4), primary_key=True, nullable=False)
    behavior_cd = Column(Unicode(1), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefOptPtDose(Base):
    __tablename__ = 'xref_opt_pt_dose'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'dose_data_id', 'comp_name'], [u'pt_dose_data.pt_id', u'pt_dose_data.dose_data_id', u'pt_dose_data.comp_name']),
        ForeignKeyConstraint(['pt_id', 'pt_option_id'], [u'pt_option.pt_id', u'pt_option.pt_option_id'])
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    dose_data_id = Column(Integer, primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    pt_option_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtDoseDatum')
    pt1 = relationship(u'PtOption')


class XrefPnSecCat(Base):
    __tablename__ = 'xref_pn_sec_cat'

    pn_sec_code = Column(Unicode(10), primary_key=True, nullable=False)
    pn_cat_code = Column(Unicode(10), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefPnSystemComp(Base):
    __tablename__ = 'xref_pn_system_comp'

    from_comp_id = Column(Unicode(10), primary_key=True, nullable=False)
    to_comp_id = Column(Unicode(10), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefPtAeCmtee(Base):
    __tablename__ = 'xref_pt_ae_cmtee'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_ae_id = Column(Integer, primary_key=True, nullable=False)
    cmtee_id = Column(Integer, primary_key=True, nullable=False)
    cmtee_issue_id = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefPtRespHdrApptTask(Base):
    __tablename__ = 'xref_pt_resp_hdr_appt_task'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    qstr_name = Column(Unicode(20), primary_key=True, nullable=False)
    qstr_id = Column(Integer, primary_key=True, nullable=False)
    NonScheduledActivitySer = Column(BigInteger, primary_key=True, nullable=False, index=True)
    ScheduledActivitySer = Column(BigInteger, primary_key=True, nullable=False, index=True)
    req_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class XrefPtTxDx(Base):
    __tablename__ = 'xref_pt_tx_dx'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'pt_dx_id'], [u'pt_dx.pt_id', u'pt_dx.dx_id']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    pt_tx_id = Column(Integer, primary_key=True, nullable=False)
    pt_dx_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtDx')


class XrefRxPtDose(Base):
    __tablename__ = 'xref_rx_pt_dose'
    __table_args__ = (
        ForeignKeyConstraint(['pt_id', 'dose_data_id', 'comp_name'], [u'pt_dose_data.pt_id', u'pt_dose_data.dose_data_id', u'pt_dose_data.comp_name']),
    )

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    dose_data_id = Column(Integer, primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    rx_id = Column(Integer, primary_key=True, nullable=False)
    pt_visit_id = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    pt = relationship(u'PtDoseDatum')


class XrefRxTypInst(Base):
    __tablename__ = 'xref_rx_typ_inst'

    rx_typ = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(ForeignKey(u'inst.inst_id'), primary_key=True, nullable=False)
    billable_ind = Column(Unicode(1), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
    dflt_print_ind = Column(Unicode(1))

    inst = relationship(u'Inst')


class XrefSiteExam(Base):
    __tablename__ = 'xref_site_exam'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'system_typ_id'], [u'inst_exam_system.inst_id', u'inst_exam_system.system_typ_id']),
        ForeignKeyConstraint(['tp_cls_typ_id', 'tp_cls_value_id'], [u'tp_cls_value.tp_cls_typ_id', u'tp_cls_value.tp_cls_value_id'])
    )

    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    system_typ_id = Column(Integer, primary_key=True, nullable=False)
    system_desc = Column(Unicode(30))
    exam_cd = Column(Unicode(1))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    inst = relationship(u'InstExamSystem')
    tp_cls_typ = relationship(u'TpClsValue')


class XrefSiteTest(Base):
    __tablename__ = 'xref_site_test'
    __table_args__ = (
        ForeignKeyConstraint(['tp_cls_typ_id', 'tp_cls_value_id'], [u'tp_cls_value.tp_cls_typ_id', u'tp_cls_value.tp_cls_value_id']),
        ForeignKeyConstraint(['typ_of_test', 'comp_name'], [u'test_comp.typ_of_test', u'test_comp.comp_name'])
    )

    userid = Column(Unicode(10), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    aspect_name = Column(Unicode(30))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    tp_cls_typ = relationship(u'TpClsValue')
    test_comp = relationship(u'TestComp')


class XrefSnomedCd(Base):
    __tablename__ = 'xref_snomed_cd'

    snomed_typ_cd = Column(ForeignKey(u'xref_snomed_typ.snomed_typ_cd'), primary_key=True, nullable=False)
    xref_snomed_cd_value = Column(Unicode(20), primary_key=True, nullable=False)
    snomed_code_value = Column(Integer, nullable=False)
    snomed_description = Column(Unicode(280), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    xref_snomed_typ = relationship(u'XrefSnomedTyp')


class XrefSnomedTyp(Base):
    __tablename__ = 'xref_snomed_typ'

    snomed_typ_cd = Column(Integer, primary_key=True)
    xref_snomed_name = Column(Unicode(20), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefTestCompCpt(Base):
    __tablename__ = 'xref_test_comp_cpt'
    __table_args__ = (
        ForeignKeyConstraint(['typ_of_test', 'comp_name'], [u'test_comp.typ_of_test', u'test_comp.comp_name']),
    )

    typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    bill_em_cpt_typ = Column(ForeignKey(u'bill_em_cpt_typ.bill_em_cpt_typ'), primary_key=True, nullable=False)
    bill_em_cpt_count = Column(Integer, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    bill_em_cpt_typ1 = relationship(u'BillEmCptTyp')
    test_comp = relationship(u'TestComp')


class XrefTestTpCl(Base):
    __tablename__ = 'xref_test_tp_cls'

    tp_cls_typ_id = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_id = Column(Integer, primary_key=True, nullable=False)
    typ_of_test = Column(Unicode(20), primary_key=True, nullable=False)
    comp_name = Column(Unicode(30), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefTimeFrameBaseTyp(Base):
    __tablename__ = 'xref_time_frame_base_typ'

    time_frame_typ = Column(Integer, primary_key=True, nullable=False)
    base_typ = Column(Integer, primary_key=True, nullable=False)
    base_cls_typ = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefTpCl(Base):
    __tablename__ = 'xref_tp_cls'

    tp_cls_typ_from = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_from = Column(Integer, primary_key=True, nullable=False)
    tp_cls_typ_to = Column(Integer, primary_key=True, nullable=False)
    tp_cls_value_to = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefTpRule(Base):
    __tablename__ = 'xref_tp_rule'
    __table_args__ = (
        ForeignKeyConstraint(['inst_id', 'rule_id', 'rule_id_desc'], [u'rule_body.inst_id', u'rule_body.rule_id', u'rule_body.rule_id_desc']),
        ForeignKeyConstraint(['tp_name', 'tp_vers_no', 'phase_seq_no'], [u'phase.tp_name', u'phase.tp_vers_no', u'phase.phase_seq_no'])
    )

    tp_name = Column(Unicode(20), primary_key=True, nullable=False)
    tp_vers_no = Column(Unicode(10), primary_key=True, nullable=False)
    phase_seq_no = Column(Integer, primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    rule_id = Column(Integer, primary_key=True, nullable=False)
    rule_id_desc = Column(Unicode(40), primary_key=True, nullable=False)
    rule_cls = Column(Integer, nullable=False)
    req = Column(Unicode(1), nullable=False)
    rule_seq = Column(Unicode(10), nullable=False)
    rule_desc = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)
    active_ind = Column(Unicode(1))

    inst = relationship(u'RuleBody')
    phase = relationship(u'Phase')


class XrefTumGrpIcd(Base):
    __tablename__ = 'xref_tum_grp_icd'

    tum_grp_id = Column(Integer, primary_key=True, nullable=False)
    cls_scheme_id = Column(Integer, primary_key=True, nullable=False)
    icd_cd = Column(Unicode(16), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefUnitFcn(Base):
    __tablename__ = 'xref_unit_fcn'

    uom = Column(ForeignKey(u'unit_of_meas.uom'), primary_key=True, nullable=False)
    fcn_typ = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)

    unit_of_mea = relationship(u'UnitOfMea')


class XrefUomGroup(Base):
    __tablename__ = 'xref_uom_group'

    uom_group_id = Column(Integer, primary_key=True, nullable=False)
    uom_cat_id = Column(Integer, primary_key=True, nullable=False)
    uom = Column(Integer, primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XrefUseridPt(Base):
    __tablename__ = 'xref_userid_pt'

    pt_id = Column(Unicode(20), primary_key=True, nullable=False)
    inst_id = Column(Unicode(30), primary_key=True, nullable=False)
    userid = Column(Unicode(10), primary_key=True, nullable=False)
    trans_log_userid = Column(Unicode(10), nullable=False)
    trans_log_tstamp = Column(DateTime, nullable=False)
    trans_log_inst_id = Column(Unicode(30), nullable=False)
    trans_log_muserid = Column(Unicode(10), nullable=False)
    trans_log_mtstamp = Column(DateTime, nullable=False)
    trans_log_minst_id = Column(Unicode(30), nullable=False)
    trans_trf_tstamp = Column(DateTime)


class XsConfig(Base):
    __tablename__ = 'xs_config'
    __table_args__ = (
        Index('nc1_xs_config', 'config_class', 'config_name', 'config_key'),
    )

    xs_config = Column(Integer, primary_key=True)
    config_class = Column(Unicode(255), nullable=False)
    config_name = Column(Unicode(255), nullable=False)
    config_key = Column(Unicode(50), nullable=False)
    config_value = Column(Unicode(255), nullable=False)
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)


class XsHandler(Base):
    __tablename__ = 'xs_handler'

    xs_handler = Column(Integer, primary_key=True)
    full_class_name = Column(Unicode(255), index=True)
    class_body = Column(UnicodeText(1073741823))
    trans_log_userid = Column(Unicode(10))
    trans_log_tstamp = Column(DateTime)
    trans_log_inst_id = Column(Unicode(30))
    trans_log_muserid = Column(Unicode(10))
    trans_log_mtstamp = Column(DateTime)
    trans_log_minst_id = Column(Unicode(30))
    trans_trf_tstamp = Column(DateTime)
